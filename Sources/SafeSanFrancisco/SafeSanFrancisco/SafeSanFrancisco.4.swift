#if os(macOS)
import AppKit
#endif
#if os(iOS) || os(tvOS) || os(watchOS)
import UIKit
#endif
#if canImport(SwiftUI)
import SwiftUI
#endif
@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.ellipsis {
    public struct message {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “ellipsis.message.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "ellipsis.message.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “ellipsis.message.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "ellipsis.message.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “ellipsis.message.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "ellipsis.message.fill", configuration: configuration)
            }
            
            ///Creates the “ellipsis.message.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "ellipsis.message.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “ellipsis.message.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "ellipsis.message.fill")
            }
            
            ///Creates the “ellipsis.message.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "ellipsis.message.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.envelope.open {
    public struct badge {
        public struct clock {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.exclamationmark {
    public struct brakesignal {
        private init() {}
    }
    
    public struct lock {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “exclamationmark.lock.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "exclamationmark.lock.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “exclamationmark.lock.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "exclamationmark.lock.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “exclamationmark.lock.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "exclamationmark.lock.fill", configuration: configuration)
            }
            
            ///Creates the “exclamationmark.lock.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "exclamationmark.lock.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “exclamationmark.lock.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "exclamationmark.lock.fill")
            }
            
            ///Creates the “exclamationmark.lock.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "exclamationmark.lock.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct questionmark {
        public struct ar {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.externaldrive {
    public struct trianglebadge {
        public struct exclamationmark {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.externaldrive.badge {
    public struct exclamationmark {
        private init() {}
    }
    
    public struct questionmark {
        public struct ar {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.externaldrive.fill {
    public struct trianglebadge {
        public struct exclamationmark {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.externaldrive.fill.badge {
    public struct exclamationmark {
        private init() {}
    }
    
    public struct questionmark {
        public struct ar {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.face.smiling {
    public struct inverse {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.fanblades {
    public struct slash {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “fanblades.slash.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "fanblades.slash.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “fanblades.slash.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "fanblades.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “fanblades.slash.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "fanblades.slash.fill", configuration: configuration)
            }
            
            ///Creates the “fanblades.slash.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "fanblades.slash.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “fanblades.slash.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "fanblades.slash.fill")
            }
            
            ///Creates the “fanblades.slash.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "fanblades.slash.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.faxmachine {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “faxmachine.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "faxmachine.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “faxmachine.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "faxmachine.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “faxmachine.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "faxmachine.fill", configuration: configuration)
        }
        
        ///Creates the “faxmachine.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "faxmachine.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “faxmachine.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "faxmachine.fill")
        }
        
        ///Creates the “faxmachine.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "faxmachine.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.figure {
    public struct x2 {
        public struct and {
            public struct child {
                public struct holdinghands {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct arms {
            public struct open {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct _2 {
        public struct and {
            public struct child {
                public struct holdinghands {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct arms {
            public struct open {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct american {
        public struct football {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct and {
        public struct child {
            public struct holdinghands {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct archery {
        private init() {}
    }
    
    public struct arms {
        public struct open {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct australian {
        public struct football {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct badminton {
        private init() {}
    }
    
    public struct barre {
        private init() {}
    }
    
    public struct baseball {
        private init() {}
    }
    
    public struct basketball {
        private init() {}
    }
    
    public struct bowling {
        private init() {}
    }
    
    public struct boxing {
        private init() {}
    }
    
    public struct climbing {
        private init() {}
    }
    
    public struct cooldown {
        private init() {}
    }
    
    public struct core {
        public struct training {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct cricket {
        private init() {}
    }
    
    public struct cross {
        public struct training {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct curling {
        private init() {}
    }
    
    public struct dance {
        private init() {}
    }
    
    public struct disc {
        public struct sports {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct dress {
        public struct line {
            public struct vertical {
                public struct figure {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct elliptical {
        private init() {}
    }
    
    public struct equestrian {
        public struct sports {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct fall {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “figure.fall.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "figure.fall.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “figure.fall.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "figure.fall.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “figure.fall.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "figure.fall.circle.fill", configuration: configuration)
                }
                
                ///Creates the “figure.fall.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "figure.fall.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “figure.fall.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "figure.fall.circle.fill")
                }
                
                ///Creates the “figure.fall.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "figure.fall.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct fencing {
        private init() {}
    }
    
    public struct fishing {
        private init() {}
    }
    
    public struct flexibility {
        private init() {}
    }
    
    public struct golf {
        private init() {}
    }
    
    public struct gymnastics {
        private init() {}
    }
    
    public struct hand {
        public struct cycling {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct handball {
        private init() {}
    }
    
    public struct highintensity {
        public struct intervaltraining {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct hiking {
        private init() {}
    }
    
    public struct hockey {
        private init() {}
    }
    
    public struct hunting {
        private init() {}
    }
    
    public struct indoor {
        public struct cycle {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct jumprope {
        private init() {}
    }
    
    public struct kickboxing {
        private init() {}
    }
    
    public struct lacrosse {
        private init() {}
    }
    
    public struct martial {
        public struct arts {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct mind {
        public struct and {
            public struct body {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct mixed {
        public struct cardio {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct open {
        public struct water {
            public struct swim {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct outdoor {
        public struct cycle {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct pickleball {
        private init() {}
    }
    
    public struct pilates {
        private init() {}
    }
    
    public struct play {
        private init() {}
    }
    
    public struct pool {
        public struct swim {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct racquetball {
        private init() {}
    }
    
    public struct rolling {
        private init() {}
    }
    
    public struct rower {
        private init() {}
    }
    
    public struct rugby {
        private init() {}
    }
    
    public struct run {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “figure.run.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "figure.run.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “figure.run.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "figure.run.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “figure.run.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "figure.run.circle.fill", configuration: configuration)
                }
                
                ///Creates the “figure.run.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "figure.run.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “figure.run.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "figure.run.circle.fill")
                }
                
                ///Creates the “figure.run.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "figure.run.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct sailing {
        private init() {}
    }
    
    public struct skating {
        private init() {}
    }
    
    public struct skiing {
        public struct crosscountry {
            private init() {}
        }
        
        public struct downhill {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct snowboarding {
        private init() {}
    }
    
    public struct soccer {
        private init() {}
    }
    
    public struct socialdance {
        private init() {}
    }
    
    public struct softball {
        private init() {}
    }
    
    public struct squash {
        private init() {}
    }
    
    public struct stair {
        public struct stepper {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct stairs {
        private init() {}
    }
    
    public struct step {
        public struct training {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct strengthtraining {
        public struct functional {
            private init() {}
        }
        
        public struct traditional {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct surfing {
        private init() {}
    }
    
    public struct table {
        public struct tennis {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct taichi {
        private init() {}
    }
    
    public struct tennis {
        private init() {}
    }
    
    public struct track {
        public struct and {
            public struct field {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct volleyball {
        private init() {}
    }
    
    public struct water {
        public struct fitness {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct waterpolo {
        private init() {}
    }
    
    public struct wrestling {
        private init() {}
    }
    
    public struct yoga {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.figure.roll {
    public struct runningpace {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.figure.walk {
    public struct arrival {
        private init() {}
    }
    
    public struct departure {
        private init() {}
    }
    
    public struct motion {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.film {
    public struct stack {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “film.stack.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "film.stack.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “film.stack.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "film.stack.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “film.stack.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "film.stack.fill", configuration: configuration)
            }
            
            ///Creates the “film.stack.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "film.stack.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “film.stack.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "film.stack.fill")
            }
            
            ///Creates the “film.stack.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "film.stack.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.flag {
    public struct checkered {
        public struct x2 {
            public struct crossed {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct _2 {
            public struct crossed {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.flag.x2.crossed {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flag.2.crossed.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flag.2.crossed.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flag.2.crossed.circle.fill", configuration: configuration)
            }
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flag.2.crossed.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “flag.2.crossed.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flag.2.crossed.circle.fill")
            }
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flag.2.crossed.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.flag._2.crossed {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flag.2.crossed.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flag.2.crossed.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flag.2.crossed.circle.fill", configuration: configuration)
            }
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flag.2.crossed.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “flag.2.crossed.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flag.2.crossed.circle.fill")
            }
            
            ///Creates the “flag.2.crossed.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flag.2.crossed.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.forward.end {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “forward.end.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "forward.end.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “forward.end.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "forward.end.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “forward.end.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "forward.end.circle.fill", configuration: configuration)
            }
            
            ///Creates the “forward.end.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "forward.end.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “forward.end.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "forward.end.circle.fill")
            }
            
            ///Creates the “forward.end.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "forward.end.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.gauge {
    public struct high {
        private init() {}
    }
    
    public struct low {
        private init() {}
    }
    
    public struct medium {
        public struct badge {
            public struct minus {
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.gear.badge {
    public struct rtl {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.gearshape {
    public struct arrow {
        public struct triangle {
            public struct x2 {
                public struct circlepath {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct _2 {
                public struct circlepath {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.globe {
    public struct central {
        public struct south {
            public struct asia {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “globe.central.south.asia.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "globe.central.south.asia.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “globe.central.south.asia.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "globe.central.south.asia.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “globe.central.south.asia.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "globe.central.south.asia.fill", configuration: configuration)
                    }
                    
                    ///Creates the “globe.central.south.asia.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "globe.central.south.asia.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “globe.central.south.asia.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "globe.central.south.asia.fill")
                    }
                    
                    ///Creates the “globe.central.south.asia.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "globe.central.south.asia.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct desk {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “globe.desk.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "globe.desk.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “globe.desk.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "globe.desk.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “globe.desk.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "globe.desk.fill", configuration: configuration)
            }
            
            ///Creates the “globe.desk.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "globe.desk.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “globe.desk.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "globe.desk.fill")
            }
            
            ///Creates the “globe.desk.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "globe.desk.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.hand {
    public struct app {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “hand.app.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hand.app.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “hand.app.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hand.app.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “hand.app.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hand.app.fill", configuration: configuration)
            }
            
            ///Creates the “hand.app.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hand.app.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “hand.app.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hand.app.fill")
            }
            
            ///Creates the “hand.app.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hand.app.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.hand.raised {
    public struct fingers {
        public struct spread {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hand.raised.fingers.spread.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.raised.fingers.spread.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hand.raised.fingers.spread.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.raised.fingers.spread.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hand.raised.fingers.spread.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.raised.fingers.spread.fill", configuration: configuration)
                }
                
                ///Creates the “hand.raised.fingers.spread.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.raised.fingers.spread.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hand.raised.fingers.spread.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.raised.fingers.spread.fill")
                }
                
                ///Creates the “hand.raised.fingers.spread.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.raised.fingers.spread.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.hearingdevice {
    public struct and {
        public struct signal {
            public struct meter {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “hearingdevice.and.signal.meter.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "hearingdevice.and.signal.meter.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “hearingdevice.and.signal.meter.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "hearingdevice.and.signal.meter.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “hearingdevice.and.signal.meter.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "hearingdevice.and.signal.meter.fill", configuration: configuration)
                    }
                    
                    ///Creates the “hearingdevice.and.signal.meter.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "hearingdevice.and.signal.meter.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “hearingdevice.and.signal.meter.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "hearingdevice.and.signal.meter.fill")
                    }
                    
                    ///Creates the “hearingdevice.and.signal.meter.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "hearingdevice.and.signal.meter.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.hearingdevice.ear {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “hearingdevice.ear.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "hearingdevice.ear.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “hearingdevice.ear.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "hearingdevice.ear.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “hearingdevice.ear.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "hearingdevice.ear.fill", configuration: configuration)
        }
        
        ///Creates the “hearingdevice.ear.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "hearingdevice.ear.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “hearingdevice.ear.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "hearingdevice.ear.fill")
        }
        
        ///Creates the “hearingdevice.ear.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "hearingdevice.ear.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.hifispeaker.and.appletv {
    public struct rtl {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.hifispeaker.and.appletv.fill {
    public struct rtl {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.homepod.and.appletv {
    public struct rtl {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.homepod.and.appletv.fill {
    public struct rtl {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.homepodmini.and.appletv {
    public struct rtl {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.homepodmini.and.appletv.fill {
    public struct rtl {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.hurricane {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “hurricane.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hurricane.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “hurricane.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hurricane.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “hurricane.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hurricane.circle.fill", configuration: configuration)
            }
            
            ///Creates the “hurricane.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hurricane.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “hurricane.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hurricane.circle.fill")
            }
            
            ///Creates the “hurricane.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hurricane.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.info {
    public struct bubble {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “info.bubble.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "info.bubble.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “info.bubble.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "info.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “info.bubble.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "info.bubble.fill", configuration: configuration)
            }
            
            ///Creates the “info.bubble.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "info.bubble.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “info.bubble.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "info.bubble.fill")
            }
            
            ///Creates the “info.bubble.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "info.bubble.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct square {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “info.square.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "info.square.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “info.square.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "info.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “info.square.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "info.square.fill", configuration: configuration)
            }
            
            ///Creates the “info.square.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "info.square.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “info.square.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "info.square.fill")
            }
            
            ///Creates the “info.square.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "info.square.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.keyboard.badge {
    public struct eye {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “keyboard.badge.eye.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "keyboard.badge.eye.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “keyboard.badge.eye.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "keyboard.badge.eye.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “keyboard.badge.eye.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "keyboard.badge.eye.fill", configuration: configuration)
            }
            
            ///Creates the “keyboard.badge.eye.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "keyboard.badge.eye.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “keyboard.badge.eye.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "keyboard.badge.eye.fill")
            }
            
            ///Creates the “keyboard.badge.eye.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "keyboard.badge.eye.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.keyboard.badge.ellipsis {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “keyboard.badge.ellipsis.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.badge.ellipsis.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “keyboard.badge.ellipsis.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.badge.ellipsis.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “keyboard.badge.ellipsis.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.badge.ellipsis.fill", configuration: configuration)
        }
        
        ///Creates the “keyboard.badge.ellipsis.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.badge.ellipsis.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “keyboard.badge.ellipsis.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.badge.ellipsis.fill")
        }
        
        ///Creates the “keyboard.badge.ellipsis.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.badge.ellipsis.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.keyboard.chevron.compact.down {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “keyboard.chevron.compact.down.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.chevron.compact.down.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “keyboard.chevron.compact.down.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.chevron.compact.down.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “keyboard.chevron.compact.down.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.chevron.compact.down.fill", configuration: configuration)
        }
        
        ///Creates the “keyboard.chevron.compact.down.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.chevron.compact.down.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “keyboard.chevron.compact.down.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.chevron.compact.down.fill")
        }
        
        ///Creates the “keyboard.chevron.compact.down.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.chevron.compact.down.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.keyboard.chevron.compact.left {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “keyboard.chevron.compact.left.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.chevron.compact.left.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “keyboard.chevron.compact.left.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.chevron.compact.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “keyboard.chevron.compact.left.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.chevron.compact.left.fill", configuration: configuration)
        }
        
        ///Creates the “keyboard.chevron.compact.left.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.chevron.compact.left.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “keyboard.chevron.compact.left.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.chevron.compact.left.fill")
        }
        
        ///Creates the “keyboard.chevron.compact.left.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.chevron.compact.left.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.keyboard.onehanded.left {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “keyboard.onehanded.left.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.onehanded.left.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “keyboard.onehanded.left.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.onehanded.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “keyboard.onehanded.left.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.onehanded.left.fill", configuration: configuration)
        }
        
        ///Creates the “keyboard.onehanded.left.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.onehanded.left.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “keyboard.onehanded.left.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.onehanded.left.fill")
        }
        
        ///Creates the “keyboard.onehanded.left.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.onehanded.left.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.keyboard.onehanded.right {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “keyboard.onehanded.right.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.onehanded.right.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “keyboard.onehanded.right.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "keyboard.onehanded.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “keyboard.onehanded.right.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.onehanded.right.fill", configuration: configuration)
        }
        
        ///Creates the “keyboard.onehanded.right.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "keyboard.onehanded.right.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “keyboard.onehanded.right.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.onehanded.right.fill")
        }
        
        ///Creates the “keyboard.onehanded.right.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "keyboard.onehanded.right.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.laptopcomputer.and {
    public struct ipad {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.light {
    public struct beacon {
        public struct max {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “light.beacon.max.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.beacon.max.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “light.beacon.max.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.beacon.max.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “light.beacon.max.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.beacon.max.fill", configuration: configuration)
                }
                
                ///Creates the “light.beacon.max.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.beacon.max.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “light.beacon.max.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.beacon.max.fill")
                }
                
                ///Creates the “light.beacon.max.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.beacon.max.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct min {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “light.beacon.min.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.beacon.min.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “light.beacon.min.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.beacon.min.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “light.beacon.min.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.beacon.min.fill", configuration: configuration)
                }
                
                ///Creates the “light.beacon.min.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.beacon.min.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “light.beacon.min.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.beacon.min.fill")
                }
                
                ///Creates the “light.beacon.min.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.beacon.min.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct cylindrical {
        public struct ceiling {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “light.cylindrical.ceiling.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.cylindrical.ceiling.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “light.cylindrical.ceiling.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.cylindrical.ceiling.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “light.cylindrical.ceiling.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.cylindrical.ceiling.fill", configuration: configuration)
                }
                
                ///Creates the “light.cylindrical.ceiling.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.cylindrical.ceiling.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “light.cylindrical.ceiling.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.cylindrical.ceiling.fill")
                }
                
                ///Creates the “light.cylindrical.ceiling.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.cylindrical.ceiling.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct inverse {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct panel {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “light.panel.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "light.panel.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “light.panel.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "light.panel.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “light.panel.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "light.panel.fill", configuration: configuration)
            }
            
            ///Creates the “light.panel.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "light.panel.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “light.panel.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "light.panel.fill")
            }
            
            ///Creates the “light.panel.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "light.panel.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct recessed {
        public struct x3 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “light.recessed.3.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.recessed.3.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “light.recessed.3.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.recessed.3.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “light.recessed.3.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.recessed.3.fill", configuration: configuration)
                }
                
                ///Creates the “light.recessed.3.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.recessed.3.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “light.recessed.3.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.recessed.3.fill")
                }
                
                ///Creates the “light.recessed.3.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.recessed.3.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct inverse {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct _3 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “light.recessed.3.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.recessed.3.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “light.recessed.3.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.recessed.3.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “light.recessed.3.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.recessed.3.fill", configuration: configuration)
                }
                
                ///Creates the “light.recessed.3.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.recessed.3.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “light.recessed.3.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.recessed.3.fill")
                }
                
                ///Creates the “light.recessed.3.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.recessed.3.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct inverse {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “light.recessed.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "light.recessed.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “light.recessed.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "light.recessed.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “light.recessed.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "light.recessed.fill", configuration: configuration)
            }
            
            ///Creates the “light.recessed.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "light.recessed.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “light.recessed.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "light.recessed.fill")
            }
            
            ///Creates the “light.recessed.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "light.recessed.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct inverse {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct ribbon {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “light.ribbon.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "light.ribbon.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “light.ribbon.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "light.ribbon.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “light.ribbon.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "light.ribbon.fill", configuration: configuration)
            }
            
            ///Creates the “light.ribbon.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "light.ribbon.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “light.ribbon.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "light.ribbon.fill")
            }
            
            ///Creates the “light.ribbon.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "light.ribbon.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct strip {
        public struct x2 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “light.strip.2.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.strip.2.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “light.strip.2.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.strip.2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “light.strip.2.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.strip.2.fill", configuration: configuration)
                }
                
                ///Creates the “light.strip.2.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.strip.2.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “light.strip.2.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.strip.2.fill")
                }
                
                ///Creates the “light.strip.2.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.strip.2.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct _2 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “light.strip.2.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.strip.2.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “light.strip.2.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "light.strip.2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “light.strip.2.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.strip.2.fill", configuration: configuration)
                }
                
                ///Creates the “light.strip.2.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "light.strip.2.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “light.strip.2.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.strip.2.fill")
                }
                
                ///Creates the “light.strip.2.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "light.strip.2.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.lightbulb {
    public struct x2 {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “lightbulb.2.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lightbulb.2.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “lightbulb.2.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lightbulb.2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “lightbulb.2.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lightbulb.2.fill", configuration: configuration)
            }
            
            ///Creates the “lightbulb.2.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lightbulb.2.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “lightbulb.2.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lightbulb.2.fill")
            }
            
            ///Creates the “lightbulb.2.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lightbulb.2.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct _2 {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “lightbulb.2.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lightbulb.2.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “lightbulb.2.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lightbulb.2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “lightbulb.2.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lightbulb.2.fill", configuration: configuration)
            }
            
            ///Creates the “lightbulb.2.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lightbulb.2.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “lightbulb.2.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lightbulb.2.fill")
            }
            
            ///Creates the “lightbulb.2.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lightbulb.2.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct led {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “lightbulb.led.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lightbulb.led.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “lightbulb.led.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lightbulb.led.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “lightbulb.led.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lightbulb.led.fill", configuration: configuration)
            }
            
            ///Creates the “lightbulb.led.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lightbulb.led.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “lightbulb.led.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lightbulb.led.fill")
            }
            
            ///Creates the “lightbulb.led.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lightbulb.led.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct wide {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lightbulb.led.wide.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lightbulb.led.wide.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lightbulb.led.wide.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lightbulb.led.wide.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lightbulb.led.wide.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lightbulb.led.wide.fill", configuration: configuration)
                }
                
                ///Creates the “lightbulb.led.wide.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lightbulb.led.wide.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lightbulb.led.wide.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lightbulb.led.wide.fill")
                }
                
                ///Creates the “lightbulb.led.wide.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lightbulb.led.wide.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.list {
    public struct clipboard {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “list.clipboard.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "list.clipboard.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “list.clipboard.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "list.clipboard.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “list.clipboard.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "list.clipboard.fill", configuration: configuration)
            }
            
            ///Creates the “list.clipboard.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "list.clipboard.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “list.clipboard.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "list.clipboard.fill")
            }
            
            ///Creates the “list.clipboard.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "list.clipboard.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.list.bullet {
    public struct clipboard {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “list.bullet.clipboard.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "list.bullet.clipboard.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “list.bullet.clipboard.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "list.bullet.clipboard.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “list.bullet.clipboard.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "list.bullet.clipboard.fill", configuration: configuration)
            }
            
            ///Creates the “list.bullet.clipboard.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "list.bullet.clipboard.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “list.bullet.clipboard.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "list.bullet.clipboard.fill")
            }
            
            ///Creates the “list.bullet.clipboard.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "list.bullet.clipboard.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.location.slash {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “location.slash.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "location.slash.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “location.slash.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "location.slash.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “location.slash.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "location.slash.circle.fill", configuration: configuration)
            }
            
            ///Creates the “location.slash.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "location.slash.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “location.slash.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "location.slash.circle.fill")
            }
            
            ///Creates the “location.slash.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "location.slash.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.lock {
    public struct trianglebadge {
        public struct exclamationmark {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lock.trianglebadge.exclamationmark.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.trianglebadge.exclamationmark.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lock.trianglebadge.exclamationmark.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.trianglebadge.exclamationmark.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lock.trianglebadge.exclamationmark.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.trianglebadge.exclamationmark.fill", configuration: configuration)
                }
                
                ///Creates the “lock.trianglebadge.exclamationmark.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.trianglebadge.exclamationmark.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lock.trianglebadge.exclamationmark.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.trianglebadge.exclamationmark.fill")
                }
                
                ///Creates the “lock.trianglebadge.exclamationmark.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.trianglebadge.exclamationmark.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.lock.open {
    public struct trianglebadge {
        public struct exclamationmark {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lock.open.trianglebadge.exclamationmark.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.open.trianglebadge.exclamationmark.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lock.open.trianglebadge.exclamationmark.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.open.trianglebadge.exclamationmark.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lock.open.trianglebadge.exclamationmark.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.open.trianglebadge.exclamationmark.fill", configuration: configuration)
                }
                
                ///Creates the “lock.open.trianglebadge.exclamationmark.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.open.trianglebadge.exclamationmark.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lock.open.trianglebadge.exclamationmark.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.open.trianglebadge.exclamationmark.fill")
                }
                
                ///Creates the “lock.open.trianglebadge.exclamationmark.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.open.trianglebadge.exclamationmark.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.message {
    public struct badge {
        public struct circle {
            public struct fill {
                public struct rtl {
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “message.badge.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "message.badge.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “message.badge.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "message.badge.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “message.badge.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "message.badge.circle.fill", configuration: configuration)
                }
                
                ///Creates the “message.badge.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "message.badge.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “message.badge.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "message.badge.circle.fill")
                }
                
                ///Creates the “message.badge.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "message.badge.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rtl {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            public struct rtl {
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “message.badge.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "message.badge.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “message.badge.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "message.badge.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “message.badge.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "message.badge.fill", configuration: configuration)
            }
            
            ///Creates the “message.badge.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "message.badge.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “message.badge.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "message.badge.fill")
            }
            
            ///Creates the “message.badge.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "message.badge.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct filled {
            public struct fill {
                public struct rtl {
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “message.badge.filled.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "message.badge.filled.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “message.badge.filled.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "message.badge.filled.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “message.badge.filled.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "message.badge.filled.fill", configuration: configuration)
                }
                
                ///Creates the “message.badge.filled.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "message.badge.filled.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “message.badge.filled.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "message.badge.filled.fill")
                }
                
                ///Creates the “message.badge.filled.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "message.badge.filled.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.mic {
    public struct and {
        public struct signal {
            public struct meter {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “mic.and.signal.meter.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "mic.and.signal.meter.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “mic.and.signal.meter.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "mic.and.signal.meter.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “mic.and.signal.meter.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "mic.and.signal.meter.fill", configuration: configuration)
                    }
                    
                    ///Creates the “mic.and.signal.meter.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "mic.and.signal.meter.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “mic.and.signal.meter.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "mic.and.signal.meter.fill")
                    }
                    
                    ///Creates the “mic.and.signal.meter.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "mic.and.signal.meter.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.mic.badge {
    public struct xmark {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.mic.fill.badge {
    public struct xmark {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.moon {
    public struct haze {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “moon.haze.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "moon.haze.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “moon.haze.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "moon.haze.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “moon.haze.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "moon.haze.circle.fill", configuration: configuration)
                }
                
                ///Creates the “moon.haze.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "moon.haze.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “moon.haze.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "moon.haze.circle.fill")
                }
                
                ///Creates the “moon.haze.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "moon.haze.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “moon.haze.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "moon.haze.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “moon.haze.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "moon.haze.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “moon.haze.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "moon.haze.fill", configuration: configuration)
            }
            
            ///Creates the “moon.haze.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "moon.haze.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “moon.haze.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "moon.haze.fill")
            }
            
            ///Creates the “moon.haze.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "moon.haze.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.moon.stars {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “moon.stars.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "moon.stars.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “moon.stars.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "moon.stars.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “moon.stars.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "moon.stars.circle.fill", configuration: configuration)
            }
            
            ///Creates the “moon.stars.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "moon.stars.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “moon.stars.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "moon.stars.circle.fill")
            }
            
            ///Creates the “moon.stars.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "moon.stars.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.nosign {
    public struct app {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “nosign.app.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "nosign.app.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “nosign.app.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "nosign.app.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “nosign.app.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "nosign.app.fill", configuration: configuration)
            }
            
            ///Creates the “nosign.app.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "nosign.app.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “nosign.app.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "nosign.app.fill")
            }
            
            ///Creates the “nosign.app.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "nosign.app.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.opticaldisc {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “opticaldisc.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "opticaldisc.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “opticaldisc.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "opticaldisc.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “opticaldisc.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "opticaldisc.fill", configuration: configuration)
        }
        
        ///Creates the “opticaldisc.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "opticaldisc.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “opticaldisc.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "opticaldisc.fill")
        }
        
        ///Creates the “opticaldisc.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "opticaldisc.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.parkingsign {
    public struct brakesignal {
        public struct slash {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.pencil {
    public struct line {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.pencil.and {
    public struct ruler {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “pencil.and.ruler.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "pencil.and.ruler.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “pencil.and.ruler.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "pencil.and.ruler.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “pencil.and.ruler.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "pencil.and.ruler.fill", configuration: configuration)
            }
            
            ///Creates the “pencil.and.ruler.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "pencil.and.ruler.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “pencil.and.ruler.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "pencil.and.ruler.fill")
            }
            
            ///Creates the “pencil.and.ruler.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "pencil.and.ruler.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.person {
    public struct bust {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “person.bust.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "person.bust.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “person.bust.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "person.bust.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “person.bust.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "person.bust.fill", configuration: configuration)
            }
            
            ///Creates the “person.bust.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "person.bust.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “person.bust.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "person.bust.fill")
            }
            
            ///Creates the “person.bust.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "person.bust.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct line {
        public struct dotted {
            public struct person {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “person.line.dotted.person.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.line.dotted.person.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “person.line.dotted.person.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.line.dotted.person.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “person.line.dotted.person.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.line.dotted.person.fill", configuration: configuration)
                    }
                    
                    ///Creates the “person.line.dotted.person.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.line.dotted.person.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “person.line.dotted.person.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.line.dotted.person.fill")
                    }
                    
                    ///Creates the “person.line.dotted.person.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.line.dotted.person.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.person.x2 {
    public struct badge {
        public struct gearshape {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.2.badge.gearshape.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.2.badge.gearshape.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.2.badge.gearshape.fill", configuration: configuration)
                }
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.2.badge.gearshape.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “person.2.badge.gearshape.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.2.badge.gearshape.fill")
                }
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.2.badge.gearshape.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct gobackward {
        private init() {}
    }
    
    public struct slash {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “person.2.slash.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "person.2.slash.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “person.2.slash.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "person.2.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “person.2.slash.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "person.2.slash.fill", configuration: configuration)
            }
            
            ///Creates the “person.2.slash.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "person.2.slash.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “person.2.slash.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "person.2.slash.fill")
            }
            
            ///Creates the “person.2.slash.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "person.2.slash.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.person._2 {
    public struct badge {
        public struct gearshape {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.2.badge.gearshape.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.2.badge.gearshape.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.2.badge.gearshape.fill", configuration: configuration)
                }
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.2.badge.gearshape.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “person.2.badge.gearshape.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.2.badge.gearshape.fill")
                }
                
                ///Creates the “person.2.badge.gearshape.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.2.badge.gearshape.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct gobackward {
        private init() {}
    }
    
    public struct slash {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “person.2.slash.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "person.2.slash.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “person.2.slash.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "person.2.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “person.2.slash.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "person.2.slash.fill", configuration: configuration)
            }
            
            ///Creates the “person.2.slash.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "person.2.slash.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “person.2.slash.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "person.2.slash.fill")
            }
            
            ///Creates the “person.2.slash.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "person.2.slash.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.person.and {
    public struct background {
        public struct dotted {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.person.badge {
    public struct shield {
        public struct checkmark {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “person.badge.shield.checkmark.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.badge.shield.checkmark.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “person.badge.shield.checkmark.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.badge.shield.checkmark.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “person.badge.shield.checkmark.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.badge.shield.checkmark.fill", configuration: configuration)
                }
                
                ///Creates the “person.badge.shield.checkmark.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.badge.shield.checkmark.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “person.badge.shield.checkmark.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.badge.shield.checkmark.fill")
                }
                
                ///Creates the “person.badge.shield.checkmark.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.badge.shield.checkmark.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.person.crop.rectangle {
    public struct badge {
        public struct plus {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “person.crop.rectangle.badge.plus.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.crop.rectangle.badge.plus.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “person.crop.rectangle.badge.plus.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.crop.rectangle.badge.plus.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “person.crop.rectangle.badge.plus.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.crop.rectangle.badge.plus.fill", configuration: configuration)
                }
                
                ///Creates the “person.crop.rectangle.badge.plus.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.crop.rectangle.badge.plus.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “person.crop.rectangle.badge.plus.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.crop.rectangle.badge.plus.fill")
                }
                
                ///Creates the “person.crop.rectangle.badge.plus.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.crop.rectangle.badge.plus.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.phone.arrow.down.left {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “phone.arrow.down.left.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "phone.arrow.down.left.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “phone.arrow.down.left.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "phone.arrow.down.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “phone.arrow.down.left.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "phone.arrow.down.left.fill", configuration: configuration)
        }
        
        ///Creates the “phone.arrow.down.left.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "phone.arrow.down.left.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “phone.arrow.down.left.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "phone.arrow.down.left.fill")
        }
        
        ///Creates the “phone.arrow.down.left.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "phone.arrow.down.left.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.phone.arrow.right {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “phone.arrow.right.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "phone.arrow.right.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “phone.arrow.right.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "phone.arrow.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “phone.arrow.right.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "phone.arrow.right.fill", configuration: configuration)
        }
        
        ///Creates the “phone.arrow.right.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "phone.arrow.right.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “phone.arrow.right.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "phone.arrow.right.fill")
        }
        
        ///Creates the “phone.arrow.right.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "phone.arrow.right.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.phone.arrow.up.right {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “phone.arrow.up.right.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "phone.arrow.up.right.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “phone.arrow.up.right.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "phone.arrow.up.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “phone.arrow.up.right.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "phone.arrow.up.right.circle.fill", configuration: configuration)
            }
            
            ///Creates the “phone.arrow.up.right.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "phone.arrow.up.right.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “phone.arrow.up.right.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "phone.arrow.up.right.circle.fill")
            }
            
            ///Creates the “phone.arrow.up.right.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "phone.arrow.up.right.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “phone.arrow.up.right.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "phone.arrow.up.right.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “phone.arrow.up.right.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "phone.arrow.up.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “phone.arrow.up.right.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "phone.arrow.up.right.fill", configuration: configuration)
        }
        
        ///Creates the “phone.arrow.up.right.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "phone.arrow.up.right.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “phone.arrow.up.right.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "phone.arrow.up.right.fill")
        }
        
        ///Creates the “phone.arrow.up.right.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "phone.arrow.up.right.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.phone.badge {
    public struct checkmark {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.phone.connection {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “phone.connection.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "phone.connection.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “phone.connection.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "phone.connection.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “phone.connection.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "phone.connection.fill", configuration: configuration)
        }
        
        ///Creates the “phone.connection.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "phone.connection.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “phone.connection.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "phone.connection.fill")
        }
        
        ///Creates the “phone.connection.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "phone.connection.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.phone.down {
    public struct waves {
        public struct left {
            public struct and {
                public struct right {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.phone.fill.badge {
    public struct checkmark {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.photo {
    public struct stack {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “photo.stack.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "photo.stack.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “photo.stack.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "photo.stack.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “photo.stack.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "photo.stack.fill", configuration: configuration)
            }
            
            ///Creates the “photo.stack.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "photo.stack.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “photo.stack.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "photo.stack.fill")
            }
            
            ///Creates the “photo.stack.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "photo.stack.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.play {
    public struct desktopcomputer {
        private init() {}
    }
    
    public struct display {
        private init() {}
    }
    
    public struct laptopcomputer {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.playpause {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “playpause.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "playpause.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “playpause.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "playpause.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “playpause.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "playpause.circle.fill", configuration: configuration)
            }
            
            ///Creates the “playpause.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "playpause.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “playpause.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "playpause.circle.fill")
            }
            
            ///Creates the “playpause.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "playpause.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.questionmark {
    public struct bubble {
        public struct ar {
            private init() {}
        }
        
        public struct fill {
            public struct ar {
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “questionmark.bubble.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "questionmark.bubble.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “questionmark.bubble.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "questionmark.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “questionmark.bubble.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "questionmark.bubble.fill", configuration: configuration)
            }
            
            ///Creates the “questionmark.bubble.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "questionmark.bubble.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “questionmark.bubble.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "questionmark.bubble.fill")
            }
            
            ///Creates the “questionmark.bubble.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "questionmark.bubble.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.recordingtape {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “recordingtape.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "recordingtape.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “recordingtape.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "recordingtape.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “recordingtape.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "recordingtape.circle.fill", configuration: configuration)
            }
            
            ///Creates the “recordingtape.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "recordingtape.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “recordingtape.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "recordingtape.circle.fill")
            }
            
            ///Creates the “recordingtape.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "recordingtape.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.rectangle.portrait.and.arrow {
    public struct forward {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “rectangle.portrait.and.arrow.forward.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "rectangle.portrait.and.arrow.forward.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “rectangle.portrait.and.arrow.forward.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "rectangle.portrait.and.arrow.forward.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “rectangle.portrait.and.arrow.forward.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "rectangle.portrait.and.arrow.forward.fill", configuration: configuration)
            }
            
            ///Creates the “rectangle.portrait.and.arrow.forward.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "rectangle.portrait.and.arrow.forward.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “rectangle.portrait.and.arrow.forward.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "rectangle.portrait.and.arrow.forward.fill")
            }
            
            ///Creates the “rectangle.portrait.and.arrow.forward.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "rectangle.portrait.and.arrow.forward.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.rectangle.portrait.on.rectangle.portrait {
    public struct angled {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “rectangle.portrait.on.rectangle.portrait.angled.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "rectangle.portrait.on.rectangle.portrait.angled.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “rectangle.portrait.on.rectangle.portrait.angled.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "rectangle.portrait.on.rectangle.portrait.angled.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “rectangle.portrait.on.rectangle.portrait.angled.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "rectangle.portrait.on.rectangle.portrait.angled.fill", configuration: configuration)
            }
            
            ///Creates the “rectangle.portrait.on.rectangle.portrait.angled.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "rectangle.portrait.on.rectangle.portrait.angled.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “rectangle.portrait.on.rectangle.portrait.angled.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "rectangle.portrait.on.rectangle.portrait.angled.fill")
            }
            
            ///Creates the “rectangle.portrait.on.rectangle.portrait.angled.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "rectangle.portrait.on.rectangle.portrait.angled.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.sensor {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “sensor.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "sensor.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “sensor.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "sensor.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “sensor.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "sensor.fill", configuration: configuration)
        }
        
        ///Creates the “sensor.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "sensor.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “sensor.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "sensor.fill")
        }
        
        ///Creates the “sensor.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "sensor.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.shippingbox {
    public struct and {
        public struct arrow {
            public struct backward {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “shippingbox.and.arrow.backward.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "shippingbox.and.arrow.backward.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “shippingbox.and.arrow.backward.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "shippingbox.and.arrow.backward.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “shippingbox.and.arrow.backward.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "shippingbox.and.arrow.backward.fill", configuration: configuration)
                    }
                    
                    ///Creates the “shippingbox.and.arrow.backward.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "shippingbox.and.arrow.backward.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “shippingbox.and.arrow.backward.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "shippingbox.and.arrow.backward.fill")
                    }
                    
                    ///Creates the “shippingbox.and.arrow.backward.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "shippingbox.and.arrow.backward.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.slider.horizontal.x2 {
    public struct gobackward {
        private init() {}
    }
    
    public struct square {
        public struct badge {
            public struct arrow {
                public struct down {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct on {
            public struct square {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.slider.horizontal._2 {
    public struct gobackward {
        private init() {}
    }
    
    public struct square {
        public struct badge {
            public struct arrow {
                public struct down {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct on {
            public struct square {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.slider.horizontal.below.square {
    public struct and {
        public struct square {
            public struct filled {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.smoke {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “smoke.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "smoke.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “smoke.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "smoke.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “smoke.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "smoke.circle.fill", configuration: configuration)
            }
            
            ///Creates the “smoke.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "smoke.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “smoke.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "smoke.circle.fill")
            }
            
            ///Creates the “smoke.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "smoke.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.speaker {
    public struct minus {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “speaker.minus.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "speaker.minus.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “speaker.minus.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "speaker.minus.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “speaker.minus.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "speaker.minus.fill", configuration: configuration)
            }
            
            ///Creates the “speaker.minus.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "speaker.minus.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “speaker.minus.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "speaker.minus.fill")
            }
            
            ///Creates the “speaker.minus.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "speaker.minus.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct plus {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “speaker.plus.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "speaker.plus.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “speaker.plus.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "speaker.plus.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “speaker.plus.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "speaker.plus.fill", configuration: configuration)
            }
            
            ///Creates the “speaker.plus.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "speaker.plus.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “speaker.plus.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "speaker.plus.fill")
            }
            
            ///Creates the “speaker.plus.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "speaker.plus.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct square {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “speaker.square.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "speaker.square.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “speaker.square.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "speaker.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “speaker.square.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "speaker.square.fill", configuration: configuration)
            }
            
            ///Creates the “speaker.square.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "speaker.square.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “speaker.square.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "speaker.square.fill")
            }
            
            ///Creates the “speaker.square.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "speaker.square.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.speaker.wave.x2 {
    public struct bubble {
        public struct left {
            public struct fill {
                public struct rtl {
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.wave.2.bubble.left.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.wave.2.bubble.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.wave.2.bubble.left.fill", configuration: configuration)
                }
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.wave.2.bubble.left.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.wave.2.bubble.left.fill")
                }
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.wave.2.bubble.left.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rtl {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.speaker.wave._2 {
    public struct bubble {
        public struct left {
            public struct fill {
                public struct rtl {
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.wave.2.bubble.left.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.wave.2.bubble.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.wave.2.bubble.left.fill", configuration: configuration)
                }
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.wave.2.bubble.left.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.wave.2.bubble.left.fill")
                }
                
                ///Creates the “speaker.wave.2.bubble.left.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.wave.2.bubble.left.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rtl {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.sportscourt {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sportscourt.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sportscourt.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sportscourt.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sportscourt.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sportscourt.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sportscourt.circle.fill", configuration: configuration)
            }
            
            ///Creates the “sportscourt.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sportscourt.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sportscourt.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sportscourt.circle.fill")
            }
            
            ///Creates the “sportscourt.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sportscourt.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square {
    public struct bottomthird {
        public struct inset {
            public struct filled {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct dotted {
        private init() {}
    }
    
    public struct leadingthird {
        public struct inset {
            public struct filled {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct leftthird {
        public struct inset {
            public struct filled {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct rightthird {
        public struct inset {
            public struct filled {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct topthird {
        public struct inset {
            public struct filled {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct trailingthird {
        public struct inset {
            public struct filled {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.x2 {
    public struct layers {
        public struct x3d {
            public struct bottom {
                public struct filled {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct top {
                public struct filled {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct _3d {
            public struct bottom {
                public struct filled {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct top {
                public struct filled {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square._2 {
    public struct layers {
        public struct x3d {
            public struct bottom {
                public struct filled {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct top {
                public struct filled {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct _3d {
            public struct bottom {
                public struct filled {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct top {
                public struct filled {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.x3.layers.x3d {
    public struct bottom {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct middle {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct slash {
        private init() {}
    }
    
    public struct top {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.x3.layers.x3d.down.backward {
    public struct slash {
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.x3.layers.x3d.down.forward {
    public struct slash {
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.x3.layers._3d {
    public struct bottom {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct middle {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct slash {
        private init() {}
    }
    
    public struct top {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.x3.layers._3d.down.backward {
    public struct slash {
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.x3.layers._3d.down.forward {
    public struct slash {
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square._3.layers.x3d {
    public struct bottom {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct middle {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct slash {
        private init() {}
    }
    
    public struct top {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square._3.layers.x3d.down.backward {
    public struct slash {
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square._3.layers.x3d.down.forward {
    public struct slash {
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square._3.layers._3d {
    public struct bottom {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct middle {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct slash {
        private init() {}
    }
    
    public struct top {
        public struct filled {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square._3.layers._3d.down.backward {
    public struct slash {
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square._3.layers._3d.down.forward {
    public struct slash {
        public struct rtl {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.and.pencil {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “square.and.pencil.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "square.and.pencil.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “square.and.pencil.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "square.and.pencil.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “square.and.pencil.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "square.and.pencil.circle.fill", configuration: configuration)
            }
            
            ///Creates the “square.and.pencil.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "square.and.pencil.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “square.and.pencil.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "square.and.pencil.circle.fill")
            }
            
            ///Creates the “square.and.pencil.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "square.and.pencil.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.square.on.square {
    public struct badge {
        public struct person {
            public struct crop {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “square.on.square.badge.person.crop.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.on.square.badge.person.crop.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “square.on.square.badge.person.crop.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.on.square.badge.person.crop.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “square.on.square.badge.person.crop.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.on.square.badge.person.crop.fill", configuration: configuration)
                    }
                    
                    ///Creates the “square.on.square.badge.person.crop.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.on.square.badge.person.crop.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “square.on.square.badge.person.crop.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.on.square.badge.person.crop.fill")
                    }
                    
                    ///Creates the “square.on.square.badge.person.crop.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.on.square.badge.person.crop.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct intersection {
        public struct dashed {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.squares {
    public struct leading {
        public struct rectangle {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.squareshape {
    public struct dotted {
        public struct split {
            public struct x2x2 {
                private init() {}
            }
            
            public struct _2x2 {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.star.square {
    public struct on {
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “star.square.on.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "star.square.on.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “star.square.on.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "star.square.on.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “star.square.on.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "star.square.on.square.fill", configuration: configuration)
                }
                
                ///Creates the “star.square.on.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "star.square.on.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “star.square.on.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "star.square.on.square.fill")
                }
                
                ///Creates the “star.square.on.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "star.square.on.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.sun.and.horizon {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sun.and.horizon.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sun.and.horizon.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sun.and.horizon.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sun.and.horizon.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sun.and.horizon.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sun.and.horizon.circle.fill", configuration: configuration)
            }
            
            ///Creates the “sun.and.horizon.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sun.and.horizon.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sun.and.horizon.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sun.and.horizon.circle.fill")
            }
            
            ///Creates the “sun.and.horizon.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sun.and.horizon.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.sun.dust {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sun.dust.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sun.dust.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sun.dust.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sun.dust.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sun.dust.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sun.dust.circle.fill", configuration: configuration)
            }
            
            ///Creates the “sun.dust.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sun.dust.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sun.dust.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sun.dust.circle.fill")
            }
            
            ///Creates the “sun.dust.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sun.dust.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.sun.haze {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sun.haze.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sun.haze.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sun.haze.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sun.haze.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sun.haze.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sun.haze.circle.fill", configuration: configuration)
            }
            
            ///Creates the “sun.haze.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sun.haze.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sun.haze.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sun.haze.circle.fill")
            }
            
            ///Creates the “sun.haze.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sun.haze.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.sun.max {
    public struct trianglebadge {
        public struct exclamationmark {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sun.max.trianglebadge.exclamationmark.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.max.trianglebadge.exclamationmark.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sun.max.trianglebadge.exclamationmark.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.max.trianglebadge.exclamationmark.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sun.max.trianglebadge.exclamationmark.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.max.trianglebadge.exclamationmark.fill", configuration: configuration)
                }
                
                ///Creates the “sun.max.trianglebadge.exclamationmark.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.max.trianglebadge.exclamationmark.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sun.max.trianglebadge.exclamationmark.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.max.trianglebadge.exclamationmark.fill")
                }
                
                ///Creates the “sun.max.trianglebadge.exclamationmark.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.max.trianglebadge.exclamationmark.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.sunrise {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sunrise.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sunrise.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sunrise.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sunrise.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sunrise.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sunrise.circle.fill", configuration: configuration)
            }
            
            ///Creates the “sunrise.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sunrise.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sunrise.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sunrise.circle.fill")
            }
            
            ///Creates the “sunrise.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sunrise.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.sunset {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sunset.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sunset.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sunset.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sunset.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sunset.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sunset.circle.fill", configuration: configuration)
            }
            
            ///Creates the “sunset.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sunset.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sunset.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sunset.circle.fill")
            }
            
            ///Creates the “sunset.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sunset.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.`switch` {
    public struct programmable {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “switch.programmable.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "switch.programmable.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “switch.programmable.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "switch.programmable.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “switch.programmable.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "switch.programmable.fill", configuration: configuration)
            }
            
            ///Creates the “switch.programmable.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "switch.programmable.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “switch.programmable.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "switch.programmable.fill")
            }
            
            ///Creates the “switch.programmable.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "switch.programmable.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “switch.programmable.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "switch.programmable.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “switch.programmable.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "switch.programmable.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “switch.programmable.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "switch.programmable.square.fill", configuration: configuration)
                }
                
                ///Creates the “switch.programmable.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "switch.programmable.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “switch.programmable.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "switch.programmable.square.fill")
                }
                
                ///Creates the “switch.programmable.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "switch.programmable.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.table {
    public struct furniture {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “table.furniture.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "table.furniture.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “table.furniture.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "table.furniture.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “table.furniture.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "table.furniture.fill", configuration: configuration)
            }
            
            ///Creates the “table.furniture.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "table.furniture.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “table.furniture.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "table.furniture.fill")
            }
            
            ///Creates the “table.furniture.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "table.furniture.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.text {
    public struct line {
        public struct first {
            public struct and {
                public struct arrowtriangle {
                    public struct forward {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct last {
            public struct and {
                public struct arrowtriangle {
                    public struct forward {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct word {
        public struct spacing {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.textformat {
    public struct x12 {
        public struct ar {
            private init() {}
        }
        
        public struct hi {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct _12 {
        public struct ar {
            private init() {}
        }
        
        public struct hi {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.thermometer {
    public struct brakesignal {
        private init() {}
    }
    
    public struct high {
        private init() {}
    }
    
    public struct low {
        private init() {}
    }
    
    public struct medium {
        public struct slash {
            private init() {}
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.thermometer.snowflake {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “thermometer.snowflake.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "thermometer.snowflake.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “thermometer.snowflake.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "thermometer.snowflake.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “thermometer.snowflake.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "thermometer.snowflake.circle.fill", configuration: configuration)
            }
            
            ///Creates the “thermometer.snowflake.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "thermometer.snowflake.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “thermometer.snowflake.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "thermometer.snowflake.circle.fill")
            }
            
            ///Creates the “thermometer.snowflake.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "thermometer.snowflake.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.thermometer.sun {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “thermometer.sun.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "thermometer.sun.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “thermometer.sun.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "thermometer.sun.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “thermometer.sun.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "thermometer.sun.circle.fill", configuration: configuration)
            }
            
            ///Creates the “thermometer.sun.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "thermometer.sun.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “thermometer.sun.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "thermometer.sun.circle.fill")
            }
            
            ///Creates the “thermometer.sun.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "thermometer.sun.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.timer {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “timer.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "timer.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “timer.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "timer.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “timer.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "timer.circle.fill", configuration: configuration)
            }
            
            ///Creates the “timer.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "timer.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “timer.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "timer.circle.fill")
            }
            
            ///Creates the “timer.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "timer.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.tornado {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “tornado.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tornado.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “tornado.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tornado.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “tornado.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tornado.circle.fill", configuration: configuration)
            }
            
            ///Creates the “tornado.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tornado.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “tornado.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tornado.circle.fill")
            }
            
            ///Creates the “tornado.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tornado.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.tropicalstorm {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “tropicalstorm.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tropicalstorm.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “tropicalstorm.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tropicalstorm.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “tropicalstorm.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tropicalstorm.circle.fill", configuration: configuration)
            }
            
            ///Creates the “tropicalstorm.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tropicalstorm.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “tropicalstorm.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tropicalstorm.circle.fill")
            }
            
            ///Creates the “tropicalstorm.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tropicalstorm.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.tv.and.mediabox {
    public struct fill {
        private init() {}
        #if os(macOS)
        
        ///Creates the “tv.and.mediabox.fill” system symbol image with the accessibility description you specify.
        ///
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "tv.and.mediabox.fill", accessibilityDescription: accessibilityDescription)
        }
        
        ///Creates the “tv.and.mediabox.fill” system symbol image with the variable value you specify.
        ///
        ///The value parameter is valid for symbols that support variable rendering.
        ///
        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
        @available(macOS 13.0, *)
        @available(iOS, unavailable)
        @available(tvOS, unavailable)
        @available(watchOS, unavailable)
        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
            SFSymbolReference.image(name: "tv.and.mediabox.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
        }
        
        #endif
        
        #if os(iOS) || os(tvOS) || os(watchOS)
        
        ///Creates the “tv.and.mediabox.fill” system symbol image object with the specified configuration.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(macOS, unavailable)
        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "tv.and.mediabox.fill", configuration: configuration)
        }
        
        ///Creates the “tv.and.mediabox.fill” system symbol image object with the configuration and variable value you specify.
        ///
        ///Use this method to retrieve system-defined symbol images.
        ///
        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
        ///- Parameter configuration: The image configuration the system applies to the image.
        ///
        ///- Returns: The object containing the image variant that matches the specified configuration data.
        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        @available(macOS, unavailable)
        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
            SFSymbolReference.image(name: "tv.and.mediabox.fill", variableValue: variableValue, configuration: configuration)
        }
        
        #endif
        
        #if canImport(SwiftUI)
        ///Creates the “tv.and.mediabox.fill” system symbol image.
        ///
        ///This initializer creates an image using a system-provided symbol.
        public static func swiftUIImage() -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "tv.and.mediabox.fill")
        }
        
        ///Creates the “tv.and.mediabox.fill” system symbol image with a variable value.
        ///
        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
        ///
        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
            SFSymbolReference.swiftUIImage(name: "tv.and.mediabox.fill", variableValue: variableValue)
        }
        
        #endif
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.umbrella {
    public struct percent {
        public struct ar {
            private init() {}
        }
        
        public struct fill {
            public struct ar {
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “umbrella.percent.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "umbrella.percent.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “umbrella.percent.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "umbrella.percent.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “umbrella.percent.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "umbrella.percent.fill", configuration: configuration)
            }
            
            ///Creates the “umbrella.percent.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "umbrella.percent.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “umbrella.percent.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "umbrella.percent.fill")
            }
            
            ///Creates the “umbrella.percent.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "umbrella.percent.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.video {
    public struct doorbell {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “video.doorbell.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "video.doorbell.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “video.doorbell.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "video.doorbell.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “video.doorbell.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "video.doorbell.fill", configuration: configuration)
            }
            
            ///Creates the “video.doorbell.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "video.doorbell.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “video.doorbell.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "video.doorbell.fill")
            }
            
            ///Creates the “video.doorbell.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "video.doorbell.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.waveform {
    public struct slash {
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.wifi {
    public struct router {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “wifi.router.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wifi.router.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “wifi.router.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wifi.router.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “wifi.router.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wifi.router.fill", configuration: configuration)
            }
            
            ///Creates the “wifi.router.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wifi.router.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “wifi.router.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wifi.router.fill")
            }
            
            ///Creates the “wifi.router.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wifi.router.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.wind {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “wind.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wind.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “wind.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wind.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “wind.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wind.circle.fill", configuration: configuration)
            }
            
            ///Creates the “wind.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wind.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “wind.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wind.circle.fill")
            }
            
            ///Creates the “wind.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wind.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.wind.snow {
    public struct circle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “wind.snow.circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wind.snow.circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “wind.snow.circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wind.snow.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “wind.snow.circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wind.snow.circle.fill", configuration: configuration)
            }
            
            ///Creates the “wind.snow.circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wind.snow.circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “wind.snow.circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wind.snow.circle.fill")
            }
            
            ///Creates the “wind.snow.circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wind.snow.circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
extension SF.wrench {
    public struct adjustable {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “wrench.adjustable.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wrench.adjustable.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “wrench.adjustable.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wrench.adjustable.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “wrench.adjustable.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wrench.adjustable.fill", configuration: configuration)
            }
            
            ///Creates the “wrench.adjustable.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wrench.adjustable.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “wrench.adjustable.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wrench.adjustable.fill")
            }
            
            ///Creates the “wrench.adjustable.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wrench.adjustable.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x0.circle {
    #if os(macOS)
    
    ///Creates the “0.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "0.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “0.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "0.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “0.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "0.circle", configuration: configuration)
    }
    
    ///Creates the “0.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "0.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “0.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "0.circle")
    }
    
    ///Creates the “0.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "0.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x0.square {
    #if os(macOS)
    
    ///Creates the “0.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "0.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “0.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "0.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “0.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "0.square", configuration: configuration)
    }
    
    ///Creates the “0.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "0.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “0.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "0.square")
    }
    
    ///Creates the “0.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "0.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._0.circle {
    #if os(macOS)
    
    ///Creates the “0.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "0.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “0.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "0.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “0.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "0.circle", configuration: configuration)
    }
    
    ///Creates the “0.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "0.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “0.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "0.circle")
    }
    
    ///Creates the “0.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "0.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._0.square {
    #if os(macOS)
    
    ///Creates the “0.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "0.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “0.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "0.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “0.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "0.square", configuration: configuration)
    }
    
    ///Creates the “0.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "0.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “0.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "0.square")
    }
    
    ///Creates the “0.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "0.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x00.circle {
    #if os(macOS)
    
    ///Creates the “00.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "00.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “00.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "00.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “00.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "00.circle", configuration: configuration)
    }
    
    ///Creates the “00.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "00.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “00.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "00.circle")
    }
    
    ///Creates the “00.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "00.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x00.square {
    #if os(macOS)
    
    ///Creates the “00.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "00.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “00.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "00.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “00.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "00.square", configuration: configuration)
    }
    
    ///Creates the “00.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "00.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “00.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "00.square")
    }
    
    ///Creates the “00.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "00.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._00.circle {
    #if os(macOS)
    
    ///Creates the “00.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "00.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “00.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "00.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “00.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "00.circle", configuration: configuration)
    }
    
    ///Creates the “00.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "00.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “00.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "00.circle")
    }
    
    ///Creates the “00.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "00.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._00.square {
    #if os(macOS)
    
    ///Creates the “00.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "00.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “00.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "00.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “00.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "00.square", configuration: configuration)
    }
    
    ///Creates the “00.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "00.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “00.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "00.square")
    }
    
    ///Creates the “00.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "00.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x01.circle {
    #if os(macOS)
    
    ///Creates the “01.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "01.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “01.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "01.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “01.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "01.circle", configuration: configuration)
    }
    
    ///Creates the “01.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "01.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “01.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "01.circle")
    }
    
    ///Creates the “01.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "01.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x01.square {
    #if os(macOS)
    
    ///Creates the “01.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "01.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “01.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "01.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “01.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "01.square", configuration: configuration)
    }
    
    ///Creates the “01.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "01.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “01.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "01.square")
    }
    
    ///Creates the “01.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "01.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._01.circle {
    #if os(macOS)
    
    ///Creates the “01.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "01.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “01.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "01.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “01.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "01.circle", configuration: configuration)
    }
    
    ///Creates the “01.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "01.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “01.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "01.circle")
    }
    
    ///Creates the “01.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "01.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._01.square {
    #if os(macOS)
    
    ///Creates the “01.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "01.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “01.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "01.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “01.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "01.square", configuration: configuration)
    }
    
    ///Creates the “01.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "01.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “01.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "01.square")
    }
    
    ///Creates the “01.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "01.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x02.circle {
    #if os(macOS)
    
    ///Creates the “02.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "02.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “02.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "02.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “02.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "02.circle", configuration: configuration)
    }
    
    ///Creates the “02.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "02.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “02.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "02.circle")
    }
    
    ///Creates the “02.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "02.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x02.square {
    #if os(macOS)
    
    ///Creates the “02.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "02.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “02.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "02.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “02.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "02.square", configuration: configuration)
    }
    
    ///Creates the “02.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "02.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “02.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "02.square")
    }
    
    ///Creates the “02.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "02.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._02.circle {
    #if os(macOS)
    
    ///Creates the “02.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "02.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “02.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "02.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “02.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "02.circle", configuration: configuration)
    }
    
    ///Creates the “02.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "02.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “02.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "02.circle")
    }
    
    ///Creates the “02.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "02.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._02.square {
    #if os(macOS)
    
    ///Creates the “02.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "02.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “02.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "02.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “02.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "02.square", configuration: configuration)
    }
    
    ///Creates the “02.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "02.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “02.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "02.square")
    }
    
    ///Creates the “02.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "02.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x03.circle {
    #if os(macOS)
    
    ///Creates the “03.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "03.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “03.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "03.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “03.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "03.circle", configuration: configuration)
    }
    
    ///Creates the “03.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "03.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “03.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "03.circle")
    }
    
    ///Creates the “03.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "03.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x03.square {
    #if os(macOS)
    
    ///Creates the “03.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "03.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “03.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "03.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “03.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "03.square", configuration: configuration)
    }
    
    ///Creates the “03.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "03.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “03.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "03.square")
    }
    
    ///Creates the “03.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "03.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._03.circle {
    #if os(macOS)
    
    ///Creates the “03.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "03.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “03.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "03.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “03.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "03.circle", configuration: configuration)
    }
    
    ///Creates the “03.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "03.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “03.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "03.circle")
    }
    
    ///Creates the “03.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "03.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._03.square {
    #if os(macOS)
    
    ///Creates the “03.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "03.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “03.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "03.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “03.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "03.square", configuration: configuration)
    }
    
    ///Creates the “03.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "03.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “03.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "03.square")
    }
    
    ///Creates the “03.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "03.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x04.circle {
    #if os(macOS)
    
    ///Creates the “04.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "04.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “04.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "04.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “04.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "04.circle", configuration: configuration)
    }
    
    ///Creates the “04.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "04.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “04.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "04.circle")
    }
    
    ///Creates the “04.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "04.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x04.square {
    #if os(macOS)
    
    ///Creates the “04.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "04.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “04.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "04.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “04.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "04.square", configuration: configuration)
    }
    
    ///Creates the “04.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "04.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “04.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "04.square")
    }
    
    ///Creates the “04.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "04.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._04.circle {
    #if os(macOS)
    
    ///Creates the “04.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "04.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “04.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "04.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “04.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "04.circle", configuration: configuration)
    }
    
    ///Creates the “04.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "04.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “04.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "04.circle")
    }
    
    ///Creates the “04.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "04.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._04.square {
    #if os(macOS)
    
    ///Creates the “04.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "04.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “04.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "04.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “04.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "04.square", configuration: configuration)
    }
    
    ///Creates the “04.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "04.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “04.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "04.square")
    }
    
    ///Creates the “04.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "04.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x05.circle {
    #if os(macOS)
    
    ///Creates the “05.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "05.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “05.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "05.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “05.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "05.circle", configuration: configuration)
    }
    
    ///Creates the “05.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "05.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “05.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "05.circle")
    }
    
    ///Creates the “05.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "05.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x05.square {
    #if os(macOS)
    
    ///Creates the “05.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "05.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “05.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "05.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “05.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "05.square", configuration: configuration)
    }
    
    ///Creates the “05.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "05.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “05.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "05.square")
    }
    
    ///Creates the “05.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "05.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._05.circle {
    #if os(macOS)
    
    ///Creates the “05.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "05.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “05.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "05.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “05.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "05.circle", configuration: configuration)
    }
    
    ///Creates the “05.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "05.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “05.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "05.circle")
    }
    
    ///Creates the “05.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "05.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._05.square {
    #if os(macOS)
    
    ///Creates the “05.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "05.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “05.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "05.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “05.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "05.square", configuration: configuration)
    }
    
    ///Creates the “05.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "05.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “05.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "05.square")
    }
    
    ///Creates the “05.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "05.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x06.circle {
    #if os(macOS)
    
    ///Creates the “06.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "06.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “06.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "06.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “06.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "06.circle", configuration: configuration)
    }
    
    ///Creates the “06.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "06.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “06.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "06.circle")
    }
    
    ///Creates the “06.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "06.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x06.square {
    #if os(macOS)
    
    ///Creates the “06.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "06.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “06.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "06.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “06.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "06.square", configuration: configuration)
    }
    
    ///Creates the “06.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "06.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “06.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "06.square")
    }
    
    ///Creates the “06.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "06.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._06.circle {
    #if os(macOS)
    
    ///Creates the “06.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "06.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “06.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "06.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “06.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "06.circle", configuration: configuration)
    }
    
    ///Creates the “06.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "06.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “06.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "06.circle")
    }
    
    ///Creates the “06.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "06.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._06.square {
    #if os(macOS)
    
    ///Creates the “06.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "06.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “06.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "06.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “06.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "06.square", configuration: configuration)
    }
    
    ///Creates the “06.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "06.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “06.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "06.square")
    }
    
    ///Creates the “06.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "06.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x07.circle {
    #if os(macOS)
    
    ///Creates the “07.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "07.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “07.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "07.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “07.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "07.circle", configuration: configuration)
    }
    
    ///Creates the “07.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "07.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “07.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "07.circle")
    }
    
    ///Creates the “07.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "07.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x07.square {
    #if os(macOS)
    
    ///Creates the “07.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "07.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “07.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "07.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “07.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "07.square", configuration: configuration)
    }
    
    ///Creates the “07.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "07.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “07.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "07.square")
    }
    
    ///Creates the “07.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "07.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._07.circle {
    #if os(macOS)
    
    ///Creates the “07.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "07.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “07.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "07.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “07.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "07.circle", configuration: configuration)
    }
    
    ///Creates the “07.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "07.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “07.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "07.circle")
    }
    
    ///Creates the “07.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "07.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._07.square {
    #if os(macOS)
    
    ///Creates the “07.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "07.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “07.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "07.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “07.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "07.square", configuration: configuration)
    }
    
    ///Creates the “07.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "07.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “07.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "07.square")
    }
    
    ///Creates the “07.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "07.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x08.circle {
    #if os(macOS)
    
    ///Creates the “08.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "08.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “08.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "08.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “08.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "08.circle", configuration: configuration)
    }
    
    ///Creates the “08.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "08.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “08.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "08.circle")
    }
    
    ///Creates the “08.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "08.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x08.square {
    #if os(macOS)
    
    ///Creates the “08.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "08.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “08.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "08.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “08.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "08.square", configuration: configuration)
    }
    
    ///Creates the “08.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "08.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “08.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "08.square")
    }
    
    ///Creates the “08.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "08.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._08.circle {
    #if os(macOS)
    
    ///Creates the “08.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "08.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “08.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "08.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “08.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "08.circle", configuration: configuration)
    }
    
    ///Creates the “08.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "08.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “08.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "08.circle")
    }
    
    ///Creates the “08.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "08.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._08.square {
    #if os(macOS)
    
    ///Creates the “08.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "08.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “08.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "08.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “08.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "08.square", configuration: configuration)
    }
    
    ///Creates the “08.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "08.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “08.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "08.square")
    }
    
    ///Creates the “08.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "08.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x09.circle {
    #if os(macOS)
    
    ///Creates the “09.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "09.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “09.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "09.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “09.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "09.circle", configuration: configuration)
    }
    
    ///Creates the “09.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "09.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “09.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "09.circle")
    }
    
    ///Creates the “09.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "09.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x09.square {
    #if os(macOS)
    
    ///Creates the “09.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "09.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “09.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "09.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “09.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "09.square", configuration: configuration)
    }
    
    ///Creates the “09.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "09.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “09.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "09.square")
    }
    
    ///Creates the “09.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "09.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._09.circle {
    #if os(macOS)
    
    ///Creates the “09.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "09.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “09.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "09.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “09.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "09.circle", configuration: configuration)
    }
    
    ///Creates the “09.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "09.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “09.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "09.circle")
    }
    
    ///Creates the “09.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "09.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._09.square {
    #if os(macOS)
    
    ///Creates the “09.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "09.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “09.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "09.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “09.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "09.square", configuration: configuration)
    }
    
    ///Creates the “09.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "09.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “09.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "09.square")
    }
    
    ///Creates the “09.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "09.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x1.circle {
    #if os(macOS)
    
    ///Creates the “1.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “1.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “1.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.circle", configuration: configuration)
    }
    
    ///Creates the “1.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “1.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.circle")
    }
    
    ///Creates the “1.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x1.magnifyingglass {
    #if os(macOS)
    
    ///Creates the “1.magnifyingglass” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.magnifyingglass", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “1.magnifyingglass” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.magnifyingglass", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “1.magnifyingglass” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.magnifyingglass", configuration: configuration)
    }
    
    ///Creates the “1.magnifyingglass” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.magnifyingglass", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “1.magnifyingglass” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.magnifyingglass")
    }
    
    ///Creates the “1.magnifyingglass” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.magnifyingglass", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x1.square {
    #if os(macOS)
    
    ///Creates the “1.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “1.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “1.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.square", configuration: configuration)
    }
    
    ///Creates the “1.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “1.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.square")
    }
    
    ///Creates the “1.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._1.circle {
    #if os(macOS)
    
    ///Creates the “1.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “1.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “1.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.circle", configuration: configuration)
    }
    
    ///Creates the “1.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “1.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.circle")
    }
    
    ///Creates the “1.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._1.magnifyingglass {
    #if os(macOS)
    
    ///Creates the “1.magnifyingglass” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.magnifyingglass", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “1.magnifyingglass” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.magnifyingglass", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “1.magnifyingglass” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.magnifyingglass", configuration: configuration)
    }
    
    ///Creates the “1.magnifyingglass” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.magnifyingglass", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “1.magnifyingglass” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.magnifyingglass")
    }
    
    ///Creates the “1.magnifyingglass” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.magnifyingglass", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._1.square {
    #if os(macOS)
    
    ///Creates the “1.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “1.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "1.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “1.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.square", configuration: configuration)
    }
    
    ///Creates the “1.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "1.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “1.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.square")
    }
    
    ///Creates the “1.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "1.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x10.circle {
    #if os(macOS)
    
    ///Creates the “10.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "10.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “10.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "10.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “10.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "10.circle", configuration: configuration)
    }
    
    ///Creates the “10.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "10.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “10.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "10.circle")
    }
    
    ///Creates the “10.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "10.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x10.square {
    #if os(macOS)
    
    ///Creates the “10.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "10.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “10.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "10.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “10.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "10.square", configuration: configuration)
    }
    
    ///Creates the “10.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "10.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “10.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "10.square")
    }
    
    ///Creates the “10.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "10.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._10.circle {
    #if os(macOS)
    
    ///Creates the “10.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "10.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “10.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "10.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “10.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "10.circle", configuration: configuration)
    }
    
    ///Creates the “10.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "10.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “10.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "10.circle")
    }
    
    ///Creates the “10.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "10.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._10.square {
    #if os(macOS)
    
    ///Creates the “10.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "10.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “10.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "10.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “10.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "10.square", configuration: configuration)
    }
    
    ///Creates the “10.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "10.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “10.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "10.square")
    }
    
    ///Creates the “10.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "10.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x11.circle {
    #if os(macOS)
    
    ///Creates the “11.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "11.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “11.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "11.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “11.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "11.circle", configuration: configuration)
    }
    
    ///Creates the “11.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "11.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “11.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "11.circle")
    }
    
    ///Creates the “11.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "11.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x11.square {
    #if os(macOS)
    
    ///Creates the “11.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "11.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “11.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "11.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “11.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "11.square", configuration: configuration)
    }
    
    ///Creates the “11.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "11.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “11.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "11.square")
    }
    
    ///Creates the “11.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "11.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._11.circle {
    #if os(macOS)
    
    ///Creates the “11.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "11.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “11.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "11.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “11.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "11.circle", configuration: configuration)
    }
    
    ///Creates the “11.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "11.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “11.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "11.circle")
    }
    
    ///Creates the “11.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "11.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._11.square {
    #if os(macOS)
    
    ///Creates the “11.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "11.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “11.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "11.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “11.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "11.square", configuration: configuration)
    }
    
    ///Creates the “11.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "11.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “11.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "11.square")
    }
    
    ///Creates the “11.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "11.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x12.circle {
    #if os(macOS)
    
    ///Creates the “12.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "12.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “12.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "12.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “12.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "12.circle", configuration: configuration)
    }
    
    ///Creates the “12.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "12.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “12.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "12.circle")
    }
    
    ///Creates the “12.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "12.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x12.square {
    #if os(macOS)
    
    ///Creates the “12.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "12.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “12.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "12.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “12.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "12.square", configuration: configuration)
    }
    
    ///Creates the “12.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "12.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “12.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "12.square")
    }
    
    ///Creates the “12.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "12.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._12.circle {
    #if os(macOS)
    
    ///Creates the “12.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "12.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “12.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "12.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “12.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "12.circle", configuration: configuration)
    }
    
    ///Creates the “12.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "12.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “12.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "12.circle")
    }
    
    ///Creates the “12.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "12.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._12.square {
    #if os(macOS)
    
    ///Creates the “12.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "12.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “12.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "12.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “12.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "12.square", configuration: configuration)
    }
    
    ///Creates the “12.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "12.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “12.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "12.square")
    }
    
    ///Creates the “12.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "12.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x13.circle {
    #if os(macOS)
    
    ///Creates the “13.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "13.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “13.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "13.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “13.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "13.circle", configuration: configuration)
    }
    
    ///Creates the “13.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "13.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “13.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "13.circle")
    }
    
    ///Creates the “13.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "13.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x13.square {
    #if os(macOS)
    
    ///Creates the “13.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "13.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “13.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "13.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “13.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "13.square", configuration: configuration)
    }
    
    ///Creates the “13.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "13.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “13.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "13.square")
    }
    
    ///Creates the “13.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "13.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._13.circle {
    #if os(macOS)
    
    ///Creates the “13.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "13.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “13.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "13.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “13.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "13.circle", configuration: configuration)
    }
    
    ///Creates the “13.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "13.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “13.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "13.circle")
    }
    
    ///Creates the “13.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "13.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._13.square {
    #if os(macOS)
    
    ///Creates the “13.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "13.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “13.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "13.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “13.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "13.square", configuration: configuration)
    }
    
    ///Creates the “13.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "13.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “13.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "13.square")
    }
    
    ///Creates the “13.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "13.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x14.circle {
    #if os(macOS)
    
    ///Creates the “14.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "14.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “14.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "14.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “14.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "14.circle", configuration: configuration)
    }
    
    ///Creates the “14.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "14.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “14.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "14.circle")
    }
    
    ///Creates the “14.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "14.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x14.square {
    #if os(macOS)
    
    ///Creates the “14.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "14.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “14.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "14.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “14.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "14.square", configuration: configuration)
    }
    
    ///Creates the “14.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "14.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “14.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "14.square")
    }
    
    ///Creates the “14.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "14.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._14.circle {
    #if os(macOS)
    
    ///Creates the “14.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "14.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “14.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "14.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “14.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "14.circle", configuration: configuration)
    }
    
    ///Creates the “14.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "14.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “14.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "14.circle")
    }
    
    ///Creates the “14.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "14.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._14.square {
    #if os(macOS)
    
    ///Creates the “14.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "14.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “14.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "14.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “14.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "14.square", configuration: configuration)
    }
    
    ///Creates the “14.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "14.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “14.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "14.square")
    }
    
    ///Creates the “14.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "14.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x15.circle {
    #if os(macOS)
    
    ///Creates the “15.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "15.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “15.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "15.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “15.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "15.circle", configuration: configuration)
    }
    
    ///Creates the “15.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "15.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “15.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "15.circle")
    }
    
    ///Creates the “15.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "15.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x15.square {
    #if os(macOS)
    
    ///Creates the “15.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "15.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “15.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "15.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “15.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "15.square", configuration: configuration)
    }
    
    ///Creates the “15.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "15.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “15.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "15.square")
    }
    
    ///Creates the “15.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "15.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._15.circle {
    #if os(macOS)
    
    ///Creates the “15.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "15.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “15.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "15.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “15.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "15.circle", configuration: configuration)
    }
    
    ///Creates the “15.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "15.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “15.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "15.circle")
    }
    
    ///Creates the “15.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "15.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._15.square {
    #if os(macOS)
    
    ///Creates the “15.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "15.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “15.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "15.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “15.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "15.square", configuration: configuration)
    }
    
    ///Creates the “15.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "15.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “15.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "15.square")
    }
    
    ///Creates the “15.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "15.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x16.circle {
    #if os(macOS)
    
    ///Creates the “16.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "16.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “16.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "16.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “16.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "16.circle", configuration: configuration)
    }
    
    ///Creates the “16.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "16.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “16.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "16.circle")
    }
    
    ///Creates the “16.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "16.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x16.square {
    #if os(macOS)
    
    ///Creates the “16.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "16.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “16.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "16.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “16.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "16.square", configuration: configuration)
    }
    
    ///Creates the “16.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "16.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “16.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "16.square")
    }
    
    ///Creates the “16.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "16.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._16.circle {
    #if os(macOS)
    
    ///Creates the “16.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "16.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “16.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "16.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “16.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "16.circle", configuration: configuration)
    }
    
    ///Creates the “16.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "16.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “16.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "16.circle")
    }
    
    ///Creates the “16.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "16.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._16.square {
    #if os(macOS)
    
    ///Creates the “16.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "16.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “16.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "16.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “16.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "16.square", configuration: configuration)
    }
    
    ///Creates the “16.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "16.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “16.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "16.square")
    }
    
    ///Creates the “16.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "16.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x17.circle {
    #if os(macOS)
    
    ///Creates the “17.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "17.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “17.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "17.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “17.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "17.circle", configuration: configuration)
    }
    
    ///Creates the “17.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "17.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “17.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "17.circle")
    }
    
    ///Creates the “17.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "17.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x17.square {
    #if os(macOS)
    
    ///Creates the “17.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "17.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “17.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "17.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “17.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "17.square", configuration: configuration)
    }
    
    ///Creates the “17.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "17.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “17.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "17.square")
    }
    
    ///Creates the “17.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "17.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._17.circle {
    #if os(macOS)
    
    ///Creates the “17.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "17.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “17.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "17.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “17.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "17.circle", configuration: configuration)
    }
    
    ///Creates the “17.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "17.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “17.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "17.circle")
    }
    
    ///Creates the “17.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "17.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._17.square {
    #if os(macOS)
    
    ///Creates the “17.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "17.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “17.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "17.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “17.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "17.square", configuration: configuration)
    }
    
    ///Creates the “17.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "17.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “17.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "17.square")
    }
    
    ///Creates the “17.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "17.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x18.circle {
    #if os(macOS)
    
    ///Creates the “18.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "18.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “18.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "18.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “18.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "18.circle", configuration: configuration)
    }
    
    ///Creates the “18.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "18.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “18.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "18.circle")
    }
    
    ///Creates the “18.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "18.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x18.square {
    #if os(macOS)
    
    ///Creates the “18.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "18.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “18.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "18.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “18.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "18.square", configuration: configuration)
    }
    
    ///Creates the “18.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "18.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “18.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "18.square")
    }
    
    ///Creates the “18.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "18.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._18.circle {
    #if os(macOS)
    
    ///Creates the “18.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "18.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “18.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "18.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “18.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "18.circle", configuration: configuration)
    }
    
    ///Creates the “18.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "18.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “18.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "18.circle")
    }
    
    ///Creates the “18.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "18.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._18.square {
    #if os(macOS)
    
    ///Creates the “18.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "18.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “18.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "18.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “18.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "18.square", configuration: configuration)
    }
    
    ///Creates the “18.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "18.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “18.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "18.square")
    }
    
    ///Creates the “18.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "18.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x19.circle {
    #if os(macOS)
    
    ///Creates the “19.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "19.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “19.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "19.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “19.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "19.circle", configuration: configuration)
    }
    
    ///Creates the “19.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "19.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “19.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "19.circle")
    }
    
    ///Creates the “19.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "19.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x19.square {
    #if os(macOS)
    
    ///Creates the “19.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "19.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “19.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "19.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “19.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "19.square", configuration: configuration)
    }
    
    ///Creates the “19.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "19.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “19.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "19.square")
    }
    
    ///Creates the “19.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "19.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._19.circle {
    #if os(macOS)
    
    ///Creates the “19.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "19.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “19.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "19.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “19.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "19.circle", configuration: configuration)
    }
    
    ///Creates the “19.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "19.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “19.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "19.circle")
    }
    
    ///Creates the “19.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "19.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._19.square {
    #if os(macOS)
    
    ///Creates the “19.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "19.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “19.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "19.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “19.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "19.square", configuration: configuration)
    }
    
    ///Creates the “19.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "19.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “19.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "19.square")
    }
    
    ///Creates the “19.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "19.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x2.circle {
    #if os(macOS)
    
    ///Creates the “2.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "2.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “2.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "2.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “2.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "2.circle", configuration: configuration)
    }
    
    ///Creates the “2.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "2.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “2.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "2.circle")
    }
    
    ///Creates the “2.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "2.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x2.square {
    #if os(macOS)
    
    ///Creates the “2.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "2.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “2.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "2.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “2.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "2.square", configuration: configuration)
    }
    
    ///Creates the “2.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "2.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “2.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "2.square")
    }
    
    ///Creates the “2.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "2.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._2.circle {
    #if os(macOS)
    
    ///Creates the “2.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "2.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “2.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "2.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “2.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "2.circle", configuration: configuration)
    }
    
    ///Creates the “2.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "2.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “2.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "2.circle")
    }
    
    ///Creates the “2.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "2.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._2.square {
    #if os(macOS)
    
    ///Creates the “2.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "2.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “2.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "2.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “2.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "2.square", configuration: configuration)
    }
    
    ///Creates the “2.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "2.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “2.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "2.square")
    }
    
    ///Creates the “2.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "2.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x20.circle {
    #if os(macOS)
    
    ///Creates the “20.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "20.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “20.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "20.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “20.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "20.circle", configuration: configuration)
    }
    
    ///Creates the “20.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "20.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “20.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "20.circle")
    }
    
    ///Creates the “20.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "20.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x20.square {
    #if os(macOS)
    
    ///Creates the “20.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "20.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “20.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "20.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “20.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "20.square", configuration: configuration)
    }
    
    ///Creates the “20.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "20.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “20.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "20.square")
    }
    
    ///Creates the “20.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "20.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._20.circle {
    #if os(macOS)
    
    ///Creates the “20.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "20.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “20.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "20.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “20.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "20.circle", configuration: configuration)
    }
    
    ///Creates the “20.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "20.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “20.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "20.circle")
    }
    
    ///Creates the “20.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "20.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._20.square {
    #if os(macOS)
    
    ///Creates the “20.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "20.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “20.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "20.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “20.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "20.square", configuration: configuration)
    }
    
    ///Creates the “20.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "20.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “20.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "20.square")
    }
    
    ///Creates the “20.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "20.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x21.circle {
    #if os(macOS)
    
    ///Creates the “21.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "21.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “21.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "21.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “21.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "21.circle", configuration: configuration)
    }
    
    ///Creates the “21.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "21.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “21.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "21.circle")
    }
    
    ///Creates the “21.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "21.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x21.square {
    #if os(macOS)
    
    ///Creates the “21.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "21.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “21.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "21.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “21.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "21.square", configuration: configuration)
    }
    
    ///Creates the “21.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "21.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “21.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "21.square")
    }
    
    ///Creates the “21.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "21.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._21.circle {
    #if os(macOS)
    
    ///Creates the “21.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "21.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “21.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "21.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “21.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "21.circle", configuration: configuration)
    }
    
    ///Creates the “21.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "21.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “21.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "21.circle")
    }
    
    ///Creates the “21.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "21.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._21.square {
    #if os(macOS)
    
    ///Creates the “21.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "21.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “21.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "21.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “21.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "21.square", configuration: configuration)
    }
    
    ///Creates the “21.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "21.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “21.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "21.square")
    }
    
    ///Creates the “21.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "21.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x22.circle {
    #if os(macOS)
    
    ///Creates the “22.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "22.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “22.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "22.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “22.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "22.circle", configuration: configuration)
    }
    
    ///Creates the “22.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "22.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “22.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "22.circle")
    }
    
    ///Creates the “22.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "22.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x22.square {
    #if os(macOS)
    
    ///Creates the “22.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "22.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “22.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "22.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “22.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "22.square", configuration: configuration)
    }
    
    ///Creates the “22.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "22.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “22.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "22.square")
    }
    
    ///Creates the “22.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "22.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._22.circle {
    #if os(macOS)
    
    ///Creates the “22.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "22.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “22.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "22.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “22.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "22.circle", configuration: configuration)
    }
    
    ///Creates the “22.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "22.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “22.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "22.circle")
    }
    
    ///Creates the “22.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "22.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._22.square {
    #if os(macOS)
    
    ///Creates the “22.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "22.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “22.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "22.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “22.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "22.square", configuration: configuration)
    }
    
    ///Creates the “22.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "22.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “22.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "22.square")
    }
    
    ///Creates the “22.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "22.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x23.circle {
    #if os(macOS)
    
    ///Creates the “23.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "23.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “23.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "23.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “23.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "23.circle", configuration: configuration)
    }
    
    ///Creates the “23.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "23.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “23.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "23.circle")
    }
    
    ///Creates the “23.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "23.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x23.square {
    #if os(macOS)
    
    ///Creates the “23.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "23.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “23.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "23.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “23.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "23.square", configuration: configuration)
    }
    
    ///Creates the “23.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "23.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “23.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "23.square")
    }
    
    ///Creates the “23.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "23.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._23.circle {
    #if os(macOS)
    
    ///Creates the “23.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "23.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “23.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "23.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “23.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "23.circle", configuration: configuration)
    }
    
    ///Creates the “23.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "23.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “23.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "23.circle")
    }
    
    ///Creates the “23.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "23.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._23.square {
    #if os(macOS)
    
    ///Creates the “23.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "23.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “23.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "23.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “23.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "23.square", configuration: configuration)
    }
    
    ///Creates the “23.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "23.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “23.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "23.square")
    }
    
    ///Creates the “23.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "23.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x24.circle {
    #if os(macOS)
    
    ///Creates the “24.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "24.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “24.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "24.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “24.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "24.circle", configuration: configuration)
    }
    
    ///Creates the “24.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "24.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “24.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "24.circle")
    }
    
    ///Creates the “24.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "24.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x24.square {
    #if os(macOS)
    
    ///Creates the “24.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "24.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “24.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "24.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “24.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "24.square", configuration: configuration)
    }
    
    ///Creates the “24.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "24.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “24.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "24.square")
    }
    
    ///Creates the “24.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "24.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._24.circle {
    #if os(macOS)
    
    ///Creates the “24.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "24.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “24.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "24.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “24.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "24.circle", configuration: configuration)
    }
    
    ///Creates the “24.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "24.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “24.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "24.circle")
    }
    
    ///Creates the “24.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "24.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._24.square {
    #if os(macOS)
    
    ///Creates the “24.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "24.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “24.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "24.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “24.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "24.square", configuration: configuration)
    }
    
    ///Creates the “24.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "24.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “24.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "24.square")
    }
    
    ///Creates the “24.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "24.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x25.circle {
    #if os(macOS)
    
    ///Creates the “25.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "25.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “25.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "25.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “25.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "25.circle", configuration: configuration)
    }
    
    ///Creates the “25.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "25.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “25.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "25.circle")
    }
    
    ///Creates the “25.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "25.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x25.square {
    #if os(macOS)
    
    ///Creates the “25.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "25.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “25.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "25.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “25.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "25.square", configuration: configuration)
    }
    
    ///Creates the “25.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "25.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “25.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "25.square")
    }
    
    ///Creates the “25.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "25.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._25.circle {
    #if os(macOS)
    
    ///Creates the “25.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "25.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “25.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "25.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “25.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "25.circle", configuration: configuration)
    }
    
    ///Creates the “25.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "25.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “25.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "25.circle")
    }
    
    ///Creates the “25.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "25.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._25.square {
    #if os(macOS)
    
    ///Creates the “25.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "25.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “25.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "25.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “25.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "25.square", configuration: configuration)
    }
    
    ///Creates the “25.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "25.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “25.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "25.square")
    }
    
    ///Creates the “25.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "25.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x26.circle {
    #if os(macOS)
    
    ///Creates the “26.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "26.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “26.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "26.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “26.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "26.circle", configuration: configuration)
    }
    
    ///Creates the “26.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "26.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “26.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "26.circle")
    }
    
    ///Creates the “26.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "26.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x26.square {
    #if os(macOS)
    
    ///Creates the “26.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "26.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “26.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "26.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “26.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "26.square", configuration: configuration)
    }
    
    ///Creates the “26.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "26.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “26.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "26.square")
    }
    
    ///Creates the “26.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "26.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._26.circle {
    #if os(macOS)
    
    ///Creates the “26.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "26.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “26.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "26.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “26.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "26.circle", configuration: configuration)
    }
    
    ///Creates the “26.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "26.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “26.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "26.circle")
    }
    
    ///Creates the “26.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "26.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._26.square {
    #if os(macOS)
    
    ///Creates the “26.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "26.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “26.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "26.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “26.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "26.square", configuration: configuration)
    }
    
    ///Creates the “26.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "26.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “26.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "26.square")
    }
    
    ///Creates the “26.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "26.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x27.circle {
    #if os(macOS)
    
    ///Creates the “27.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "27.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “27.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "27.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “27.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "27.circle", configuration: configuration)
    }
    
    ///Creates the “27.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "27.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “27.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "27.circle")
    }
    
    ///Creates the “27.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "27.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x27.square {
    #if os(macOS)
    
    ///Creates the “27.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "27.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “27.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "27.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “27.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "27.square", configuration: configuration)
    }
    
    ///Creates the “27.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "27.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “27.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "27.square")
    }
    
    ///Creates the “27.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "27.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._27.circle {
    #if os(macOS)
    
    ///Creates the “27.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "27.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “27.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "27.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “27.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "27.circle", configuration: configuration)
    }
    
    ///Creates the “27.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "27.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “27.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "27.circle")
    }
    
    ///Creates the “27.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "27.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._27.square {
    #if os(macOS)
    
    ///Creates the “27.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "27.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “27.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "27.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “27.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "27.square", configuration: configuration)
    }
    
    ///Creates the “27.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "27.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “27.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "27.square")
    }
    
    ///Creates the “27.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "27.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x28.circle {
    #if os(macOS)
    
    ///Creates the “28.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "28.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “28.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "28.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “28.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "28.circle", configuration: configuration)
    }
    
    ///Creates the “28.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "28.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “28.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "28.circle")
    }
    
    ///Creates the “28.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "28.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x28.square {
    #if os(macOS)
    
    ///Creates the “28.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "28.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “28.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "28.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “28.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "28.square", configuration: configuration)
    }
    
    ///Creates the “28.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "28.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “28.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "28.square")
    }
    
    ///Creates the “28.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "28.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._28.circle {
    #if os(macOS)
    
    ///Creates the “28.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "28.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “28.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "28.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “28.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "28.circle", configuration: configuration)
    }
    
    ///Creates the “28.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "28.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “28.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "28.circle")
    }
    
    ///Creates the “28.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "28.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._28.square {
    #if os(macOS)
    
    ///Creates the “28.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "28.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “28.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "28.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “28.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "28.square", configuration: configuration)
    }
    
    ///Creates the “28.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "28.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “28.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "28.square")
    }
    
    ///Creates the “28.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "28.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x29.circle {
    #if os(macOS)
    
    ///Creates the “29.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "29.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “29.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "29.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “29.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "29.circle", configuration: configuration)
    }
    
    ///Creates the “29.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "29.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “29.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "29.circle")
    }
    
    ///Creates the “29.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "29.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x29.square {
    #if os(macOS)
    
    ///Creates the “29.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "29.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “29.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "29.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “29.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "29.square", configuration: configuration)
    }
    
    ///Creates the “29.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "29.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “29.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "29.square")
    }
    
    ///Creates the “29.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "29.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._29.circle {
    #if os(macOS)
    
    ///Creates the “29.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "29.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “29.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "29.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “29.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "29.circle", configuration: configuration)
    }
    
    ///Creates the “29.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "29.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “29.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "29.circle")
    }
    
    ///Creates the “29.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "29.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._29.square {
    #if os(macOS)
    
    ///Creates the “29.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "29.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “29.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "29.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “29.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "29.square", configuration: configuration)
    }
    
    ///Creates the “29.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "29.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “29.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "29.square")
    }
    
    ///Creates the “29.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "29.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x3.circle {
    #if os(macOS)
    
    ///Creates the “3.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "3.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “3.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "3.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “3.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "3.circle", configuration: configuration)
    }
    
    ///Creates the “3.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "3.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “3.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "3.circle")
    }
    
    ///Creates the “3.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "3.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x3.square {
    #if os(macOS)
    
    ///Creates the “3.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "3.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “3.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "3.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “3.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "3.square", configuration: configuration)
    }
    
    ///Creates the “3.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "3.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “3.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "3.square")
    }
    
    ///Creates the “3.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "3.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._3.circle {
    #if os(macOS)
    
    ///Creates the “3.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "3.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “3.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "3.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “3.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "3.circle", configuration: configuration)
    }
    
    ///Creates the “3.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "3.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “3.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "3.circle")
    }
    
    ///Creates the “3.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "3.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._3.square {
    #if os(macOS)
    
    ///Creates the “3.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "3.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “3.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "3.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “3.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "3.square", configuration: configuration)
    }
    
    ///Creates the “3.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "3.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “3.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "3.square")
    }
    
    ///Creates the “3.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "3.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x30.circle {
    #if os(macOS)
    
    ///Creates the “30.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "30.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “30.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "30.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “30.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "30.circle", configuration: configuration)
    }
    
    ///Creates the “30.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "30.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “30.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "30.circle")
    }
    
    ///Creates the “30.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "30.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x30.square {
    #if os(macOS)
    
    ///Creates the “30.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "30.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “30.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "30.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “30.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "30.square", configuration: configuration)
    }
    
    ///Creates the “30.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "30.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “30.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "30.square")
    }
    
    ///Creates the “30.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "30.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._30.circle {
    #if os(macOS)
    
    ///Creates the “30.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "30.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “30.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "30.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “30.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "30.circle", configuration: configuration)
    }
    
    ///Creates the “30.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "30.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “30.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "30.circle")
    }
    
    ///Creates the “30.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "30.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._30.square {
    #if os(macOS)
    
    ///Creates the “30.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "30.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “30.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "30.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “30.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "30.square", configuration: configuration)
    }
    
    ///Creates the “30.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "30.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “30.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "30.square")
    }
    
    ///Creates the “30.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "30.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x31.circle {
    #if os(macOS)
    
    ///Creates the “31.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "31.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “31.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "31.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “31.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "31.circle", configuration: configuration)
    }
    
    ///Creates the “31.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "31.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “31.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "31.circle")
    }
    
    ///Creates the “31.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "31.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x31.square {
    #if os(macOS)
    
    ///Creates the “31.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "31.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “31.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "31.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “31.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "31.square", configuration: configuration)
    }
    
    ///Creates the “31.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "31.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “31.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "31.square")
    }
    
    ///Creates the “31.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "31.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._31.circle {
    #if os(macOS)
    
    ///Creates the “31.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "31.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “31.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "31.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “31.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "31.circle", configuration: configuration)
    }
    
    ///Creates the “31.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "31.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “31.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "31.circle")
    }
    
    ///Creates the “31.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "31.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._31.square {
    #if os(macOS)
    
    ///Creates the “31.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "31.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “31.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "31.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “31.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "31.square", configuration: configuration)
    }
    
    ///Creates the “31.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "31.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “31.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "31.square")
    }
    
    ///Creates the “31.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "31.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x32.circle {
    #if os(macOS)
    
    ///Creates the “32.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "32.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “32.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "32.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “32.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "32.circle", configuration: configuration)
    }
    
    ///Creates the “32.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "32.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “32.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "32.circle")
    }
    
    ///Creates the “32.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "32.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x32.square {
    #if os(macOS)
    
    ///Creates the “32.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "32.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “32.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "32.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “32.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "32.square", configuration: configuration)
    }
    
    ///Creates the “32.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "32.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “32.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "32.square")
    }
    
    ///Creates the “32.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "32.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._32.circle {
    #if os(macOS)
    
    ///Creates the “32.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "32.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “32.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "32.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “32.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "32.circle", configuration: configuration)
    }
    
    ///Creates the “32.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "32.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “32.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "32.circle")
    }
    
    ///Creates the “32.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "32.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._32.square {
    #if os(macOS)
    
    ///Creates the “32.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "32.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “32.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "32.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “32.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "32.square", configuration: configuration)
    }
    
    ///Creates the “32.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "32.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “32.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "32.square")
    }
    
    ///Creates the “32.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "32.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x33.circle {
    #if os(macOS)
    
    ///Creates the “33.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "33.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “33.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "33.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “33.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "33.circle", configuration: configuration)
    }
    
    ///Creates the “33.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "33.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “33.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "33.circle")
    }
    
    ///Creates the “33.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "33.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x33.square {
    #if os(macOS)
    
    ///Creates the “33.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "33.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “33.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "33.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “33.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "33.square", configuration: configuration)
    }
    
    ///Creates the “33.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "33.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “33.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "33.square")
    }
    
    ///Creates the “33.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "33.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._33.circle {
    #if os(macOS)
    
    ///Creates the “33.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "33.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “33.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "33.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “33.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "33.circle", configuration: configuration)
    }
    
    ///Creates the “33.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "33.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “33.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "33.circle")
    }
    
    ///Creates the “33.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "33.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._33.square {
    #if os(macOS)
    
    ///Creates the “33.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "33.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “33.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "33.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “33.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "33.square", configuration: configuration)
    }
    
    ///Creates the “33.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "33.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “33.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "33.square")
    }
    
    ///Creates the “33.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "33.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x34.circle {
    #if os(macOS)
    
    ///Creates the “34.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "34.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “34.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "34.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “34.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "34.circle", configuration: configuration)
    }
    
    ///Creates the “34.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "34.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “34.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "34.circle")
    }
    
    ///Creates the “34.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "34.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x34.square {
    #if os(macOS)
    
    ///Creates the “34.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "34.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “34.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "34.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “34.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "34.square", configuration: configuration)
    }
    
    ///Creates the “34.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "34.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “34.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "34.square")
    }
    
    ///Creates the “34.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "34.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._34.circle {
    #if os(macOS)
    
    ///Creates the “34.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "34.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “34.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "34.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “34.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "34.circle", configuration: configuration)
    }
    
    ///Creates the “34.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "34.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “34.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "34.circle")
    }
    
    ///Creates the “34.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "34.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._34.square {
    #if os(macOS)
    
    ///Creates the “34.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "34.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “34.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "34.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “34.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "34.square", configuration: configuration)
    }
    
    ///Creates the “34.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "34.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “34.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "34.square")
    }
    
    ///Creates the “34.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "34.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x35.circle {
    #if os(macOS)
    
    ///Creates the “35.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "35.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “35.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "35.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “35.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "35.circle", configuration: configuration)
    }
    
    ///Creates the “35.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "35.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “35.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "35.circle")
    }
    
    ///Creates the “35.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "35.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x35.square {
    #if os(macOS)
    
    ///Creates the “35.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "35.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “35.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "35.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “35.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "35.square", configuration: configuration)
    }
    
    ///Creates the “35.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "35.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “35.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "35.square")
    }
    
    ///Creates the “35.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "35.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._35.circle {
    #if os(macOS)
    
    ///Creates the “35.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "35.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “35.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "35.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “35.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "35.circle", configuration: configuration)
    }
    
    ///Creates the “35.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "35.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “35.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "35.circle")
    }
    
    ///Creates the “35.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "35.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._35.square {
    #if os(macOS)
    
    ///Creates the “35.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "35.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “35.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "35.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “35.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "35.square", configuration: configuration)
    }
    
    ///Creates the “35.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "35.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “35.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "35.square")
    }
    
    ///Creates the “35.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "35.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x36.circle {
    #if os(macOS)
    
    ///Creates the “36.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "36.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “36.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "36.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “36.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "36.circle", configuration: configuration)
    }
    
    ///Creates the “36.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "36.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “36.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "36.circle")
    }
    
    ///Creates the “36.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "36.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x36.square {
    #if os(macOS)
    
    ///Creates the “36.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "36.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “36.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "36.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “36.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "36.square", configuration: configuration)
    }
    
    ///Creates the “36.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "36.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “36.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "36.square")
    }
    
    ///Creates the “36.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "36.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._36.circle {
    #if os(macOS)
    
    ///Creates the “36.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "36.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “36.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "36.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “36.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "36.circle", configuration: configuration)
    }
    
    ///Creates the “36.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "36.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “36.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "36.circle")
    }
    
    ///Creates the “36.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "36.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._36.square {
    #if os(macOS)
    
    ///Creates the “36.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "36.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “36.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "36.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “36.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "36.square", configuration: configuration)
    }
    
    ///Creates the “36.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "36.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “36.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "36.square")
    }
    
    ///Creates the “36.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "36.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x37.circle {
    #if os(macOS)
    
    ///Creates the “37.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "37.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “37.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "37.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “37.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "37.circle", configuration: configuration)
    }
    
    ///Creates the “37.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "37.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “37.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "37.circle")
    }
    
    ///Creates the “37.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "37.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x37.square {
    #if os(macOS)
    
    ///Creates the “37.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "37.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “37.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "37.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “37.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "37.square", configuration: configuration)
    }
    
    ///Creates the “37.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "37.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “37.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "37.square")
    }
    
    ///Creates the “37.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "37.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._37.circle {
    #if os(macOS)
    
    ///Creates the “37.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "37.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “37.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "37.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “37.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "37.circle", configuration: configuration)
    }
    
    ///Creates the “37.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "37.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “37.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "37.circle")
    }
    
    ///Creates the “37.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "37.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._37.square {
    #if os(macOS)
    
    ///Creates the “37.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "37.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “37.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "37.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “37.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "37.square", configuration: configuration)
    }
    
    ///Creates the “37.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "37.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “37.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "37.square")
    }
    
    ///Creates the “37.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "37.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x38.circle {
    #if os(macOS)
    
    ///Creates the “38.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "38.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “38.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "38.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “38.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "38.circle", configuration: configuration)
    }
    
    ///Creates the “38.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "38.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “38.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "38.circle")
    }
    
    ///Creates the “38.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "38.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x38.square {
    #if os(macOS)
    
    ///Creates the “38.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "38.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “38.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "38.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “38.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "38.square", configuration: configuration)
    }
    
    ///Creates the “38.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "38.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “38.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "38.square")
    }
    
    ///Creates the “38.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "38.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._38.circle {
    #if os(macOS)
    
    ///Creates the “38.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "38.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “38.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "38.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “38.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "38.circle", configuration: configuration)
    }
    
    ///Creates the “38.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "38.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “38.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "38.circle")
    }
    
    ///Creates the “38.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "38.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._38.square {
    #if os(macOS)
    
    ///Creates the “38.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "38.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “38.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "38.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “38.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "38.square", configuration: configuration)
    }
    
    ///Creates the “38.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "38.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “38.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "38.square")
    }
    
    ///Creates the “38.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "38.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x39.circle {
    #if os(macOS)
    
    ///Creates the “39.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "39.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “39.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "39.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “39.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "39.circle", configuration: configuration)
    }
    
    ///Creates the “39.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "39.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “39.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "39.circle")
    }
    
    ///Creates the “39.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "39.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x39.square {
    #if os(macOS)
    
    ///Creates the “39.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "39.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “39.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "39.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “39.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "39.square", configuration: configuration)
    }
    
    ///Creates the “39.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "39.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “39.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "39.square")
    }
    
    ///Creates the “39.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "39.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._39.circle {
    #if os(macOS)
    
    ///Creates the “39.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "39.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “39.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "39.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “39.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "39.circle", configuration: configuration)
    }
    
    ///Creates the “39.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "39.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “39.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "39.circle")
    }
    
    ///Creates the “39.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "39.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._39.square {
    #if os(macOS)
    
    ///Creates the “39.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "39.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “39.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "39.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “39.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "39.square", configuration: configuration)
    }
    
    ///Creates the “39.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "39.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “39.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "39.square")
    }
    
    ///Creates the “39.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "39.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x4.alt.circle {
    #if os(macOS)
    
    ///Creates the “4.alt.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.alt.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “4.alt.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.alt.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “4.alt.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.alt.circle", configuration: configuration)
    }
    
    ///Creates the “4.alt.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.alt.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “4.alt.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.alt.circle")
    }
    
    ///Creates the “4.alt.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.alt.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x4.alt.square {
    #if os(macOS)
    
    ///Creates the “4.alt.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.alt.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “4.alt.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.alt.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “4.alt.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.alt.square", configuration: configuration)
    }
    
    ///Creates the “4.alt.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.alt.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “4.alt.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.alt.square")
    }
    
    ///Creates the “4.alt.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.alt.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x4.circle {
    #if os(macOS)
    
    ///Creates the “4.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “4.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “4.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.circle", configuration: configuration)
    }
    
    ///Creates the “4.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “4.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.circle")
    }
    
    ///Creates the “4.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x4.square {
    #if os(macOS)
    
    ///Creates the “4.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “4.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “4.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.square", configuration: configuration)
    }
    
    ///Creates the “4.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “4.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.square")
    }
    
    ///Creates the “4.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._4.alt.circle {
    #if os(macOS)
    
    ///Creates the “4.alt.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.alt.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “4.alt.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.alt.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “4.alt.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.alt.circle", configuration: configuration)
    }
    
    ///Creates the “4.alt.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.alt.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “4.alt.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.alt.circle")
    }
    
    ///Creates the “4.alt.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.alt.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._4.alt.square {
    #if os(macOS)
    
    ///Creates the “4.alt.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.alt.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “4.alt.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.alt.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “4.alt.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.alt.square", configuration: configuration)
    }
    
    ///Creates the “4.alt.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.alt.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “4.alt.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.alt.square")
    }
    
    ///Creates the “4.alt.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.alt.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._4.circle {
    #if os(macOS)
    
    ///Creates the “4.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “4.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “4.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.circle", configuration: configuration)
    }
    
    ///Creates the “4.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “4.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.circle")
    }
    
    ///Creates the “4.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._4.square {
    #if os(macOS)
    
    ///Creates the “4.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “4.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "4.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “4.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.square", configuration: configuration)
    }
    
    ///Creates the “4.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "4.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “4.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.square")
    }
    
    ///Creates the “4.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "4.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x40.circle {
    #if os(macOS)
    
    ///Creates the “40.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "40.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “40.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "40.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “40.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "40.circle", configuration: configuration)
    }
    
    ///Creates the “40.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "40.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “40.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "40.circle")
    }
    
    ///Creates the “40.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "40.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x40.square {
    #if os(macOS)
    
    ///Creates the “40.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "40.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “40.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "40.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “40.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "40.square", configuration: configuration)
    }
    
    ///Creates the “40.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "40.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “40.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "40.square")
    }
    
    ///Creates the “40.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "40.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._40.circle {
    #if os(macOS)
    
    ///Creates the “40.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "40.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “40.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "40.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “40.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "40.circle", configuration: configuration)
    }
    
    ///Creates the “40.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "40.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “40.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "40.circle")
    }
    
    ///Creates the “40.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "40.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._40.square {
    #if os(macOS)
    
    ///Creates the “40.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "40.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “40.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "40.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “40.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "40.square", configuration: configuration)
    }
    
    ///Creates the “40.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "40.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “40.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "40.square")
    }
    
    ///Creates the “40.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "40.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x41.circle {
    #if os(macOS)
    
    ///Creates the “41.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "41.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “41.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "41.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “41.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "41.circle", configuration: configuration)
    }
    
    ///Creates the “41.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "41.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “41.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "41.circle")
    }
    
    ///Creates the “41.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "41.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x41.square {
    #if os(macOS)
    
    ///Creates the “41.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "41.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “41.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "41.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “41.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "41.square", configuration: configuration)
    }
    
    ///Creates the “41.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "41.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “41.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "41.square")
    }
    
    ///Creates the “41.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "41.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._41.circle {
    #if os(macOS)
    
    ///Creates the “41.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "41.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “41.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "41.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “41.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "41.circle", configuration: configuration)
    }
    
    ///Creates the “41.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "41.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “41.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "41.circle")
    }
    
    ///Creates the “41.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "41.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._41.square {
    #if os(macOS)
    
    ///Creates the “41.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "41.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “41.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "41.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “41.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "41.square", configuration: configuration)
    }
    
    ///Creates the “41.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "41.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “41.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "41.square")
    }
    
    ///Creates the “41.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "41.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x42.circle {
    #if os(macOS)
    
    ///Creates the “42.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "42.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “42.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "42.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “42.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "42.circle", configuration: configuration)
    }
    
    ///Creates the “42.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "42.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “42.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "42.circle")
    }
    
    ///Creates the “42.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "42.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x42.square {
    #if os(macOS)
    
    ///Creates the “42.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "42.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “42.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "42.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “42.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "42.square", configuration: configuration)
    }
    
    ///Creates the “42.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "42.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “42.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "42.square")
    }
    
    ///Creates the “42.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "42.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._42.circle {
    #if os(macOS)
    
    ///Creates the “42.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "42.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “42.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "42.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “42.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "42.circle", configuration: configuration)
    }
    
    ///Creates the “42.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "42.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “42.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "42.circle")
    }
    
    ///Creates the “42.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "42.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._42.square {
    #if os(macOS)
    
    ///Creates the “42.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "42.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “42.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "42.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “42.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "42.square", configuration: configuration)
    }
    
    ///Creates the “42.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "42.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “42.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "42.square")
    }
    
    ///Creates the “42.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "42.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x43.circle {
    #if os(macOS)
    
    ///Creates the “43.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "43.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “43.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "43.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “43.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "43.circle", configuration: configuration)
    }
    
    ///Creates the “43.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "43.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “43.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "43.circle")
    }
    
    ///Creates the “43.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "43.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x43.square {
    #if os(macOS)
    
    ///Creates the “43.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "43.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “43.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "43.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “43.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "43.square", configuration: configuration)
    }
    
    ///Creates the “43.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "43.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “43.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "43.square")
    }
    
    ///Creates the “43.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "43.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._43.circle {
    #if os(macOS)
    
    ///Creates the “43.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "43.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “43.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "43.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “43.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "43.circle", configuration: configuration)
    }
    
    ///Creates the “43.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "43.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “43.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "43.circle")
    }
    
    ///Creates the “43.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "43.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._43.square {
    #if os(macOS)
    
    ///Creates the “43.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "43.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “43.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "43.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “43.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "43.square", configuration: configuration)
    }
    
    ///Creates the “43.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "43.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “43.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "43.square")
    }
    
    ///Creates the “43.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "43.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x44.circle {
    #if os(macOS)
    
    ///Creates the “44.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "44.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “44.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "44.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “44.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "44.circle", configuration: configuration)
    }
    
    ///Creates the “44.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "44.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “44.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "44.circle")
    }
    
    ///Creates the “44.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "44.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x44.square {
    #if os(macOS)
    
    ///Creates the “44.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "44.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “44.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "44.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “44.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "44.square", configuration: configuration)
    }
    
    ///Creates the “44.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "44.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “44.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "44.square")
    }
    
    ///Creates the “44.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "44.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._44.circle {
    #if os(macOS)
    
    ///Creates the “44.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "44.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “44.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "44.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “44.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "44.circle", configuration: configuration)
    }
    
    ///Creates the “44.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "44.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “44.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "44.circle")
    }
    
    ///Creates the “44.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "44.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._44.square {
    #if os(macOS)
    
    ///Creates the “44.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "44.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “44.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "44.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “44.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "44.square", configuration: configuration)
    }
    
    ///Creates the “44.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "44.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “44.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "44.square")
    }
    
    ///Creates the “44.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "44.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x45.circle {
    #if os(macOS)
    
    ///Creates the “45.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "45.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “45.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "45.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “45.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "45.circle", configuration: configuration)
    }
    
    ///Creates the “45.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "45.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “45.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "45.circle")
    }
    
    ///Creates the “45.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "45.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x45.square {
    #if os(macOS)
    
    ///Creates the “45.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "45.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “45.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "45.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “45.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "45.square", configuration: configuration)
    }
    
    ///Creates the “45.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "45.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “45.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "45.square")
    }
    
    ///Creates the “45.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "45.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._45.circle {
    #if os(macOS)
    
    ///Creates the “45.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "45.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “45.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "45.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “45.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "45.circle", configuration: configuration)
    }
    
    ///Creates the “45.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "45.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “45.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "45.circle")
    }
    
    ///Creates the “45.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "45.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._45.square {
    #if os(macOS)
    
    ///Creates the “45.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "45.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “45.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "45.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “45.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "45.square", configuration: configuration)
    }
    
    ///Creates the “45.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "45.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “45.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "45.square")
    }
    
    ///Creates the “45.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "45.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x46.circle {
    #if os(macOS)
    
    ///Creates the “46.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "46.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “46.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "46.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “46.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "46.circle", configuration: configuration)
    }
    
    ///Creates the “46.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "46.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “46.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "46.circle")
    }
    
    ///Creates the “46.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "46.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x46.square {
    #if os(macOS)
    
    ///Creates the “46.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "46.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “46.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "46.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “46.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "46.square", configuration: configuration)
    }
    
    ///Creates the “46.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "46.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “46.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "46.square")
    }
    
    ///Creates the “46.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "46.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._46.circle {
    #if os(macOS)
    
    ///Creates the “46.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "46.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “46.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "46.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “46.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "46.circle", configuration: configuration)
    }
    
    ///Creates the “46.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "46.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “46.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "46.circle")
    }
    
    ///Creates the “46.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "46.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._46.square {
    #if os(macOS)
    
    ///Creates the “46.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "46.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “46.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "46.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “46.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "46.square", configuration: configuration)
    }
    
    ///Creates the “46.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "46.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “46.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "46.square")
    }
    
    ///Creates the “46.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "46.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x47.circle {
    #if os(macOS)
    
    ///Creates the “47.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "47.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “47.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "47.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “47.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "47.circle", configuration: configuration)
    }
    
    ///Creates the “47.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "47.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “47.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "47.circle")
    }
    
    ///Creates the “47.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "47.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x47.square {
    #if os(macOS)
    
    ///Creates the “47.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "47.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “47.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "47.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “47.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "47.square", configuration: configuration)
    }
    
    ///Creates the “47.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "47.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “47.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "47.square")
    }
    
    ///Creates the “47.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "47.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._47.circle {
    #if os(macOS)
    
    ///Creates the “47.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "47.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “47.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "47.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “47.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "47.circle", configuration: configuration)
    }
    
    ///Creates the “47.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "47.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “47.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "47.circle")
    }
    
    ///Creates the “47.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "47.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._47.square {
    #if os(macOS)
    
    ///Creates the “47.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "47.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “47.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "47.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “47.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "47.square", configuration: configuration)
    }
    
    ///Creates the “47.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "47.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “47.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "47.square")
    }
    
    ///Creates the “47.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "47.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x48.circle {
    #if os(macOS)
    
    ///Creates the “48.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "48.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “48.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "48.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “48.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "48.circle", configuration: configuration)
    }
    
    ///Creates the “48.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "48.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “48.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "48.circle")
    }
    
    ///Creates the “48.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "48.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x48.square {
    #if os(macOS)
    
    ///Creates the “48.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "48.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “48.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "48.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “48.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "48.square", configuration: configuration)
    }
    
    ///Creates the “48.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "48.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “48.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "48.square")
    }
    
    ///Creates the “48.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "48.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._48.circle {
    #if os(macOS)
    
    ///Creates the “48.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "48.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “48.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "48.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “48.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "48.circle", configuration: configuration)
    }
    
    ///Creates the “48.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "48.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “48.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "48.circle")
    }
    
    ///Creates the “48.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "48.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._48.square {
    #if os(macOS)
    
    ///Creates the “48.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "48.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “48.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "48.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “48.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "48.square", configuration: configuration)
    }
    
    ///Creates the “48.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "48.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “48.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "48.square")
    }
    
    ///Creates the “48.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "48.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x49.circle {
    #if os(macOS)
    
    ///Creates the “49.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "49.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “49.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "49.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “49.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "49.circle", configuration: configuration)
    }
    
    ///Creates the “49.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "49.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “49.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "49.circle")
    }
    
    ///Creates the “49.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "49.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x49.square {
    #if os(macOS)
    
    ///Creates the “49.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "49.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “49.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "49.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “49.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "49.square", configuration: configuration)
    }
    
    ///Creates the “49.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "49.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “49.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "49.square")
    }
    
    ///Creates the “49.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "49.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._49.circle {
    #if os(macOS)
    
    ///Creates the “49.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "49.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “49.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "49.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “49.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "49.circle", configuration: configuration)
    }
    
    ///Creates the “49.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "49.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “49.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "49.circle")
    }
    
    ///Creates the “49.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "49.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._49.square {
    #if os(macOS)
    
    ///Creates the “49.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "49.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “49.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "49.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “49.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "49.square", configuration: configuration)
    }
    
    ///Creates the “49.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "49.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “49.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "49.square")
    }
    
    ///Creates the “49.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "49.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x5.circle {
    #if os(macOS)
    
    ///Creates the “5.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "5.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “5.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "5.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “5.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "5.circle", configuration: configuration)
    }
    
    ///Creates the “5.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "5.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “5.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "5.circle")
    }
    
    ///Creates the “5.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "5.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x5.square {
    #if os(macOS)
    
    ///Creates the “5.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "5.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “5.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "5.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “5.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "5.square", configuration: configuration)
    }
    
    ///Creates the “5.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "5.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “5.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "5.square")
    }
    
    ///Creates the “5.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "5.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._5.circle {
    #if os(macOS)
    
    ///Creates the “5.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "5.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “5.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "5.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “5.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "5.circle", configuration: configuration)
    }
    
    ///Creates the “5.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "5.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “5.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "5.circle")
    }
    
    ///Creates the “5.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "5.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._5.square {
    #if os(macOS)
    
    ///Creates the “5.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "5.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “5.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "5.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “5.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "5.square", configuration: configuration)
    }
    
    ///Creates the “5.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "5.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “5.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "5.square")
    }
    
    ///Creates the “5.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "5.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x50.circle {
    #if os(macOS)
    
    ///Creates the “50.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "50.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “50.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "50.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “50.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "50.circle", configuration: configuration)
    }
    
    ///Creates the “50.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "50.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “50.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "50.circle")
    }
    
    ///Creates the “50.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "50.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x50.square {
    #if os(macOS)
    
    ///Creates the “50.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "50.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “50.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "50.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “50.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "50.square", configuration: configuration)
    }
    
    ///Creates the “50.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "50.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “50.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "50.square")
    }
    
    ///Creates the “50.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "50.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._50.circle {
    #if os(macOS)
    
    ///Creates the “50.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "50.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “50.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "50.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “50.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "50.circle", configuration: configuration)
    }
    
    ///Creates the “50.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "50.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “50.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "50.circle")
    }
    
    ///Creates the “50.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "50.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF._50.square {
    #if os(macOS)
    
    ///Creates the “50.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "50.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “50.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "50.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “50.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "50.square", configuration: configuration)
    }
    
    ///Creates the “50.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "50.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “50.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "50.square")
    }
    
    ///Creates the “50.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "50.square", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x6.alt.circle {
    #if os(macOS)
    
    ///Creates the “6.alt.circle” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "6.alt.circle", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “6.alt.circle” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "6.alt.circle", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “6.alt.circle” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "6.alt.circle", configuration: configuration)
    }
    
    ///Creates the “6.alt.circle” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "6.alt.circle", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “6.alt.circle” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "6.alt.circle")
    }
    
    ///Creates the “6.alt.circle” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "6.alt.circle", variableValue: variableValue)
    }
    
    #endif
}

@available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
extension SF.x6.alt.square {
    #if os(macOS)
    
    ///Creates the “6.alt.square” system symbol image with the accessibility description you specify.
    ///
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "6.alt.square", accessibilityDescription: accessibilityDescription)
    }
    
    ///Creates the “6.alt.square” system symbol image with the variable value you specify.
    ///
    ///The value parameter is valid for symbols that support variable rendering.
    ///
    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
    @available(macOS 13.0, *)
    @available(iOS, unavailable)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
        SFSymbolReference.image(name: "6.alt.square", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
    }
    
    #endif
    
    #if os(iOS) || os(tvOS) || os(watchOS)
    
    ///Creates the “6.alt.square” system symbol image object with the specified configuration.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(macOS, unavailable)
    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "6.alt.square", configuration: configuration)
    }
    
    ///Creates the “6.alt.square” system symbol image object with the configuration and variable value you specify.
    ///
    ///Use this method to retrieve system-defined symbol images.
    ///
    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
    ///- Parameter configuration: The image configuration the system applies to the image.
    ///
    ///- Returns: The object containing the image variant that matches the specified configuration data.
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
        SFSymbolReference.image(name: "6.alt.square", variableValue: variableValue, configuration: configuration)
    }
    
    #endif
    
    #if canImport(SwiftUI)
    ///Creates the “6.alt.square” system symbol image.
    ///
    ///This initializer creates an image using a system-provided symbol.
    public static func swiftUIImage() -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "6.alt.square")
    }
    
    ///Creates the “6.alt.square” system symbol image with a variable value.
    ///
    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
    ///
    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
        SFSymbolReference.swiftUIImage(name: "6.alt.square", variableValue: variableValue)
    }
    
    #endif
}

