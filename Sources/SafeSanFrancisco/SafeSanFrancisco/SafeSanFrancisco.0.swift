#if os(macOS)
import AppKit
#endif
#if os(iOS) || os(tvOS) || os(watchOS)
import UIKit
#endif
#if canImport(SwiftUI)
import SwiftUI
#endif
public struct SF {
    public struct x0 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “0.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "0.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “0.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "0.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “0.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "0.circle.fill", configuration: configuration)
                }
                
                ///Creates the “0.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "0.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “0.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "0.circle.fill")
                }
                
                ///Creates the “0.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "0.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “0.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "0.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “0.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "0.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “0.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "0.square.fill", configuration: configuration)
                }
                
                ///Creates the “0.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "0.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “0.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "0.square.fill")
                }
                
                ///Creates the “0.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "0.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x00 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “00.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "00.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “00.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "00.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “00.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "00.circle.fill", configuration: configuration)
                }
                
                ///Creates the “00.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "00.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “00.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "00.circle.fill")
                }
                
                ///Creates the “00.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "00.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “00.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "00.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “00.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "00.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “00.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "00.square.fill", configuration: configuration)
                }
                
                ///Creates the “00.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "00.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “00.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "00.square.fill")
                }
                
                ///Creates the “00.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "00.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x01 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “01.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "01.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “01.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "01.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “01.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "01.circle.fill", configuration: configuration)
                }
                
                ///Creates the “01.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "01.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “01.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "01.circle.fill")
                }
                
                ///Creates the “01.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "01.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “01.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "01.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “01.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "01.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “01.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "01.square.fill", configuration: configuration)
                }
                
                ///Creates the “01.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "01.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “01.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "01.square.fill")
                }
                
                ///Creates the “01.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "01.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x02 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “02.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "02.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “02.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "02.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “02.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "02.circle.fill", configuration: configuration)
                }
                
                ///Creates the “02.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "02.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “02.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "02.circle.fill")
                }
                
                ///Creates the “02.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "02.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “02.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "02.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “02.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "02.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “02.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "02.square.fill", configuration: configuration)
                }
                
                ///Creates the “02.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "02.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “02.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "02.square.fill")
                }
                
                ///Creates the “02.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "02.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x03 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “03.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "03.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “03.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "03.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “03.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "03.circle.fill", configuration: configuration)
                }
                
                ///Creates the “03.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "03.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “03.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "03.circle.fill")
                }
                
                ///Creates the “03.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "03.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “03.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "03.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “03.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "03.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “03.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "03.square.fill", configuration: configuration)
                }
                
                ///Creates the “03.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "03.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “03.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "03.square.fill")
                }
                
                ///Creates the “03.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "03.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x04 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “04.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "04.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “04.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "04.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “04.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "04.circle.fill", configuration: configuration)
                }
                
                ///Creates the “04.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "04.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “04.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "04.circle.fill")
                }
                
                ///Creates the “04.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "04.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “04.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "04.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “04.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "04.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “04.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "04.square.fill", configuration: configuration)
                }
                
                ///Creates the “04.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "04.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “04.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "04.square.fill")
                }
                
                ///Creates the “04.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "04.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x05 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “05.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "05.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “05.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "05.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “05.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "05.circle.fill", configuration: configuration)
                }
                
                ///Creates the “05.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "05.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “05.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "05.circle.fill")
                }
                
                ///Creates the “05.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "05.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “05.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "05.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “05.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "05.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “05.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "05.square.fill", configuration: configuration)
                }
                
                ///Creates the “05.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "05.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “05.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "05.square.fill")
                }
                
                ///Creates the “05.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "05.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x06 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “06.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "06.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “06.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "06.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “06.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "06.circle.fill", configuration: configuration)
                }
                
                ///Creates the “06.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "06.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “06.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "06.circle.fill")
                }
                
                ///Creates the “06.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "06.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “06.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "06.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “06.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "06.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “06.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "06.square.fill", configuration: configuration)
                }
                
                ///Creates the “06.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "06.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “06.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "06.square.fill")
                }
                
                ///Creates the “06.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "06.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x07 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “07.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "07.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “07.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "07.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “07.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "07.circle.fill", configuration: configuration)
                }
                
                ///Creates the “07.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "07.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “07.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "07.circle.fill")
                }
                
                ///Creates the “07.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "07.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “07.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "07.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “07.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "07.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “07.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "07.square.fill", configuration: configuration)
                }
                
                ///Creates the “07.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "07.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “07.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "07.square.fill")
                }
                
                ///Creates the “07.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "07.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x08 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “08.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "08.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “08.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "08.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “08.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "08.circle.fill", configuration: configuration)
                }
                
                ///Creates the “08.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "08.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “08.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "08.circle.fill")
                }
                
                ///Creates the “08.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "08.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “08.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "08.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “08.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "08.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “08.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "08.square.fill", configuration: configuration)
                }
                
                ///Creates the “08.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "08.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “08.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "08.square.fill")
                }
                
                ///Creates the “08.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "08.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x09 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “09.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "09.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “09.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "09.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “09.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "09.circle.fill", configuration: configuration)
                }
                
                ///Creates the “09.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "09.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “09.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "09.circle.fill")
                }
                
                ///Creates the “09.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "09.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “09.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "09.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “09.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "09.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “09.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "09.square.fill", configuration: configuration)
                }
                
                ///Creates the “09.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "09.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “09.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "09.square.fill")
                }
                
                ///Creates the “09.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "09.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x1 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “1.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "1.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “1.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "1.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “1.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "1.circle.fill", configuration: configuration)
                }
                
                ///Creates the “1.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "1.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “1.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "1.circle.fill")
                }
                
                ///Creates the “1.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "1.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct magnifyingglass {
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “1.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "1.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “1.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "1.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “1.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "1.square.fill", configuration: configuration)
                }
                
                ///Creates the “1.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "1.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “1.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "1.square.fill")
                }
                
                ///Creates the “1.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "1.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x10 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “10.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "10.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “10.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "10.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “10.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "10.circle.fill", configuration: configuration)
                }
                
                ///Creates the “10.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "10.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “10.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "10.circle.fill")
                }
                
                ///Creates the “10.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "10.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “10.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "10.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “10.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "10.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “10.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "10.square.fill", configuration: configuration)
                }
                
                ///Creates the “10.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "10.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “10.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "10.square.fill")
                }
                
                ///Creates the “10.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "10.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x11 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “11.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "11.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “11.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "11.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “11.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "11.circle.fill", configuration: configuration)
                }
                
                ///Creates the “11.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "11.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “11.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "11.circle.fill")
                }
                
                ///Creates the “11.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "11.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “11.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "11.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “11.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "11.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “11.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "11.square.fill", configuration: configuration)
                }
                
                ///Creates the “11.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "11.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “11.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "11.square.fill")
                }
                
                ///Creates the “11.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "11.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x12 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “12.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "12.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “12.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "12.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “12.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "12.circle.fill", configuration: configuration)
                }
                
                ///Creates the “12.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "12.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “12.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "12.circle.fill")
                }
                
                ///Creates the “12.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "12.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “12.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "12.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “12.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "12.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “12.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "12.square.fill", configuration: configuration)
                }
                
                ///Creates the “12.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "12.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “12.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "12.square.fill")
                }
                
                ///Creates the “12.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "12.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x13 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “13.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "13.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “13.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "13.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “13.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "13.circle.fill", configuration: configuration)
                }
                
                ///Creates the “13.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "13.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “13.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "13.circle.fill")
                }
                
                ///Creates the “13.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "13.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “13.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "13.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “13.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "13.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “13.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "13.square.fill", configuration: configuration)
                }
                
                ///Creates the “13.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "13.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “13.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "13.square.fill")
                }
                
                ///Creates the “13.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "13.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x14 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “14.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "14.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “14.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "14.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “14.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "14.circle.fill", configuration: configuration)
                }
                
                ///Creates the “14.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "14.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “14.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "14.circle.fill")
                }
                
                ///Creates the “14.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "14.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “14.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "14.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “14.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "14.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “14.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "14.square.fill", configuration: configuration)
                }
                
                ///Creates the “14.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "14.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “14.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "14.square.fill")
                }
                
                ///Creates the “14.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "14.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x15 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “15.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "15.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “15.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "15.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “15.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "15.circle.fill", configuration: configuration)
                }
                
                ///Creates the “15.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "15.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “15.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "15.circle.fill")
                }
                
                ///Creates the “15.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "15.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “15.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "15.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “15.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "15.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “15.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "15.square.fill", configuration: configuration)
                }
                
                ///Creates the “15.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "15.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “15.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "15.square.fill")
                }
                
                ///Creates the “15.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "15.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x16 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “16.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "16.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “16.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "16.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “16.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "16.circle.fill", configuration: configuration)
                }
                
                ///Creates the “16.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "16.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “16.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "16.circle.fill")
                }
                
                ///Creates the “16.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "16.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “16.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "16.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “16.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "16.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “16.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "16.square.fill", configuration: configuration)
                }
                
                ///Creates the “16.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "16.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “16.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "16.square.fill")
                }
                
                ///Creates the “16.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "16.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x17 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “17.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "17.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “17.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "17.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “17.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "17.circle.fill", configuration: configuration)
                }
                
                ///Creates the “17.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "17.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “17.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "17.circle.fill")
                }
                
                ///Creates the “17.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "17.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “17.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "17.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “17.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "17.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “17.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "17.square.fill", configuration: configuration)
                }
                
                ///Creates the “17.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "17.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “17.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "17.square.fill")
                }
                
                ///Creates the “17.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "17.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x18 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “18.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "18.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “18.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "18.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “18.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "18.circle.fill", configuration: configuration)
                }
                
                ///Creates the “18.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "18.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “18.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "18.circle.fill")
                }
                
                ///Creates the “18.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "18.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “18.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "18.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “18.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "18.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “18.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "18.square.fill", configuration: configuration)
                }
                
                ///Creates the “18.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "18.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “18.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "18.square.fill")
                }
                
                ///Creates the “18.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "18.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x19 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “19.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "19.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “19.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "19.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “19.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "19.circle.fill", configuration: configuration)
                }
                
                ///Creates the “19.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "19.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “19.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "19.circle.fill")
                }
                
                ///Creates the “19.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "19.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “19.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "19.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “19.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "19.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “19.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "19.square.fill", configuration: configuration)
                }
                
                ///Creates the “19.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "19.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “19.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "19.square.fill")
                }
                
                ///Creates the “19.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "19.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x2 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “2.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "2.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “2.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "2.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “2.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "2.circle.fill", configuration: configuration)
                }
                
                ///Creates the “2.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "2.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “2.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "2.circle.fill")
                }
                
                ///Creates the “2.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "2.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “2.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "2.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “2.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "2.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “2.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "2.square.fill", configuration: configuration)
                }
                
                ///Creates the “2.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "2.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “2.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "2.square.fill")
                }
                
                ///Creates the “2.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "2.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x20 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “20.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "20.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “20.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "20.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “20.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "20.circle.fill", configuration: configuration)
                }
                
                ///Creates the “20.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "20.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “20.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "20.circle.fill")
                }
                
                ///Creates the “20.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "20.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “20.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "20.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “20.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "20.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “20.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "20.square.fill", configuration: configuration)
                }
                
                ///Creates the “20.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "20.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “20.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "20.square.fill")
                }
                
                ///Creates the “20.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "20.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x21 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “21.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "21.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “21.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "21.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “21.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "21.circle.fill", configuration: configuration)
                }
                
                ///Creates the “21.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "21.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “21.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "21.circle.fill")
                }
                
                ///Creates the “21.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "21.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “21.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "21.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “21.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "21.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “21.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "21.square.fill", configuration: configuration)
                }
                
                ///Creates the “21.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "21.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “21.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "21.square.fill")
                }
                
                ///Creates the “21.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "21.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x22 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “22.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "22.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “22.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "22.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “22.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "22.circle.fill", configuration: configuration)
                }
                
                ///Creates the “22.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "22.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “22.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "22.circle.fill")
                }
                
                ///Creates the “22.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "22.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “22.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "22.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “22.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "22.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “22.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "22.square.fill", configuration: configuration)
                }
                
                ///Creates the “22.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "22.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “22.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "22.square.fill")
                }
                
                ///Creates the “22.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "22.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x23 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “23.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "23.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “23.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "23.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “23.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "23.circle.fill", configuration: configuration)
                }
                
                ///Creates the “23.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "23.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “23.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "23.circle.fill")
                }
                
                ///Creates the “23.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "23.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “23.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "23.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “23.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "23.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “23.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "23.square.fill", configuration: configuration)
                }
                
                ///Creates the “23.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "23.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “23.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "23.square.fill")
                }
                
                ///Creates the “23.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "23.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x24 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “24.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "24.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “24.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "24.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “24.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "24.circle.fill", configuration: configuration)
                }
                
                ///Creates the “24.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "24.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “24.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "24.circle.fill")
                }
                
                ///Creates the “24.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "24.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “24.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "24.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “24.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "24.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “24.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "24.square.fill", configuration: configuration)
                }
                
                ///Creates the “24.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "24.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “24.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "24.square.fill")
                }
                
                ///Creates the “24.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "24.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x25 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “25.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "25.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “25.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "25.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “25.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "25.circle.fill", configuration: configuration)
                }
                
                ///Creates the “25.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "25.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “25.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "25.circle.fill")
                }
                
                ///Creates the “25.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "25.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “25.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "25.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “25.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "25.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “25.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "25.square.fill", configuration: configuration)
                }
                
                ///Creates the “25.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "25.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “25.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "25.square.fill")
                }
                
                ///Creates the “25.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "25.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x26 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “26.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "26.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “26.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "26.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “26.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "26.circle.fill", configuration: configuration)
                }
                
                ///Creates the “26.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "26.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “26.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "26.circle.fill")
                }
                
                ///Creates the “26.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "26.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “26.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "26.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “26.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "26.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “26.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "26.square.fill", configuration: configuration)
                }
                
                ///Creates the “26.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "26.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “26.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "26.square.fill")
                }
                
                ///Creates the “26.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "26.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x27 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “27.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "27.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “27.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "27.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “27.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "27.circle.fill", configuration: configuration)
                }
                
                ///Creates the “27.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "27.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “27.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "27.circle.fill")
                }
                
                ///Creates the “27.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "27.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “27.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "27.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “27.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "27.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “27.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "27.square.fill", configuration: configuration)
                }
                
                ///Creates the “27.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "27.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “27.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "27.square.fill")
                }
                
                ///Creates the “27.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "27.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x28 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “28.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "28.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “28.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "28.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “28.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "28.circle.fill", configuration: configuration)
                }
                
                ///Creates the “28.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "28.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “28.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "28.circle.fill")
                }
                
                ///Creates the “28.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "28.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “28.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "28.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “28.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "28.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “28.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "28.square.fill", configuration: configuration)
                }
                
                ///Creates the “28.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "28.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “28.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "28.square.fill")
                }
                
                ///Creates the “28.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "28.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x29 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “29.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "29.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “29.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "29.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “29.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "29.circle.fill", configuration: configuration)
                }
                
                ///Creates the “29.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "29.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “29.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "29.circle.fill")
                }
                
                ///Creates the “29.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "29.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “29.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "29.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “29.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "29.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “29.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "29.square.fill", configuration: configuration)
                }
                
                ///Creates the “29.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "29.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “29.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "29.square.fill")
                }
                
                ///Creates the “29.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "29.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x3 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “3.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "3.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “3.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "3.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “3.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "3.circle.fill", configuration: configuration)
                }
                
                ///Creates the “3.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "3.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “3.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "3.circle.fill")
                }
                
                ///Creates the “3.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "3.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “3.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "3.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “3.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "3.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “3.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "3.square.fill", configuration: configuration)
                }
                
                ///Creates the “3.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "3.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “3.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "3.square.fill")
                }
                
                ///Creates the “3.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "3.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x30 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “30.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "30.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “30.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "30.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “30.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "30.circle.fill", configuration: configuration)
                }
                
                ///Creates the “30.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "30.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “30.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "30.circle.fill")
                }
                
                ///Creates the “30.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "30.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “30.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "30.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “30.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "30.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “30.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "30.square.fill", configuration: configuration)
                }
                
                ///Creates the “30.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "30.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “30.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "30.square.fill")
                }
                
                ///Creates the “30.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "30.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x31 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “31.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "31.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “31.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "31.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “31.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "31.circle.fill", configuration: configuration)
                }
                
                ///Creates the “31.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "31.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “31.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "31.circle.fill")
                }
                
                ///Creates the “31.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "31.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “31.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "31.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “31.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "31.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “31.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "31.square.fill", configuration: configuration)
                }
                
                ///Creates the “31.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "31.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “31.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "31.square.fill")
                }
                
                ///Creates the “31.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "31.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x32 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “32.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "32.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “32.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "32.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “32.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "32.circle.fill", configuration: configuration)
                }
                
                ///Creates the “32.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "32.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “32.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "32.circle.fill")
                }
                
                ///Creates the “32.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "32.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “32.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "32.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “32.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "32.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “32.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "32.square.fill", configuration: configuration)
                }
                
                ///Creates the “32.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "32.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “32.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "32.square.fill")
                }
                
                ///Creates the “32.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "32.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x33 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “33.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "33.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “33.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "33.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “33.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "33.circle.fill", configuration: configuration)
                }
                
                ///Creates the “33.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "33.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “33.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "33.circle.fill")
                }
                
                ///Creates the “33.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "33.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “33.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "33.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “33.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "33.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “33.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "33.square.fill", configuration: configuration)
                }
                
                ///Creates the “33.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "33.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “33.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "33.square.fill")
                }
                
                ///Creates the “33.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "33.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x34 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “34.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "34.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “34.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "34.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “34.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "34.circle.fill", configuration: configuration)
                }
                
                ///Creates the “34.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "34.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “34.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "34.circle.fill")
                }
                
                ///Creates the “34.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "34.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “34.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "34.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “34.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "34.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “34.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "34.square.fill", configuration: configuration)
                }
                
                ///Creates the “34.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "34.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “34.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "34.square.fill")
                }
                
                ///Creates the “34.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "34.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x35 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “35.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "35.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “35.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "35.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “35.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "35.circle.fill", configuration: configuration)
                }
                
                ///Creates the “35.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "35.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “35.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "35.circle.fill")
                }
                
                ///Creates the “35.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "35.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “35.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "35.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “35.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "35.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “35.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "35.square.fill", configuration: configuration)
                }
                
                ///Creates the “35.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "35.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “35.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "35.square.fill")
                }
                
                ///Creates the “35.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "35.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x36 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “36.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "36.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “36.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "36.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “36.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "36.circle.fill", configuration: configuration)
                }
                
                ///Creates the “36.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "36.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “36.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "36.circle.fill")
                }
                
                ///Creates the “36.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "36.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “36.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "36.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “36.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "36.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “36.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "36.square.fill", configuration: configuration)
                }
                
                ///Creates the “36.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "36.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “36.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "36.square.fill")
                }
                
                ///Creates the “36.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "36.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x37 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “37.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "37.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “37.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "37.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “37.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "37.circle.fill", configuration: configuration)
                }
                
                ///Creates the “37.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "37.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “37.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "37.circle.fill")
                }
                
                ///Creates the “37.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "37.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “37.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "37.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “37.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "37.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “37.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "37.square.fill", configuration: configuration)
                }
                
                ///Creates the “37.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "37.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “37.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "37.square.fill")
                }
                
                ///Creates the “37.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "37.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x38 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “38.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "38.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “38.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "38.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “38.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "38.circle.fill", configuration: configuration)
                }
                
                ///Creates the “38.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "38.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “38.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "38.circle.fill")
                }
                
                ///Creates the “38.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "38.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “38.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "38.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “38.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "38.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “38.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "38.square.fill", configuration: configuration)
                }
                
                ///Creates the “38.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "38.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “38.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "38.square.fill")
                }
                
                ///Creates the “38.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "38.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x39 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “39.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "39.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “39.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "39.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “39.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "39.circle.fill", configuration: configuration)
                }
                
                ///Creates the “39.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "39.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “39.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "39.circle.fill")
                }
                
                ///Creates the “39.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "39.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “39.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "39.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “39.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "39.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “39.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "39.square.fill", configuration: configuration)
                }
                
                ///Creates the “39.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "39.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “39.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "39.square.fill")
                }
                
                ///Creates the “39.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "39.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x4 {
        public struct alt {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “4.alt.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "4.alt.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “4.alt.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "4.alt.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “4.alt.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "4.alt.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “4.alt.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "4.alt.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “4.alt.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "4.alt.circle.fill")
                    }
                    
                    ///Creates the “4.alt.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "4.alt.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “4.alt.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "4.alt.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “4.alt.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "4.alt.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “4.alt.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "4.alt.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “4.alt.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "4.alt.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “4.alt.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "4.alt.square.fill")
                    }
                    
                    ///Creates the “4.alt.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "4.alt.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “4.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "4.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “4.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "4.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “4.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "4.circle.fill", configuration: configuration)
                }
                
                ///Creates the “4.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "4.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “4.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "4.circle.fill")
                }
                
                ///Creates the “4.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "4.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “4.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "4.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “4.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "4.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “4.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "4.square.fill", configuration: configuration)
                }
                
                ///Creates the “4.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "4.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “4.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "4.square.fill")
                }
                
                ///Creates the “4.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "4.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x40 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “40.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "40.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “40.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "40.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “40.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "40.circle.fill", configuration: configuration)
                }
                
                ///Creates the “40.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "40.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “40.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "40.circle.fill")
                }
                
                ///Creates the “40.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "40.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “40.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "40.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “40.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "40.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “40.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "40.square.fill", configuration: configuration)
                }
                
                ///Creates the “40.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "40.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “40.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "40.square.fill")
                }
                
                ///Creates the “40.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "40.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x41 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “41.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "41.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “41.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "41.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “41.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "41.circle.fill", configuration: configuration)
                }
                
                ///Creates the “41.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "41.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “41.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "41.circle.fill")
                }
                
                ///Creates the “41.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "41.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “41.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "41.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “41.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "41.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “41.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "41.square.fill", configuration: configuration)
                }
                
                ///Creates the “41.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "41.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “41.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "41.square.fill")
                }
                
                ///Creates the “41.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "41.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x42 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “42.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "42.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “42.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "42.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “42.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "42.circle.fill", configuration: configuration)
                }
                
                ///Creates the “42.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "42.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “42.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "42.circle.fill")
                }
                
                ///Creates the “42.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "42.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “42.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "42.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “42.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "42.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “42.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "42.square.fill", configuration: configuration)
                }
                
                ///Creates the “42.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "42.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “42.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "42.square.fill")
                }
                
                ///Creates the “42.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "42.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x43 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “43.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "43.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “43.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "43.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “43.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "43.circle.fill", configuration: configuration)
                }
                
                ///Creates the “43.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "43.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “43.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "43.circle.fill")
                }
                
                ///Creates the “43.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "43.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “43.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "43.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “43.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "43.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “43.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "43.square.fill", configuration: configuration)
                }
                
                ///Creates the “43.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "43.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “43.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "43.square.fill")
                }
                
                ///Creates the “43.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "43.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x44 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “44.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "44.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “44.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "44.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “44.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "44.circle.fill", configuration: configuration)
                }
                
                ///Creates the “44.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "44.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “44.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "44.circle.fill")
                }
                
                ///Creates the “44.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "44.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “44.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "44.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “44.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "44.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “44.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "44.square.fill", configuration: configuration)
                }
                
                ///Creates the “44.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "44.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “44.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "44.square.fill")
                }
                
                ///Creates the “44.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "44.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x45 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “45.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "45.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “45.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "45.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “45.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "45.circle.fill", configuration: configuration)
                }
                
                ///Creates the “45.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "45.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “45.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "45.circle.fill")
                }
                
                ///Creates the “45.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "45.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “45.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "45.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “45.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "45.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “45.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "45.square.fill", configuration: configuration)
                }
                
                ///Creates the “45.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "45.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “45.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "45.square.fill")
                }
                
                ///Creates the “45.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "45.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x46 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “46.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "46.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “46.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "46.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “46.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "46.circle.fill", configuration: configuration)
                }
                
                ///Creates the “46.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "46.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “46.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "46.circle.fill")
                }
                
                ///Creates the “46.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "46.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “46.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "46.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “46.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "46.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “46.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "46.square.fill", configuration: configuration)
                }
                
                ///Creates the “46.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "46.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “46.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "46.square.fill")
                }
                
                ///Creates the “46.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "46.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x47 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “47.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "47.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “47.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "47.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “47.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "47.circle.fill", configuration: configuration)
                }
                
                ///Creates the “47.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "47.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “47.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "47.circle.fill")
                }
                
                ///Creates the “47.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "47.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “47.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "47.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “47.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "47.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “47.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "47.square.fill", configuration: configuration)
                }
                
                ///Creates the “47.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "47.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “47.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "47.square.fill")
                }
                
                ///Creates the “47.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "47.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x48 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “48.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "48.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “48.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "48.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “48.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "48.circle.fill", configuration: configuration)
                }
                
                ///Creates the “48.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "48.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “48.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "48.circle.fill")
                }
                
                ///Creates the “48.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "48.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “48.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "48.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “48.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "48.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “48.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "48.square.fill", configuration: configuration)
                }
                
                ///Creates the “48.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "48.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “48.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "48.square.fill")
                }
                
                ///Creates the “48.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "48.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x49 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “49.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "49.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “49.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "49.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “49.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "49.circle.fill", configuration: configuration)
                }
                
                ///Creates the “49.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "49.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “49.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "49.circle.fill")
                }
                
                ///Creates the “49.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "49.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “49.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "49.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “49.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "49.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “49.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "49.square.fill", configuration: configuration)
                }
                
                ///Creates the “49.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "49.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “49.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "49.square.fill")
                }
                
                ///Creates the “49.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "49.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x5 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “5.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "5.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “5.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "5.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “5.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "5.circle.fill", configuration: configuration)
                }
                
                ///Creates the “5.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "5.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “5.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "5.circle.fill")
                }
                
                ///Creates the “5.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "5.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “5.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "5.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “5.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "5.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “5.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "5.square.fill", configuration: configuration)
                }
                
                ///Creates the “5.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "5.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “5.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "5.square.fill")
                }
                
                ///Creates the “5.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "5.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x50 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “50.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "50.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “50.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "50.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “50.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "50.circle.fill", configuration: configuration)
                }
                
                ///Creates the “50.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "50.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “50.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "50.circle.fill")
                }
                
                ///Creates the “50.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "50.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “50.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "50.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “50.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "50.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “50.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "50.square.fill", configuration: configuration)
                }
                
                ///Creates the “50.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "50.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “50.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "50.square.fill")
                }
                
                ///Creates the “50.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "50.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x6 {
        public struct alt {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “6.alt.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "6.alt.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “6.alt.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "6.alt.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “6.alt.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "6.alt.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “6.alt.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "6.alt.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “6.alt.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "6.alt.circle.fill")
                    }
                    
                    ///Creates the “6.alt.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "6.alt.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “6.alt.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "6.alt.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “6.alt.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "6.alt.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “6.alt.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "6.alt.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “6.alt.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "6.alt.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “6.alt.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "6.alt.square.fill")
                    }
                    
                    ///Creates the “6.alt.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "6.alt.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “6.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "6.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “6.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "6.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “6.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "6.circle.fill", configuration: configuration)
                }
                
                ///Creates the “6.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "6.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “6.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "6.circle.fill")
                }
                
                ///Creates the “6.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "6.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “6.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "6.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “6.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "6.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “6.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "6.square.fill", configuration: configuration)
                }
                
                ///Creates the “6.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "6.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “6.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "6.square.fill")
                }
                
                ///Creates the “6.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "6.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x7 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “7.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "7.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “7.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "7.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “7.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "7.circle.fill", configuration: configuration)
                }
                
                ///Creates the “7.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "7.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “7.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "7.circle.fill")
                }
                
                ///Creates the “7.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "7.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “7.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "7.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “7.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "7.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “7.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "7.square.fill", configuration: configuration)
                }
                
                ///Creates the “7.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "7.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “7.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "7.square.fill")
                }
                
                ///Creates the “7.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "7.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x8 {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “8.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "8.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “8.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "8.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “8.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "8.circle.fill", configuration: configuration)
                }
                
                ///Creates the “8.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "8.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “8.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "8.circle.fill")
                }
                
                ///Creates the “8.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "8.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “8.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "8.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “8.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "8.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “8.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "8.square.fill", configuration: configuration)
                }
                
                ///Creates the “8.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "8.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “8.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "8.square.fill")
                }
                
                ///Creates the “8.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "8.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct x9 {
        public struct alt {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “9.alt.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "9.alt.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “9.alt.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "9.alt.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “9.alt.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "9.alt.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “9.alt.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "9.alt.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “9.alt.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "9.alt.circle.fill")
                    }
                    
                    ///Creates the “9.alt.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "9.alt.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “9.alt.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "9.alt.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “9.alt.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "9.alt.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “9.alt.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "9.alt.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “9.alt.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "9.alt.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “9.alt.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "9.alt.square.fill")
                    }
                    
                    ///Creates the “9.alt.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "9.alt.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “9.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "9.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “9.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "9.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “9.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "9.circle.fill", configuration: configuration)
                }
                
                ///Creates the “9.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "9.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “9.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "9.circle.fill")
                }
                
                ///Creates the “9.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "9.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “9.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "9.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “9.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "9.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “9.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "9.square.fill", configuration: configuration)
                }
                
                ///Creates the “9.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "9.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “9.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "9.square.fill")
                }
                
                ///Creates the “9.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "9.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct a {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “a.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "a.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “a.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "a.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “a.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "a.circle.fill", configuration: configuration)
                }
                
                ///Creates the “a.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "a.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “a.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "a.circle.fill")
                }
                
                ///Creates the “a.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "a.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “a.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "a.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “a.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "a.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “a.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "a.square.fill", configuration: configuration)
                }
                
                ///Creates the “a.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "a.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “a.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "a.square.fill")
                }
                
                ///Creates the “a.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "a.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct airplane {
        private init() {}
    }
    
    public struct airplayaudio {
        private init() {}
    }
    
    public struct airplayvideo {
        private init() {}
    }
    
    public struct alarm {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “alarm.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "alarm.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “alarm.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "alarm.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “alarm.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "alarm.fill", configuration: configuration)
            }
            
            ///Creates the “alarm.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "alarm.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “alarm.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "alarm.fill")
            }
            
            ///Creates the “alarm.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "alarm.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct alt {
        private init() {}
    }
    
    public struct ant {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “ant.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "ant.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “ant.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "ant.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “ant.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "ant.circle.fill", configuration: configuration)
                }
                
                ///Creates the “ant.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "ant.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “ant.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "ant.circle.fill")
                }
                
                ///Creates the “ant.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "ant.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “ant.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "ant.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “ant.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "ant.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “ant.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "ant.fill", configuration: configuration)
            }
            
            ///Creates the “ant.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "ant.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “ant.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "ant.fill")
            }
            
            ///Creates the “ant.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "ant.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct antenna {
        public struct radiowaves {
            public struct left {
                public struct and {
                    public struct right {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct app {
        public struct badge {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “app.badge.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "app.badge.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “app.badge.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "app.badge.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “app.badge.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "app.badge.fill", configuration: configuration)
                }
                
                ///Creates the “app.badge.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "app.badge.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “app.badge.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "app.badge.fill")
                }
                
                ///Creates the “app.badge.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "app.badge.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “app.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "app.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “app.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "app.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “app.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "app.fill", configuration: configuration)
            }
            
            ///Creates the “app.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "app.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “app.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "app.fill")
            }
            
            ///Creates the “app.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "app.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct gift {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “app.gift.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "app.gift.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “app.gift.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "app.gift.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “app.gift.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "app.gift.fill", configuration: configuration)
                }
                
                ///Creates the “app.gift.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "app.gift.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “app.gift.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "app.gift.fill")
                }
                
                ///Creates the “app.gift.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "app.gift.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct archivebox {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “archivebox.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "archivebox.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “archivebox.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "archivebox.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “archivebox.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "archivebox.fill", configuration: configuration)
            }
            
            ///Creates the “archivebox.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "archivebox.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “archivebox.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "archivebox.fill")
            }
            
            ///Creates the “archivebox.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "archivebox.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct arkit {
        private init() {}
    }
    
    public struct arrow {
        public struct x2 {
            public struct circlepath {
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.2.circlepath.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.2.circlepath.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.2.circlepath.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.2.circlepath.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.2.circlepath.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.2.circlepath.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.2.circlepath.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.2.circlepath.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.2.circlepath.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.2.circlepath.circle.fill")
                        }
                        
                        ///Creates the “arrow.2.circlepath.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.2.circlepath.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct squarepath {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x3 {
            public struct trianglepath {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct branch {
            private init() {}
        }
        
        public struct clockwise {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.clockwise.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.clockwise.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.clockwise.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.clockwise.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.clockwise.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.clockwise.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.clockwise.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.clockwise.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.clockwise.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.clockwise.circle.fill")
                    }
                    
                    ///Creates the “arrow.clockwise.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.clockwise.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct icloud {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.clockwise.icloud.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.clockwise.icloud.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.clockwise.icloud.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.clockwise.icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.clockwise.icloud.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.clockwise.icloud.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.clockwise.icloud.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.clockwise.icloud.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.clockwise.icloud.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.clockwise.icloud.fill")
                    }
                    
                    ///Creates the “arrow.clockwise.icloud.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.clockwise.icloud.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct counterclockwise {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.counterclockwise.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.counterclockwise.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.counterclockwise.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.counterclockwise.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.counterclockwise.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.counterclockwise.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.counterclockwise.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.counterclockwise.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.counterclockwise.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.counterclockwise.circle.fill")
                    }
                    
                    ///Creates the “arrow.counterclockwise.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.counterclockwise.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct icloud {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.counterclockwise.icloud.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.counterclockwise.icloud.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.counterclockwise.icloud.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.counterclockwise.icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.counterclockwise.icloud.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.counterclockwise.icloud.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.counterclockwise.icloud.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.counterclockwise.icloud.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.counterclockwise.icloud.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.counterclockwise.icloud.fill")
                    }
                    
                    ///Creates the “arrow.counterclockwise.icloud.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.counterclockwise.icloud.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct down {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.down.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.down.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.down.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.down.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.down.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.down.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.down.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.down.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.down.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.down.circle.fill")
                    }
                    
                    ///Creates the “arrow.down.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.down.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct doc {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.down.doc.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.down.doc.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.down.doc.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.down.doc.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.down.doc.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.down.doc.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.down.doc.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.down.doc.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.down.doc.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.down.doc.fill")
                    }
                    
                    ///Creates the “arrow.down.doc.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.down.doc.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct left {
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.down.left.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.left.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.down.left.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.left.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.down.left.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.left.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.down.left.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.left.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.down.left.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.left.circle.fill")
                        }
                        
                        ///Creates the “arrow.down.left.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.left.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.down.left.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.left.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.down.left.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.left.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.down.left.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.left.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.down.left.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.left.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.down.left.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.left.square.fill")
                        }
                        
                        ///Creates the “arrow.down.left.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.left.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct video {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.down.left.video.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.left.video.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.down.left.video.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.left.video.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.down.left.video.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.left.video.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.down.left.video.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.left.video.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.down.left.video.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.left.video.fill")
                        }
                        
                        ///Creates the “arrow.down.left.video.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.left.video.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct right {
                public struct and {
                    public struct arrow {
                        public struct up {
                            public struct left {
                                private init() {}
                            }
                            
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.down.right.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.right.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.down.right.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.down.right.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.right.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.down.right.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.right.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.down.right.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.right.circle.fill")
                        }
                        
                        ///Creates the “arrow.down.right.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.right.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.down.right.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.right.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.down.right.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.down.right.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.down.right.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.right.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.down.right.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.down.right.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.down.right.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.right.square.fill")
                        }
                        
                        ///Creates the “arrow.down.right.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.down.right.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.down.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.down.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.down.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.down.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.down.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.down.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.down.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.down.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.down.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.down.square.fill")
                    }
                    
                    ///Creates the “arrow.down.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.down.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct to {
                public struct line {
                    public struct alt {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct left {
            public struct and {
                public struct right {
                    public struct circle {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrow.left.and.right.circle.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.left.and.right.circle.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrow.left.and.right.circle.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.left.and.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrow.left.and.right.circle.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.left.and.right.circle.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrow.left.and.right.circle.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.left.and.right.circle.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrow.left.and.right.circle.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.left.and.right.circle.fill")
                            }
                            
                            ///Creates the “arrow.left.and.right.circle.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.left.and.right.circle.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    public struct square {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrow.left.and.right.square.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.left.and.right.square.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrow.left.and.right.square.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.left.and.right.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrow.left.and.right.square.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.left.and.right.square.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrow.left.and.right.square.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.left.and.right.square.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrow.left.and.right.square.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.left.and.right.square.fill")
                            }
                            
                            ///Creates the “arrow.left.and.right.square.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.left.and.right.square.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.left.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.left.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.left.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.left.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.left.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.left.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.left.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.left.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.left.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.left.circle.fill")
                    }
                    
                    ///Creates the “arrow.left.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.left.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.left.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.left.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.left.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.left.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.left.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.left.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.left.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.left.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.left.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.left.square.fill")
                    }
                    
                    ///Creates the “arrow.left.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.left.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct to {
                public struct line {
                    public struct alt {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct merge {
            private init() {}
        }
        
        public struct right {
            public struct arrow {
                public struct left {
                    public struct circle {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrow.right.arrow.left.circle.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.right.arrow.left.circle.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrow.right.arrow.left.circle.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.right.arrow.left.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrow.right.arrow.left.circle.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.right.arrow.left.circle.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrow.right.arrow.left.circle.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.right.arrow.left.circle.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrow.right.arrow.left.circle.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.right.arrow.left.circle.fill")
                            }
                            
                            ///Creates the “arrow.right.arrow.left.circle.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.right.arrow.left.circle.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    public struct square {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrow.right.arrow.left.square.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.right.arrow.left.square.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrow.right.arrow.left.square.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.right.arrow.left.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrow.right.arrow.left.square.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.right.arrow.left.square.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrow.right.arrow.left.square.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.right.arrow.left.square.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrow.right.arrow.left.square.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.right.arrow.left.square.fill")
                            }
                            
                            ///Creates the “arrow.right.arrow.left.square.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.right.arrow.left.square.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.right.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.right.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.right.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.right.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.right.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.right.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.right.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.right.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.right.circle.fill")
                    }
                    
                    ///Creates the “arrow.right.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.right.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.right.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.right.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.right.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.right.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.right.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.right.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.right.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.right.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.right.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.right.square.fill")
                    }
                    
                    ///Creates the “arrow.right.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.right.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct to {
                public struct line {
                    public struct alt {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct swap {
            private init() {}
        }
        
        public struct turn {
            public struct down {
                public struct left {
                    private init() {}
                }
                
                public struct right {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct left {
                public struct down {
                    private init() {}
                }
                
                public struct up {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct right {
                public struct down {
                    private init() {}
                }
                
                public struct up {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct up {
                public struct left {
                    private init() {}
                }
                
                public struct right {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct up {
            public struct and {
                public struct down {
                    public struct circle {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrow.up.and.down.circle.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.up.and.down.circle.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrow.up.and.down.circle.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.up.and.down.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrow.up.and.down.circle.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.up.and.down.circle.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrow.up.and.down.circle.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.up.and.down.circle.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrow.up.and.down.circle.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.up.and.down.circle.fill")
                            }
                            
                            ///Creates the “arrow.up.and.down.circle.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.up.and.down.circle.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    public struct square {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrow.up.and.down.square.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.up.and.down.square.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrow.up.and.down.square.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.up.and.down.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrow.up.and.down.square.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.up.and.down.square.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrow.up.and.down.square.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.up.and.down.square.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrow.up.and.down.square.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.up.and.down.square.fill")
                            }
                            
                            ///Creates the “arrow.up.and.down.square.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.up.and.down.square.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct arrow {
                public struct down {
                    public struct circle {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrow.up.arrow.down.circle.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.up.arrow.down.circle.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrow.up.arrow.down.circle.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.up.arrow.down.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrow.up.arrow.down.circle.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.up.arrow.down.circle.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrow.up.arrow.down.circle.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.up.arrow.down.circle.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrow.up.arrow.down.circle.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.up.arrow.down.circle.fill")
                            }
                            
                            ///Creates the “arrow.up.arrow.down.circle.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.up.arrow.down.circle.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    public struct square {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrow.up.arrow.down.square.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.up.arrow.down.square.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrow.up.arrow.down.square.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrow.up.arrow.down.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrow.up.arrow.down.square.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.up.arrow.down.square.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrow.up.arrow.down.square.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrow.up.arrow.down.square.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrow.up.arrow.down.square.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.up.arrow.down.square.fill")
                            }
                            
                            ///Creates the “arrow.up.arrow.down.square.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrow.up.arrow.down.square.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct bin {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.up.bin.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.up.bin.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.up.bin.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.up.bin.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.up.bin.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.up.bin.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.up.bin.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.up.bin.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.up.bin.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.up.bin.fill")
                    }
                    
                    ///Creates the “arrow.up.bin.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.up.bin.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.up.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.up.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.up.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.up.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.up.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.up.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.up.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.up.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.up.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.up.circle.fill")
                    }
                    
                    ///Creates the “arrow.up.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.up.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct doc {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.up.doc.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.up.doc.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.up.doc.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.up.doc.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.up.doc.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.up.doc.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.up.doc.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.up.doc.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.up.doc.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.up.doc.fill")
                    }
                    
                    ///Creates the “arrow.up.doc.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.up.doc.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct left {
                public struct and {
                    public struct arrow {
                        public struct down {
                            public struct right {
                                private init() {}
                            }
                            
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.up.left.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.left.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.up.left.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.left.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.up.left.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.left.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.up.left.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.left.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.up.left.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.left.circle.fill")
                        }
                        
                        ///Creates the “arrow.up.left.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.left.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.up.left.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.left.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.up.left.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.left.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.up.left.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.left.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.up.left.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.left.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.up.left.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.left.square.fill")
                        }
                        
                        ///Creates the “arrow.up.left.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.left.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct right {
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.up.right.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.right.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.up.right.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.up.right.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.right.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.up.right.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.right.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.up.right.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.right.circle.fill")
                        }
                        
                        ///Creates the “arrow.up.right.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.right.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct diamond {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.up.right.diamond.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.right.diamond.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.up.right.diamond.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.right.diamond.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.up.right.diamond.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.right.diamond.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.up.right.diamond.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.right.diamond.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.up.right.diamond.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.right.diamond.fill")
                        }
                        
                        ///Creates the “arrow.up.right.diamond.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.right.diamond.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.up.right.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.right.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.up.right.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.right.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.up.right.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.right.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.up.right.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.right.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.up.right.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.right.square.fill")
                        }
                        
                        ///Creates the “arrow.up.right.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.right.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct video {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.up.right.video.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.right.video.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.up.right.video.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.up.right.video.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.up.right.video.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.right.video.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.up.right.video.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.up.right.video.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.up.right.video.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.right.video.fill")
                        }
                        
                        ///Creates the “arrow.up.right.video.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.up.right.video.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrow.up.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.up.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrow.up.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrow.up.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrow.up.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.up.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrow.up.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrow.up.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrow.up.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.up.square.fill")
                    }
                    
                    ///Creates the “arrow.up.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrow.up.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct to {
                public struct line {
                    public struct alt {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct uturn {
            public struct down {
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.uturn.down.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.down.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.uturn.down.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.down.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.uturn.down.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.down.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.uturn.down.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.down.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.uturn.down.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.down.circle.fill")
                        }
                        
                        ///Creates the “arrow.uturn.down.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.down.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.uturn.down.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.down.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.uturn.down.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.down.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.uturn.down.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.down.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.uturn.down.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.down.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.uturn.down.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.down.square.fill")
                        }
                        
                        ///Creates the “arrow.uturn.down.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.down.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct left {
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.uturn.left.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.left.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.uturn.left.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.left.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.uturn.left.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.left.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.uturn.left.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.left.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.uturn.left.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.left.circle.fill")
                        }
                        
                        ///Creates the “arrow.uturn.left.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.left.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.uturn.left.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.left.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.uturn.left.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.left.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.uturn.left.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.left.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.uturn.left.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.left.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.uturn.left.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.left.square.fill")
                        }
                        
                        ///Creates the “arrow.uturn.left.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.left.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct right {
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.uturn.right.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.right.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.uturn.right.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.uturn.right.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.right.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.uturn.right.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.right.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.uturn.right.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.right.circle.fill")
                        }
                        
                        ///Creates the “arrow.uturn.right.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.right.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.uturn.right.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.right.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.uturn.right.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.right.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.uturn.right.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.right.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.uturn.right.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.right.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.uturn.right.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.right.square.fill")
                        }
                        
                        ///Creates the “arrow.uturn.right.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.right.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct up {
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.uturn.up.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.up.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.uturn.up.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.up.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.uturn.up.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.up.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.uturn.up.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.up.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.uturn.up.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.up.circle.fill")
                        }
                        
                        ///Creates the “arrow.uturn.up.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.up.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrow.uturn.up.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.up.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrow.uturn.up.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrow.uturn.up.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrow.uturn.up.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.up.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrow.uturn.up.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrow.uturn.up.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrow.uturn.up.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.up.square.fill")
                        }
                        
                        ///Creates the “arrow.uturn.up.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrow.uturn.up.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct arrowshape {
        public struct turn {
            public struct up {
                public struct left {
                    public struct x2 {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrowshape.turn.up.left.2.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.left.2.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrowshape.turn.up.left.2.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.left.2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrowshape.turn.up.left.2.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.left.2.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrowshape.turn.up.left.2.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.left.2.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrowshape.turn.up.left.2.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.left.2.fill")
                            }
                            
                            ///Creates the “arrowshape.turn.up.left.2.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.left.2.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    public struct circle {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrowshape.turn.up.left.circle.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.left.circle.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrowshape.turn.up.left.circle.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.left.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrowshape.turn.up.left.circle.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.left.circle.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrowshape.turn.up.left.circle.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.left.circle.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrowshape.turn.up.left.circle.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.left.circle.fill")
                            }
                            
                            ///Creates the “arrowshape.turn.up.left.circle.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.left.circle.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrowshape.turn.up.left.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrowshape.turn.up.left.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrowshape.turn.up.left.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrowshape.turn.up.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrowshape.turn.up.left.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrowshape.turn.up.left.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrowshape.turn.up.left.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrowshape.turn.up.left.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrowshape.turn.up.left.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.left.fill")
                        }
                        
                        ///Creates the “arrowshape.turn.up.left.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.left.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct right {
                    public struct circle {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “arrowshape.turn.up.right.circle.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.right.circle.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “arrowshape.turn.up.right.circle.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “arrowshape.turn.up.right.circle.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.right.circle.fill", configuration: configuration)
                            }
                            
                            ///Creates the “arrowshape.turn.up.right.circle.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "arrowshape.turn.up.right.circle.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “arrowshape.turn.up.right.circle.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.right.circle.fill")
                            }
                            
                            ///Creates the “arrowshape.turn.up.right.circle.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.right.circle.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “arrowshape.turn.up.right.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrowshape.turn.up.right.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “arrowshape.turn.up.right.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "arrowshape.turn.up.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “arrowshape.turn.up.right.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrowshape.turn.up.right.fill", configuration: configuration)
                        }
                        
                        ///Creates the “arrowshape.turn.up.right.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "arrowshape.turn.up.right.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “arrowshape.turn.up.right.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.right.fill")
                        }
                        
                        ///Creates the “arrowshape.turn.up.right.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "arrowshape.turn.up.right.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct arrowtriangle {
        public struct down {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrowtriangle.down.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.down.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrowtriangle.down.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.down.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrowtriangle.down.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.down.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrowtriangle.down.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.down.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrowtriangle.down.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.down.circle.fill")
                    }
                    
                    ///Creates the “arrowtriangle.down.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.down.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “arrowtriangle.down.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "arrowtriangle.down.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “arrowtriangle.down.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "arrowtriangle.down.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “arrowtriangle.down.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "arrowtriangle.down.fill", configuration: configuration)
                }
                
                ///Creates the “arrowtriangle.down.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "arrowtriangle.down.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “arrowtriangle.down.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "arrowtriangle.down.fill")
                }
                
                ///Creates the “arrowtriangle.down.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "arrowtriangle.down.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrowtriangle.down.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.down.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrowtriangle.down.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.down.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrowtriangle.down.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.down.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrowtriangle.down.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.down.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrowtriangle.down.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.down.square.fill")
                    }
                    
                    ///Creates the “arrowtriangle.down.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.down.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct left {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrowtriangle.left.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.left.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrowtriangle.left.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.left.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrowtriangle.left.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.left.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrowtriangle.left.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.left.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrowtriangle.left.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.left.circle.fill")
                    }
                    
                    ///Creates the “arrowtriangle.left.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.left.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “arrowtriangle.left.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "arrowtriangle.left.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “arrowtriangle.left.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "arrowtriangle.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “arrowtriangle.left.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "arrowtriangle.left.fill", configuration: configuration)
                }
                
                ///Creates the “arrowtriangle.left.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "arrowtriangle.left.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “arrowtriangle.left.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "arrowtriangle.left.fill")
                }
                
                ///Creates the “arrowtriangle.left.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "arrowtriangle.left.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrowtriangle.left.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.left.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrowtriangle.left.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.left.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrowtriangle.left.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.left.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrowtriangle.left.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.left.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrowtriangle.left.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.left.square.fill")
                    }
                    
                    ///Creates the “arrowtriangle.left.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.left.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct right {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrowtriangle.right.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.right.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrowtriangle.right.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrowtriangle.right.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.right.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrowtriangle.right.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.right.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrowtriangle.right.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.right.circle.fill")
                    }
                    
                    ///Creates the “arrowtriangle.right.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.right.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “arrowtriangle.right.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "arrowtriangle.right.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “arrowtriangle.right.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "arrowtriangle.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “arrowtriangle.right.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "arrowtriangle.right.fill", configuration: configuration)
                }
                
                ///Creates the “arrowtriangle.right.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "arrowtriangle.right.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “arrowtriangle.right.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "arrowtriangle.right.fill")
                }
                
                ///Creates the “arrowtriangle.right.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "arrowtriangle.right.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrowtriangle.right.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.right.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrowtriangle.right.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.right.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrowtriangle.right.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.right.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrowtriangle.right.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.right.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrowtriangle.right.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.right.square.fill")
                    }
                    
                    ///Creates the “arrowtriangle.right.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.right.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct up {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrowtriangle.up.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.up.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrowtriangle.up.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.up.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrowtriangle.up.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.up.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrowtriangle.up.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.up.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrowtriangle.up.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.up.circle.fill")
                    }
                    
                    ///Creates the “arrowtriangle.up.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.up.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “arrowtriangle.up.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "arrowtriangle.up.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “arrowtriangle.up.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "arrowtriangle.up.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “arrowtriangle.up.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "arrowtriangle.up.fill", configuration: configuration)
                }
                
                ///Creates the “arrowtriangle.up.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "arrowtriangle.up.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “arrowtriangle.up.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "arrowtriangle.up.fill")
                }
                
                ///Creates the “arrowtriangle.up.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "arrowtriangle.up.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “arrowtriangle.up.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.up.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “arrowtriangle.up.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "arrowtriangle.up.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “arrowtriangle.up.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.up.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “arrowtriangle.up.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "arrowtriangle.up.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “arrowtriangle.up.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.up.square.fill")
                    }
                    
                    ///Creates the “arrowtriangle.up.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "arrowtriangle.up.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct asterisk {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “asterisk.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "asterisk.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “asterisk.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "asterisk.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “asterisk.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "asterisk.circle.fill", configuration: configuration)
                }
                
                ///Creates the “asterisk.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "asterisk.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “asterisk.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "asterisk.circle.fill")
                }
                
                ///Creates the “asterisk.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "asterisk.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct at {
        public struct badge {
            public struct minus {
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct australsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “australsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "australsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “australsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "australsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “australsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "australsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “australsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "australsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “australsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "australsign.circle.fill")
                }
                
                ///Creates the “australsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "australsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “australsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "australsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “australsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "australsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “australsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "australsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “australsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "australsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “australsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "australsign.square.fill")
                }
                
                ///Creates the “australsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "australsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct b {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “b.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "b.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “b.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "b.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “b.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "b.circle.fill", configuration: configuration)
                }
                
                ///Creates the “b.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "b.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “b.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "b.circle.fill")
                }
                
                ///Creates the “b.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "b.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “b.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "b.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “b.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "b.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “b.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "b.square.fill", configuration: configuration)
                }
                
                ///Creates the “b.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "b.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “b.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "b.square.fill")
                }
                
                ///Creates the “b.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "b.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct backward {
        public struct end {
            public struct alt {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “backward.end.alt.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "backward.end.alt.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “backward.end.alt.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "backward.end.alt.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “backward.end.alt.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "backward.end.alt.fill", configuration: configuration)
                    }
                    
                    ///Creates the “backward.end.alt.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "backward.end.alt.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “backward.end.alt.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "backward.end.alt.fill")
                    }
                    
                    ///Creates the “backward.end.alt.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "backward.end.alt.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “backward.end.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "backward.end.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “backward.end.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "backward.end.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “backward.end.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "backward.end.fill", configuration: configuration)
                }
                
                ///Creates the “backward.end.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "backward.end.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “backward.end.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "backward.end.fill")
                }
                
                ///Creates the “backward.end.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "backward.end.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “backward.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "backward.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “backward.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "backward.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “backward.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "backward.fill", configuration: configuration)
            }
            
            ///Creates the “backward.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "backward.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “backward.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "backward.fill")
            }
            
            ///Creates the “backward.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "backward.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct badge {
        public struct plus {
            public struct radiowaves {
                public struct right {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct bag {
        public struct badge {
            public struct minus {
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            public struct badge {
                public struct minus {
                    private init() {}
                }
                
                public struct plus {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “bag.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bag.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “bag.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bag.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “bag.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bag.fill", configuration: configuration)
            }
            
            ///Creates the “bag.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bag.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “bag.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bag.fill")
            }
            
            ///Creates the “bag.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bag.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct bahtsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bahtsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bahtsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bahtsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bahtsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bahtsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bahtsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “bahtsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bahtsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bahtsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bahtsign.circle.fill")
                }
                
                ///Creates the “bahtsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bahtsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bahtsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bahtsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bahtsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bahtsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bahtsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bahtsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “bahtsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bahtsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bahtsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bahtsign.square.fill")
                }
                
                ///Creates the “bahtsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bahtsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct bandage {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “bandage.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bandage.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “bandage.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bandage.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “bandage.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bandage.fill", configuration: configuration)
            }
            
            ///Creates the “bandage.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bandage.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “bandage.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bandage.fill")
            }
            
            ///Creates the “bandage.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bandage.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct barcode {
        public struct viewfinder {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct battery {
        public struct x0 {
            private init() {}
        }
        
        public struct x100 {
            private init() {}
        }
        
        public struct x25 {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct bed {
        public struct double {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bed.double.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bed.double.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bed.double.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bed.double.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bed.double.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bed.double.fill", configuration: configuration)
                }
                
                ///Creates the “bed.double.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bed.double.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bed.double.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bed.double.fill")
                }
                
                ///Creates the “bed.double.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bed.double.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct bell {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bell.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bell.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bell.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bell.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bell.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bell.circle.fill", configuration: configuration)
                }
                
                ///Creates the “bell.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bell.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bell.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bell.circle.fill")
                }
                
                ///Creates the “bell.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bell.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “bell.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bell.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “bell.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bell.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “bell.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bell.fill", configuration: configuration)
            }
            
            ///Creates the “bell.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bell.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “bell.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bell.fill")
            }
            
            ///Creates the “bell.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bell.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bell.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bell.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bell.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bell.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bell.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bell.slash.fill", configuration: configuration)
                }
                
                ///Creates the “bell.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bell.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bell.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bell.slash.fill")
                }
                
                ///Creates the “bell.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bell.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct bin {
        public struct xmark {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bin.xmark.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bin.xmark.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bin.xmark.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bin.xmark.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bin.xmark.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bin.xmark.fill", configuration: configuration)
                }
                
                ///Creates the “bin.xmark.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bin.xmark.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bin.xmark.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bin.xmark.fill")
                }
                
                ///Creates the “bin.xmark.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bin.xmark.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct bitcoinsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bitcoinsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bitcoinsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bitcoinsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bitcoinsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bitcoinsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bitcoinsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “bitcoinsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bitcoinsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bitcoinsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bitcoinsign.circle.fill")
                }
                
                ///Creates the “bitcoinsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bitcoinsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bitcoinsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bitcoinsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bitcoinsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bitcoinsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bitcoinsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bitcoinsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “bitcoinsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bitcoinsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bitcoinsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bitcoinsign.square.fill")
                }
                
                ///Creates the “bitcoinsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bitcoinsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct bold {
        public struct italic {
            public struct underline {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct underline {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct bolt {
        public struct badge {
            public struct a {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “bolt.badge.a.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bolt.badge.a.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “bolt.badge.a.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bolt.badge.a.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “bolt.badge.a.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bolt.badge.a.fill", configuration: configuration)
                    }
                    
                    ///Creates the “bolt.badge.a.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bolt.badge.a.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “bolt.badge.a.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bolt.badge.a.fill")
                    }
                    
                    ///Creates the “bolt.badge.a.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bolt.badge.a.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bolt.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bolt.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bolt.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bolt.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bolt.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bolt.circle.fill", configuration: configuration)
                }
                
                ///Creates the “bolt.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bolt.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bolt.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bolt.circle.fill")
                }
                
                ///Creates the “bolt.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bolt.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “bolt.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bolt.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “bolt.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bolt.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “bolt.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bolt.fill", configuration: configuration)
            }
            
            ///Creates the “bolt.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bolt.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “bolt.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bolt.fill")
            }
            
            ///Creates the “bolt.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bolt.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct horizontal {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “bolt.horizontal.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bolt.horizontal.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “bolt.horizontal.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bolt.horizontal.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “bolt.horizontal.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bolt.horizontal.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “bolt.horizontal.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bolt.horizontal.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “bolt.horizontal.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bolt.horizontal.circle.fill")
                    }
                    
                    ///Creates the “bolt.horizontal.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bolt.horizontal.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bolt.horizontal.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bolt.horizontal.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bolt.horizontal.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bolt.horizontal.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bolt.horizontal.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bolt.horizontal.fill", configuration: configuration)
                }
                
                ///Creates the “bolt.horizontal.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bolt.horizontal.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bolt.horizontal.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bolt.horizontal.fill")
                }
                
                ///Creates the “bolt.horizontal.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bolt.horizontal.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct icloud {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “bolt.horizontal.icloud.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bolt.horizontal.icloud.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “bolt.horizontal.icloud.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bolt.horizontal.icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “bolt.horizontal.icloud.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bolt.horizontal.icloud.fill", configuration: configuration)
                    }
                    
                    ///Creates the “bolt.horizontal.icloud.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bolt.horizontal.icloud.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “bolt.horizontal.icloud.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bolt.horizontal.icloud.fill")
                    }
                    
                    ///Creates the “bolt.horizontal.icloud.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bolt.horizontal.icloud.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bolt.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bolt.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bolt.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bolt.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bolt.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bolt.slash.fill", configuration: configuration)
                }
                
                ///Creates the “bolt.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bolt.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bolt.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bolt.slash.fill")
                }
                
                ///Creates the “bolt.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bolt.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct book {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “book.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "book.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “book.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "book.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “book.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "book.circle.fill", configuration: configuration)
                }
                
                ///Creates the “book.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "book.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “book.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "book.circle.fill")
                }
                
                ///Creates the “book.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "book.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “book.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "book.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “book.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "book.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “book.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "book.fill", configuration: configuration)
            }
            
            ///Creates the “book.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "book.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “book.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "book.fill")
            }
            
            ///Creates the “book.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "book.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct bookmark {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “bookmark.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bookmark.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “bookmark.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "bookmark.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “bookmark.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bookmark.fill", configuration: configuration)
            }
            
            ///Creates the “bookmark.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "bookmark.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “bookmark.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bookmark.fill")
            }
            
            ///Creates the “bookmark.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "bookmark.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct briefcase {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “briefcase.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "briefcase.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “briefcase.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "briefcase.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “briefcase.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "briefcase.fill", configuration: configuration)
            }
            
            ///Creates the “briefcase.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "briefcase.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “briefcase.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "briefcase.fill")
            }
            
            ///Creates the “briefcase.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "briefcase.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct bubble {
        public struct left {
            public struct and {
                public struct bubble {
                    public struct right {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “bubble.left.and.bubble.right.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "bubble.left.and.bubble.right.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “bubble.left.and.bubble.right.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "bubble.left.and.bubble.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “bubble.left.and.bubble.right.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "bubble.left.and.bubble.right.fill", configuration: configuration)
                            }
                            
                            ///Creates the “bubble.left.and.bubble.right.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "bubble.left.and.bubble.right.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “bubble.left.and.bubble.right.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "bubble.left.and.bubble.right.fill")
                            }
                            
                            ///Creates the “bubble.left.and.bubble.right.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "bubble.left.and.bubble.right.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bubble.left.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bubble.left.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bubble.left.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bubble.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bubble.left.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bubble.left.fill", configuration: configuration)
                }
                
                ///Creates the “bubble.left.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bubble.left.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bubble.left.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bubble.left.fill")
                }
                
                ///Creates the “bubble.left.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bubble.left.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct middle {
            public struct bottom {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “bubble.middle.bottom.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bubble.middle.bottom.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “bubble.middle.bottom.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bubble.middle.bottom.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “bubble.middle.bottom.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bubble.middle.bottom.fill", configuration: configuration)
                    }
                    
                    ///Creates the “bubble.middle.bottom.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bubble.middle.bottom.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “bubble.middle.bottom.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bubble.middle.bottom.fill")
                    }
                    
                    ///Creates the “bubble.middle.bottom.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bubble.middle.bottom.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct top {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “bubble.middle.top.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bubble.middle.top.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “bubble.middle.top.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "bubble.middle.top.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “bubble.middle.top.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bubble.middle.top.fill", configuration: configuration)
                    }
                    
                    ///Creates the “bubble.middle.top.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "bubble.middle.top.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “bubble.middle.top.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bubble.middle.top.fill")
                    }
                    
                    ///Creates the “bubble.middle.top.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "bubble.middle.top.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct right {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “bubble.right.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bubble.right.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “bubble.right.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "bubble.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “bubble.right.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bubble.right.fill", configuration: configuration)
                }
                
                ///Creates the “bubble.right.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "bubble.right.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “bubble.right.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bubble.right.fill")
                }
                
                ///Creates the “bubble.right.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "bubble.right.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct burn {
        private init() {}
    }
    
    public struct burst {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “burst.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "burst.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “burst.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "burst.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “burst.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "burst.fill", configuration: configuration)
            }
            
            ///Creates the “burst.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "burst.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “burst.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "burst.fill")
            }
            
            ///Creates the “burst.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "burst.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct c {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “c.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "c.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “c.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "c.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “c.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "c.circle.fill", configuration: configuration)
                }
                
                ///Creates the “c.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "c.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “c.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "c.circle.fill")
                }
                
                ///Creates the “c.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "c.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “c.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "c.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “c.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "c.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “c.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "c.square.fill", configuration: configuration)
                }
                
                ///Creates the “c.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "c.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “c.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "c.square.fill")
                }
                
                ///Creates the “c.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "c.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct calendar {
        public struct badge {
            public struct minus {
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “calendar.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "calendar.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “calendar.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "calendar.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “calendar.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "calendar.circle.fill", configuration: configuration)
                }
                
                ///Creates the “calendar.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "calendar.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “calendar.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "calendar.circle.fill")
                }
                
                ///Creates the “calendar.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "calendar.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct camera {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “camera.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "camera.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “camera.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "camera.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “camera.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "camera.circle.fill", configuration: configuration)
                }
                
                ///Creates the “camera.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "camera.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “camera.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "camera.circle.fill")
                }
                
                ///Creates the “camera.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "camera.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “camera.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "camera.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “camera.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "camera.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “camera.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "camera.fill", configuration: configuration)
            }
            
            ///Creates the “camera.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "camera.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “camera.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "camera.fill")
            }
            
            ///Creates the “camera.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "camera.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct on {
            public struct rectangle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “camera.on.rectangle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "camera.on.rectangle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “camera.on.rectangle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "camera.on.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “camera.on.rectangle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "camera.on.rectangle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “camera.on.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "camera.on.rectangle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “camera.on.rectangle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "camera.on.rectangle.fill")
                    }
                    
                    ///Creates the “camera.on.rectangle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "camera.on.rectangle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct rotate {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “camera.rotate.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "camera.rotate.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “camera.rotate.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "camera.rotate.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “camera.rotate.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "camera.rotate.fill", configuration: configuration)
                }
                
                ///Creates the “camera.rotate.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "camera.rotate.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “camera.rotate.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "camera.rotate.fill")
                }
                
                ///Creates the “camera.rotate.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "camera.rotate.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct viewfinder {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct capslock {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “capslock.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "capslock.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “capslock.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "capslock.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “capslock.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "capslock.fill", configuration: configuration)
            }
            
            ///Creates the “capslock.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "capslock.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “capslock.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "capslock.fill")
            }
            
            ///Creates the “capslock.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "capslock.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct capsule {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “capsule.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "capsule.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “capsule.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "capsule.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “capsule.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "capsule.fill", configuration: configuration)
            }
            
            ///Creates the “capsule.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "capsule.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “capsule.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "capsule.fill")
            }
            
            ///Creates the “capsule.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "capsule.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct captions {
        public struct bubble {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “captions.bubble.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "captions.bubble.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “captions.bubble.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "captions.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “captions.bubble.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "captions.bubble.fill", configuration: configuration)
                }
                
                ///Creates the “captions.bubble.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "captions.bubble.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “captions.bubble.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "captions.bubble.fill")
                }
                
                ///Creates the “captions.bubble.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "captions.bubble.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct car {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “car.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "car.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “car.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "car.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “car.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "car.fill", configuration: configuration)
            }
            
            ///Creates the “car.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "car.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “car.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "car.fill")
            }
            
            ///Creates the “car.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "car.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct cart {
        public struct badge {
            public struct minus {
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            public struct badge {
                public struct minus {
                    private init() {}
                }
                
                public struct plus {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “cart.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "cart.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “cart.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "cart.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “cart.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "cart.fill", configuration: configuration)
            }
            
            ///Creates the “cart.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "cart.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “cart.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "cart.fill")
            }
            
            ///Creates the “cart.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "cart.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct cedisign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cedisign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cedisign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cedisign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cedisign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cedisign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cedisign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “cedisign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cedisign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cedisign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cedisign.circle.fill")
                }
                
                ///Creates the “cedisign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cedisign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cedisign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cedisign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cedisign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cedisign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cedisign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cedisign.square.fill", configuration: configuration)
                }
                
                ///Creates the “cedisign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cedisign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cedisign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cedisign.square.fill")
                }
                
                ///Creates the “cedisign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cedisign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct centsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “centsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "centsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “centsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "centsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “centsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "centsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “centsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "centsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “centsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "centsign.circle.fill")
                }
                
                ///Creates the “centsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "centsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “centsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "centsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “centsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "centsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “centsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "centsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “centsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "centsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “centsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "centsign.square.fill")
                }
                
                ///Creates the “centsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "centsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct chart {
        public struct bar {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “chart.bar.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "chart.bar.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “chart.bar.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "chart.bar.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “chart.bar.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "chart.bar.fill", configuration: configuration)
                }
                
                ///Creates the “chart.bar.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "chart.bar.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “chart.bar.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "chart.bar.fill")
                }
                
                ///Creates the “chart.bar.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "chart.bar.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct pie {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “chart.pie.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "chart.pie.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “chart.pie.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "chart.pie.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “chart.pie.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "chart.pie.fill", configuration: configuration)
                }
                
                ///Creates the “chart.pie.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "chart.pie.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “chart.pie.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "chart.pie.fill")
                }
                
                ///Creates the “chart.pie.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "chart.pie.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct checkmark {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “checkmark.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “checkmark.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “checkmark.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.circle.fill", configuration: configuration)
                }
                
                ///Creates the “checkmark.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “checkmark.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.circle.fill")
                }
                
                ///Creates the “checkmark.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct rectangle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “checkmark.rectangle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.rectangle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “checkmark.rectangle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “checkmark.rectangle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.rectangle.fill", configuration: configuration)
                }
                
                ///Creates the “checkmark.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.rectangle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “checkmark.rectangle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.rectangle.fill")
                }
                
                ///Creates the “checkmark.rectangle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.rectangle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct seal {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “checkmark.seal.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.seal.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “checkmark.seal.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.seal.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “checkmark.seal.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.seal.fill", configuration: configuration)
                }
                
                ///Creates the “checkmark.seal.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.seal.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “checkmark.seal.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.seal.fill")
                }
                
                ///Creates the “checkmark.seal.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.seal.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct shield {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “checkmark.shield.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.shield.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “checkmark.shield.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.shield.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “checkmark.shield.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.shield.fill", configuration: configuration)
                }
                
                ///Creates the “checkmark.shield.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.shield.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “checkmark.shield.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.shield.fill")
                }
                
                ///Creates the “checkmark.shield.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.shield.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “checkmark.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “checkmark.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "checkmark.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “checkmark.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.square.fill", configuration: configuration)
                }
                
                ///Creates the “checkmark.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "checkmark.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “checkmark.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.square.fill")
                }
                
                ///Creates the “checkmark.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "checkmark.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct chevron {
        public struct compact {
            public struct down {
                private init() {}
            }
            
            public struct left {
                private init() {}
            }
            
            public struct right {
                private init() {}
            }
            
            public struct up {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct down {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “chevron.down.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.down.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “chevron.down.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.down.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “chevron.down.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.down.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “chevron.down.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.down.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “chevron.down.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.down.circle.fill")
                    }
                    
                    ///Creates the “chevron.down.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.down.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “chevron.down.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.down.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “chevron.down.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.down.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “chevron.down.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.down.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “chevron.down.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.down.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “chevron.down.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.down.square.fill")
                    }
                    
                    ///Creates the “chevron.down.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.down.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct left {
            public struct x2 {
                private init() {}
            }
            
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “chevron.left.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.left.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “chevron.left.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.left.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “chevron.left.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.left.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “chevron.left.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.left.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “chevron.left.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.left.circle.fill")
                    }
                    
                    ///Creates the “chevron.left.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.left.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct slash {
                public struct chevron {
                    public struct right {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “chevron.left.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.left.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “chevron.left.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.left.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “chevron.left.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.left.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “chevron.left.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.left.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “chevron.left.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.left.square.fill")
                    }
                    
                    ///Creates the “chevron.left.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.left.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct right {
            public struct x2 {
                private init() {}
            }
            
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “chevron.right.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.right.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “chevron.right.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.right.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “chevron.right.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.right.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “chevron.right.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.right.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “chevron.right.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.right.circle.fill")
                    }
                    
                    ///Creates the “chevron.right.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.right.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “chevron.right.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.right.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “chevron.right.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.right.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “chevron.right.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.right.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “chevron.right.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.right.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “chevron.right.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.right.square.fill")
                    }
                    
                    ///Creates the “chevron.right.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.right.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct up {
            public struct chevron {
                public struct down {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “chevron.up.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.up.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “chevron.up.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.up.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “chevron.up.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.up.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “chevron.up.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.up.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “chevron.up.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.up.circle.fill")
                    }
                    
                    ///Creates the “chevron.up.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.up.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “chevron.up.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.up.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “chevron.up.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "chevron.up.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “chevron.up.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.up.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “chevron.up.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "chevron.up.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “chevron.up.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.up.square.fill")
                    }
                    
                    ///Creates the “chevron.up.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "chevron.up.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct circle {
        public struct bottomthird {
            public struct split {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “circle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "circle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “circle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “circle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "circle.fill", configuration: configuration)
            }
            
            ///Creates the “circle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "circle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “circle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "circle.fill")
            }
            
            ///Creates the “circle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "circle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct grid {
            public struct x3x3 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “circle.grid.3x3.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "circle.grid.3x3.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “circle.grid.3x3.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "circle.grid.3x3.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “circle.grid.3x3.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "circle.grid.3x3.fill", configuration: configuration)
                    }
                    
                    ///Creates the “circle.grid.3x3.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "circle.grid.3x3.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “circle.grid.3x3.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "circle.grid.3x3.fill")
                    }
                    
                    ///Creates the “circle.grid.3x3.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "circle.grid.3x3.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct hex {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “circle.grid.hex.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "circle.grid.hex.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “circle.grid.hex.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "circle.grid.hex.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “circle.grid.hex.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "circle.grid.hex.fill", configuration: configuration)
                    }
                    
                    ///Creates the “circle.grid.hex.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "circle.grid.hex.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “circle.grid.hex.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "circle.grid.hex.fill")
                    }
                    
                    ///Creates the “circle.grid.hex.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "circle.grid.hex.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct lefthalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “circle.lefthalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "circle.lefthalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “circle.lefthalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "circle.lefthalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “circle.lefthalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "circle.lefthalf.fill", configuration: configuration)
                }
                
                ///Creates the “circle.lefthalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "circle.lefthalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “circle.lefthalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "circle.lefthalf.fill")
                }
                
                ///Creates the “circle.lefthalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "circle.lefthalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct righthalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “circle.righthalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "circle.righthalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “circle.righthalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "circle.righthalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “circle.righthalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "circle.righthalf.fill", configuration: configuration)
                }
                
                ///Creates the “circle.righthalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "circle.righthalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “circle.righthalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "circle.righthalf.fill")
                }
                
                ///Creates the “circle.righthalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "circle.righthalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct clear {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “clear.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "clear.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “clear.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "clear.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “clear.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "clear.fill", configuration: configuration)
            }
            
            ///Creates the “clear.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "clear.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “clear.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "clear.fill")
            }
            
            ///Creates the “clear.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "clear.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct clock {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “clock.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "clock.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “clock.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "clock.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “clock.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "clock.fill", configuration: configuration)
            }
            
            ///Creates the “clock.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "clock.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “clock.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "clock.fill")
            }
            
            ///Creates the “clock.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "clock.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct cloud {
        public struct bolt {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.bolt.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.bolt.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.bolt.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.bolt.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.bolt.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.bolt.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.bolt.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.bolt.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.bolt.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.bolt.fill")
                }
                
                ///Creates the “cloud.bolt.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.bolt.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rain {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “cloud.bolt.rain.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.bolt.rain.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “cloud.bolt.rain.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.bolt.rain.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “cloud.bolt.rain.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.bolt.rain.fill", configuration: configuration)
                    }
                    
                    ///Creates the “cloud.bolt.rain.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.bolt.rain.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “cloud.bolt.rain.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.bolt.rain.fill")
                    }
                    
                    ///Creates the “cloud.bolt.rain.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.bolt.rain.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct drizzle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.drizzle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.drizzle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.drizzle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.drizzle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.drizzle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.drizzle.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.drizzle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.drizzle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.drizzle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.drizzle.fill")
                }
                
                ///Creates the “cloud.drizzle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.drizzle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “cloud.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "cloud.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “cloud.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "cloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “cloud.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "cloud.fill", configuration: configuration)
            }
            
            ///Creates the “cloud.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "cloud.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “cloud.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "cloud.fill")
            }
            
            ///Creates the “cloud.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "cloud.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct fog {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.fog.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.fog.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.fog.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.fog.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.fog.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.fog.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.fog.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.fog.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.fog.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.fog.fill")
                }
                
                ///Creates the “cloud.fog.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.fog.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct hail {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.hail.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.hail.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.hail.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.hail.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.hail.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.hail.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.hail.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.hail.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.hail.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.hail.fill")
                }
                
                ///Creates the “cloud.hail.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.hail.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct heavyrain {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.heavyrain.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.heavyrain.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.heavyrain.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.heavyrain.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.heavyrain.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.heavyrain.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.heavyrain.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.heavyrain.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.heavyrain.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.heavyrain.fill")
                }
                
                ///Creates the “cloud.heavyrain.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.heavyrain.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct moon {
            public struct bolt {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “cloud.moon.bolt.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.moon.bolt.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “cloud.moon.bolt.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.moon.bolt.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “cloud.moon.bolt.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.moon.bolt.fill", configuration: configuration)
                    }
                    
                    ///Creates the “cloud.moon.bolt.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.moon.bolt.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “cloud.moon.bolt.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.moon.bolt.fill")
                    }
                    
                    ///Creates the “cloud.moon.bolt.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.moon.bolt.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.moon.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.moon.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.moon.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.moon.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.moon.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.moon.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.moon.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.moon.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.moon.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.moon.fill")
                }
                
                ///Creates the “cloud.moon.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.moon.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rain {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “cloud.moon.rain.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.moon.rain.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “cloud.moon.rain.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.moon.rain.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “cloud.moon.rain.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.moon.rain.fill", configuration: configuration)
                    }
                    
                    ///Creates the “cloud.moon.rain.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.moon.rain.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “cloud.moon.rain.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.moon.rain.fill")
                    }
                    
                    ///Creates the “cloud.moon.rain.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.moon.rain.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct rain {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.rain.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.rain.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.rain.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.rain.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.rain.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.rain.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.rain.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.rain.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.rain.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.rain.fill")
                }
                
                ///Creates the “cloud.rain.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.rain.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct sleet {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.sleet.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.sleet.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.sleet.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.sleet.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.sleet.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.sleet.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.sleet.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.sleet.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.sleet.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.sleet.fill")
                }
                
                ///Creates the “cloud.sleet.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.sleet.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct snow {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.snow.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.snow.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.snow.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.snow.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.snow.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.snow.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.snow.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.snow.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.snow.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.snow.fill")
                }
                
                ///Creates the “cloud.snow.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.snow.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct sun {
            public struct bolt {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “cloud.sun.bolt.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.sun.bolt.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “cloud.sun.bolt.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.sun.bolt.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “cloud.sun.bolt.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.sun.bolt.fill", configuration: configuration)
                    }
                    
                    ///Creates the “cloud.sun.bolt.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.sun.bolt.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “cloud.sun.bolt.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.sun.bolt.fill")
                    }
                    
                    ///Creates the “cloud.sun.bolt.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.sun.bolt.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cloud.sun.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.sun.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cloud.sun.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cloud.sun.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cloud.sun.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.sun.fill", configuration: configuration)
                }
                
                ///Creates the “cloud.sun.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cloud.sun.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cloud.sun.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.sun.fill")
                }
                
                ///Creates the “cloud.sun.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cloud.sun.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rain {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “cloud.sun.rain.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.sun.rain.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “cloud.sun.rain.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "cloud.sun.rain.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “cloud.sun.rain.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.sun.rain.fill", configuration: configuration)
                    }
                    
                    ///Creates the “cloud.sun.rain.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "cloud.sun.rain.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “cloud.sun.rain.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.sun.rain.fill")
                    }
                    
                    ///Creates the “cloud.sun.rain.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "cloud.sun.rain.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct coloncurrencysign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “coloncurrencysign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "coloncurrencysign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “coloncurrencysign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "coloncurrencysign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “coloncurrencysign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "coloncurrencysign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “coloncurrencysign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "coloncurrencysign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “coloncurrencysign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "coloncurrencysign.circle.fill")
                }
                
                ///Creates the “coloncurrencysign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "coloncurrencysign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “coloncurrencysign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "coloncurrencysign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “coloncurrencysign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "coloncurrencysign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “coloncurrencysign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "coloncurrencysign.square.fill", configuration: configuration)
                }
                
                ///Creates the “coloncurrencysign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "coloncurrencysign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “coloncurrencysign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "coloncurrencysign.square.fill")
                }
                
                ///Creates the “coloncurrencysign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "coloncurrencysign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct command {
        private init() {}
    }
    
    public struct control {
        private init() {}
    }
    
    public struct creditcard {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “creditcard.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "creditcard.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “creditcard.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "creditcard.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “creditcard.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "creditcard.fill", configuration: configuration)
            }
            
            ///Creates the “creditcard.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "creditcard.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “creditcard.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "creditcard.fill")
            }
            
            ///Creates the “creditcard.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "creditcard.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct crop {
        public struct rotate {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct cruzeirosign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cruzeirosign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cruzeirosign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cruzeirosign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cruzeirosign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cruzeirosign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cruzeirosign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “cruzeirosign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cruzeirosign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cruzeirosign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cruzeirosign.circle.fill")
                }
                
                ///Creates the “cruzeirosign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cruzeirosign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cruzeirosign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cruzeirosign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cruzeirosign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cruzeirosign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cruzeirosign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cruzeirosign.square.fill", configuration: configuration)
                }
                
                ///Creates the “cruzeirosign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cruzeirosign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cruzeirosign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cruzeirosign.square.fill")
                }
                
                ///Creates the “cruzeirosign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cruzeirosign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct cube {
        public struct box {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “cube.box.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cube.box.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “cube.box.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "cube.box.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “cube.box.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cube.box.fill", configuration: configuration)
                }
                
                ///Creates the “cube.box.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "cube.box.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “cube.box.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cube.box.fill")
                }
                
                ///Creates the “cube.box.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "cube.box.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “cube.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "cube.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “cube.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "cube.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “cube.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "cube.fill", configuration: configuration)
            }
            
            ///Creates the “cube.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "cube.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “cube.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "cube.fill")
            }
            
            ///Creates the “cube.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "cube.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct cursor {
        public struct rays {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct d {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “d.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "d.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “d.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "d.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “d.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "d.circle.fill", configuration: configuration)
                }
                
                ///Creates the “d.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "d.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “d.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "d.circle.fill")
                }
                
                ///Creates the “d.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "d.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “d.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "d.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “d.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "d.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “d.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "d.square.fill", configuration: configuration)
                }
                
                ///Creates the “d.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "d.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “d.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "d.square.fill")
                }
                
                ///Creates the “d.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "d.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct decrease {
        public struct indent {
            private init() {}
        }
        
        public struct quotelevel {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct delete {
        public struct left {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “delete.left.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "delete.left.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “delete.left.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "delete.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “delete.left.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "delete.left.fill", configuration: configuration)
                }
                
                ///Creates the “delete.left.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "delete.left.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “delete.left.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "delete.left.fill")
                }
                
                ///Creates the “delete.left.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "delete.left.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct right {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “delete.right.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "delete.right.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “delete.right.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "delete.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “delete.right.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "delete.right.fill", configuration: configuration)
                }
                
                ///Creates the “delete.right.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "delete.right.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “delete.right.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "delete.right.fill")
                }
                
                ///Creates the “delete.right.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "delete.right.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct desktopcomputer {
        private init() {}
    }
    
    public struct dial {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “dial.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "dial.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “dial.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "dial.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “dial.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "dial.fill", configuration: configuration)
            }
            
            ///Creates the “dial.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "dial.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “dial.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "dial.fill")
            }
            
            ///Creates the “dial.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "dial.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct divide {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “divide.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "divide.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “divide.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "divide.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “divide.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "divide.circle.fill", configuration: configuration)
                }
                
                ///Creates the “divide.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "divide.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “divide.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "divide.circle.fill")
                }
                
                ///Creates the “divide.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "divide.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “divide.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "divide.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “divide.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "divide.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “divide.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "divide.square.fill", configuration: configuration)
                }
                
                ///Creates the “divide.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "divide.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “divide.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "divide.square.fill")
                }
                
                ///Creates the “divide.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "divide.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct doc {
        public struct append {
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “doc.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "doc.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “doc.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "doc.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “doc.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "doc.circle.fill", configuration: configuration)
                }
                
                ///Creates the “doc.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "doc.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “doc.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "doc.circle.fill")
                }
                
                ///Creates the “doc.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "doc.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “doc.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "doc.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “doc.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "doc.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “doc.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "doc.fill", configuration: configuration)
            }
            
            ///Creates the “doc.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "doc.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “doc.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "doc.fill")
            }
            
            ///Creates the “doc.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "doc.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct on {
            public struct clipboard {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “doc.on.clipboard.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "doc.on.clipboard.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “doc.on.clipboard.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "doc.on.clipboard.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “doc.on.clipboard.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "doc.on.clipboard.fill", configuration: configuration)
                    }
                    
                    ///Creates the “doc.on.clipboard.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "doc.on.clipboard.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “doc.on.clipboard.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "doc.on.clipboard.fill")
                    }
                    
                    ///Creates the “doc.on.clipboard.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "doc.on.clipboard.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct doc {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “doc.on.doc.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "doc.on.doc.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “doc.on.doc.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "doc.on.doc.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “doc.on.doc.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "doc.on.doc.fill", configuration: configuration)
                    }
                    
                    ///Creates the “doc.on.doc.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "doc.on.doc.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “doc.on.doc.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "doc.on.doc.fill")
                    }
                    
                    ///Creates the “doc.on.doc.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "doc.on.doc.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct plaintext {
            private init() {}
        }
        
        public struct richtext {
            private init() {}
        }
        
        public struct text {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “doc.text.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "doc.text.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “doc.text.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "doc.text.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “doc.text.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "doc.text.fill", configuration: configuration)
                }
                
                ///Creates the “doc.text.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "doc.text.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “doc.text.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "doc.text.fill")
                }
                
                ///Creates the “doc.text.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "doc.text.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct magnifyingglass {
                private init() {}
            }
            
            public struct viewfinder {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct dollarsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “dollarsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dollarsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “dollarsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dollarsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “dollarsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dollarsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “dollarsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dollarsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “dollarsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dollarsign.circle.fill")
                }
                
                ///Creates the “dollarsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dollarsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “dollarsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dollarsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “dollarsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dollarsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “dollarsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dollarsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “dollarsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dollarsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “dollarsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dollarsign.square.fill")
                }
                
                ///Creates the “dollarsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dollarsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct dongsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “dongsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dongsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “dongsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dongsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “dongsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dongsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “dongsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dongsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “dongsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dongsign.circle.fill")
                }
                
                ///Creates the “dongsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dongsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “dongsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dongsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “dongsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dongsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “dongsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dongsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “dongsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dongsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “dongsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dongsign.square.fill")
                }
                
                ///Creates the “dongsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dongsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct dot {
        public struct radiowaves {
            public struct left {
                public struct and {
                    public struct right {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct right {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “dot.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dot.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “dot.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "dot.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “dot.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dot.square.fill", configuration: configuration)
                }
                
                ///Creates the “dot.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "dot.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “dot.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dot.square.fill")
                }
                
                ///Creates the “dot.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "dot.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct drop {
        public struct triangle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “drop.triangle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "drop.triangle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “drop.triangle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "drop.triangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “drop.triangle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "drop.triangle.fill", configuration: configuration)
                }
                
                ///Creates the “drop.triangle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "drop.triangle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “drop.triangle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "drop.triangle.fill")
                }
                
                ///Creates the “drop.triangle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "drop.triangle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct e {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “e.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "e.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “e.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "e.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “e.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "e.circle.fill", configuration: configuration)
                }
                
                ///Creates the “e.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "e.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “e.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "e.circle.fill")
                }
                
                ///Creates the “e.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "e.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “e.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "e.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “e.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "e.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “e.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "e.square.fill", configuration: configuration)
                }
                
                ///Creates the “e.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "e.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “e.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "e.square.fill")
                }
                
                ///Creates the “e.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "e.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct ear {
        private init() {}
    }
    
    public struct eject {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “eject.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "eject.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “eject.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "eject.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “eject.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "eject.fill", configuration: configuration)
            }
            
            ///Creates the “eject.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "eject.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “eject.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "eject.fill")
            }
            
            ///Creates the “eject.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "eject.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct ellipses {
        public struct bubble {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “ellipses.bubble.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "ellipses.bubble.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “ellipses.bubble.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "ellipses.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “ellipses.bubble.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "ellipses.bubble.fill", configuration: configuration)
                }
                
                ///Creates the “ellipses.bubble.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "ellipses.bubble.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “ellipses.bubble.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "ellipses.bubble.fill")
                }
                
                ///Creates the “ellipses.bubble.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "ellipses.bubble.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct ellipsis {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “ellipsis.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "ellipsis.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “ellipsis.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "ellipsis.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “ellipsis.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "ellipsis.circle.fill", configuration: configuration)
                }
                
                ///Creates the “ellipsis.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "ellipsis.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “ellipsis.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "ellipsis.circle.fill")
                }
                
                ///Creates the “ellipsis.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "ellipsis.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct envelope {
        public struct badge {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “envelope.badge.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "envelope.badge.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “envelope.badge.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "envelope.badge.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “envelope.badge.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "envelope.badge.fill", configuration: configuration)
                }
                
                ///Creates the “envelope.badge.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "envelope.badge.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “envelope.badge.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "envelope.badge.fill")
                }
                
                ///Creates the “envelope.badge.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "envelope.badge.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “envelope.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "envelope.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “envelope.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "envelope.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “envelope.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "envelope.circle.fill", configuration: configuration)
                }
                
                ///Creates the “envelope.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "envelope.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “envelope.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "envelope.circle.fill")
                }
                
                ///Creates the “envelope.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "envelope.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “envelope.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "envelope.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “envelope.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "envelope.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “envelope.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "envelope.fill", configuration: configuration)
            }
            
            ///Creates the “envelope.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "envelope.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “envelope.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "envelope.fill")
            }
            
            ///Creates the “envelope.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "envelope.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct open {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “envelope.open.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "envelope.open.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “envelope.open.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "envelope.open.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “envelope.open.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "envelope.open.fill", configuration: configuration)
                }
                
                ///Creates the “envelope.open.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "envelope.open.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “envelope.open.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "envelope.open.fill")
                }
                
                ///Creates the “envelope.open.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "envelope.open.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct equal {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “equal.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "equal.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “equal.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "equal.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “equal.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "equal.circle.fill", configuration: configuration)
                }
                
                ///Creates the “equal.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "equal.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “equal.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "equal.circle.fill")
                }
                
                ///Creates the “equal.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "equal.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “equal.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "equal.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “equal.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "equal.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “equal.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "equal.square.fill", configuration: configuration)
                }
                
                ///Creates the “equal.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "equal.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “equal.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "equal.square.fill")
                }
                
                ///Creates the “equal.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "equal.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct escape {
        private init() {}
    }
    
    public struct eurosign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “eurosign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "eurosign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “eurosign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "eurosign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “eurosign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "eurosign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “eurosign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "eurosign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “eurosign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "eurosign.circle.fill")
                }
                
                ///Creates the “eurosign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "eurosign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “eurosign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "eurosign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “eurosign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "eurosign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “eurosign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "eurosign.square.fill", configuration: configuration)
                }
                
                ///Creates the “eurosign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "eurosign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “eurosign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "eurosign.square.fill")
                }
                
                ///Creates the “eurosign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "eurosign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct exclamationmark {
        public struct bubble {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “exclamationmark.bubble.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.bubble.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “exclamationmark.bubble.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “exclamationmark.bubble.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.bubble.fill", configuration: configuration)
                }
                
                ///Creates the “exclamationmark.bubble.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.bubble.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “exclamationmark.bubble.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.bubble.fill")
                }
                
                ///Creates the “exclamationmark.bubble.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.bubble.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “exclamationmark.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “exclamationmark.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “exclamationmark.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.circle.fill", configuration: configuration)
                }
                
                ///Creates the “exclamationmark.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “exclamationmark.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.circle.fill")
                }
                
                ///Creates the “exclamationmark.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct icloud {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “exclamationmark.icloud.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.icloud.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “exclamationmark.icloud.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “exclamationmark.icloud.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.icloud.fill", configuration: configuration)
                }
                
                ///Creates the “exclamationmark.icloud.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.icloud.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “exclamationmark.icloud.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.icloud.fill")
                }
                
                ///Creates the “exclamationmark.icloud.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.icloud.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct octagon {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “exclamationmark.octagon.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.octagon.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “exclamationmark.octagon.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.octagon.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “exclamationmark.octagon.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.octagon.fill", configuration: configuration)
                }
                
                ///Creates the “exclamationmark.octagon.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.octagon.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “exclamationmark.octagon.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.octagon.fill")
                }
                
                ///Creates the “exclamationmark.octagon.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.octagon.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct shield {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “exclamationmark.shield.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.shield.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “exclamationmark.shield.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.shield.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “exclamationmark.shield.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.shield.fill", configuration: configuration)
                }
                
                ///Creates the “exclamationmark.shield.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.shield.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “exclamationmark.shield.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.shield.fill")
                }
                
                ///Creates the “exclamationmark.shield.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.shield.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “exclamationmark.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “exclamationmark.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “exclamationmark.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.square.fill", configuration: configuration)
                }
                
                ///Creates the “exclamationmark.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “exclamationmark.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.square.fill")
                }
                
                ///Creates the “exclamationmark.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct triangle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “exclamationmark.triangle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.triangle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “exclamationmark.triangle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "exclamationmark.triangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “exclamationmark.triangle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.triangle.fill", configuration: configuration)
                }
                
                ///Creates the “exclamationmark.triangle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "exclamationmark.triangle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “exclamationmark.triangle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.triangle.fill")
                }
                
                ///Creates the “exclamationmark.triangle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "exclamationmark.triangle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct eye {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “eye.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "eye.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “eye.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "eye.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “eye.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "eye.fill", configuration: configuration)
            }
            
            ///Creates the “eye.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "eye.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “eye.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "eye.fill")
            }
            
            ///Creates the “eye.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "eye.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “eye.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "eye.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “eye.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "eye.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “eye.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "eye.slash.fill", configuration: configuration)
                }
                
                ///Creates the “eye.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "eye.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “eye.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "eye.slash.fill")
                }
                
                ///Creates the “eye.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "eye.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct eyedropper {
        public struct full {
            private init() {}
        }
        
        public struct halffull {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct eyeglasses {
        private init() {}
    }
    
    public struct f {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “f.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "f.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “f.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "f.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “f.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "f.circle.fill", configuration: configuration)
                }
                
                ///Creates the “f.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "f.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “f.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "f.circle.fill")
                }
                
                ///Creates the “f.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "f.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct cursive {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “f.cursive.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "f.cursive.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “f.cursive.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "f.cursive.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “f.cursive.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "f.cursive.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “f.cursive.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "f.cursive.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “f.cursive.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "f.cursive.circle.fill")
                    }
                    
                    ///Creates the “f.cursive.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "f.cursive.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “f.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "f.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “f.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "f.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “f.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "f.square.fill", configuration: configuration)
                }
                
                ///Creates the “f.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "f.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “f.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "f.square.fill")
                }
                
                ///Creates the “f.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "f.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct faceid {
        private init() {}
    }
    
    public struct film {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “film.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "film.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “film.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "film.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “film.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "film.fill", configuration: configuration)
            }
            
            ///Creates the “film.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "film.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “film.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "film.fill")
            }
            
            ///Creates the “film.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "film.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct flag {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “flag.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "flag.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “flag.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "flag.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “flag.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "flag.circle.fill", configuration: configuration)
                }
                
                ///Creates the “flag.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "flag.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “flag.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "flag.circle.fill")
                }
                
                ///Creates the “flag.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "flag.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “flag.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flag.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “flag.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flag.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “flag.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flag.fill", configuration: configuration)
            }
            
            ///Creates the “flag.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flag.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “flag.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flag.fill")
            }
            
            ///Creates the “flag.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flag.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “flag.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "flag.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “flag.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "flag.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “flag.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "flag.slash.fill", configuration: configuration)
                }
                
                ///Creates the “flag.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "flag.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “flag.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "flag.slash.fill")
                }
                
                ///Creates the “flag.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "flag.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct flame {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “flame.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flame.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “flame.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flame.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “flame.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flame.fill", configuration: configuration)
            }
            
            ///Creates the “flame.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flame.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “flame.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flame.fill")
            }
            
            ///Creates the “flame.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flame.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct florinsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “florinsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "florinsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “florinsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "florinsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “florinsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "florinsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “florinsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "florinsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “florinsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "florinsign.circle.fill")
                }
                
                ///Creates the “florinsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "florinsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “florinsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "florinsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “florinsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "florinsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “florinsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "florinsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “florinsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "florinsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “florinsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "florinsign.square.fill")
                }
                
                ///Creates the “florinsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "florinsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct flowchart {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “flowchart.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flowchart.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “flowchart.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "flowchart.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “flowchart.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flowchart.fill", configuration: configuration)
            }
            
            ///Creates the “flowchart.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "flowchart.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “flowchart.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flowchart.fill")
            }
            
            ///Creates the “flowchart.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "flowchart.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct folder {
        public struct badge {
            public struct minus {
                private init() {}
            }
            
            public struct person {
                public struct crop {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “folder.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "folder.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “folder.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "folder.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “folder.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "folder.circle.fill", configuration: configuration)
                }
                
                ///Creates the “folder.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "folder.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “folder.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "folder.circle.fill")
                }
                
                ///Creates the “folder.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "folder.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            public struct badge {
                public struct minus {
                    private init() {}
                }
                
                public struct person {
                    public struct crop {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                public struct plus {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “folder.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "folder.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “folder.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "folder.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “folder.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "folder.fill", configuration: configuration)
            }
            
            ///Creates the “folder.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "folder.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “folder.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "folder.fill")
            }
            
            ///Creates the “folder.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "folder.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct forward {
        public struct end {
            public struct alt {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “forward.end.alt.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "forward.end.alt.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “forward.end.alt.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "forward.end.alt.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “forward.end.alt.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "forward.end.alt.fill", configuration: configuration)
                    }
                    
                    ///Creates the “forward.end.alt.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "forward.end.alt.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “forward.end.alt.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "forward.end.alt.fill")
                    }
                    
                    ///Creates the “forward.end.alt.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "forward.end.alt.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “forward.end.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "forward.end.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “forward.end.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "forward.end.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “forward.end.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "forward.end.fill", configuration: configuration)
                }
                
                ///Creates the “forward.end.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "forward.end.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “forward.end.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "forward.end.fill")
                }
                
                ///Creates the “forward.end.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "forward.end.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “forward.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "forward.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “forward.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "forward.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “forward.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "forward.fill", configuration: configuration)
            }
            
            ///Creates the “forward.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "forward.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “forward.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "forward.fill")
            }
            
            ///Creates the “forward.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "forward.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct francsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “francsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "francsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “francsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "francsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “francsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "francsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “francsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "francsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “francsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "francsign.circle.fill")
                }
                
                ///Creates the “francsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "francsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “francsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "francsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “francsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "francsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “francsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "francsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “francsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "francsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “francsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "francsign.square.fill")
                }
                
                ///Creates the “francsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "francsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct function {
        private init() {}
    }
    
    public struct fx {
        private init() {}
    }
    
    public struct g {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “g.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "g.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “g.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "g.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “g.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "g.circle.fill", configuration: configuration)
                }
                
                ///Creates the “g.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "g.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “g.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "g.circle.fill")
                }
                
                ///Creates the “g.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "g.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “g.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "g.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “g.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "g.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “g.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "g.square.fill", configuration: configuration)
                }
                
                ///Creates the “g.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "g.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “g.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "g.square.fill")
                }
                
                ///Creates the “g.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "g.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct gamecontroller {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “gamecontroller.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "gamecontroller.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “gamecontroller.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "gamecontroller.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “gamecontroller.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "gamecontroller.fill", configuration: configuration)
            }
            
            ///Creates the “gamecontroller.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "gamecontroller.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “gamecontroller.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "gamecontroller.fill")
            }
            
            ///Creates the “gamecontroller.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "gamecontroller.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct gauge {
        public struct badge {
            public struct minus {
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct gear {
        private init() {}
    }
    
    public struct gift {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “gift.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "gift.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “gift.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "gift.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “gift.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "gift.fill", configuration: configuration)
            }
            
            ///Creates the “gift.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "gift.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “gift.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "gift.fill")
            }
            
            ///Creates the “gift.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "gift.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct globe {
        private init() {}
    }
    
    public struct gobackward {
        public struct x10 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x15 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x30 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x45 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x60 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x75 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x90 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct minus {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct goforward {
        public struct x10 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x15 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x30 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x45 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x60 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x75 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x90 {
            public struct ar {
                private init() {}
            }
            
            public struct hi {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct plus {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct greaterthan {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “greaterthan.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "greaterthan.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “greaterthan.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "greaterthan.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “greaterthan.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "greaterthan.circle.fill", configuration: configuration)
                }
                
                ///Creates the “greaterthan.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "greaterthan.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “greaterthan.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "greaterthan.circle.fill")
                }
                
                ///Creates the “greaterthan.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "greaterthan.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “greaterthan.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "greaterthan.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “greaterthan.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "greaterthan.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “greaterthan.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "greaterthan.square.fill", configuration: configuration)
                }
                
                ///Creates the “greaterthan.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "greaterthan.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “greaterthan.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "greaterthan.square.fill")
                }
                
                ///Creates the “greaterthan.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "greaterthan.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct grid {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “grid.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "grid.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “grid.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "grid.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “grid.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "grid.circle.fill", configuration: configuration)
                }
                
                ///Creates the “grid.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "grid.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “grid.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "grid.circle.fill")
                }
                
                ///Creates the “grid.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "grid.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct guaranisign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “guaranisign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "guaranisign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “guaranisign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "guaranisign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “guaranisign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "guaranisign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “guaranisign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "guaranisign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “guaranisign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "guaranisign.circle.fill")
                }
                
                ///Creates the “guaranisign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "guaranisign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “guaranisign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "guaranisign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “guaranisign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "guaranisign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “guaranisign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "guaranisign.square.fill", configuration: configuration)
                }
                
                ///Creates the “guaranisign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "guaranisign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “guaranisign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "guaranisign.square.fill")
                }
                
                ///Creates the “guaranisign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "guaranisign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct guitars {
        private init() {}
    }
    
    public struct h {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “h.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "h.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “h.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "h.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “h.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "h.circle.fill", configuration: configuration)
                }
                
                ///Creates the “h.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "h.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “h.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "h.circle.fill")
                }
                
                ///Creates the “h.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "h.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “h.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "h.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “h.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "h.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “h.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "h.square.fill", configuration: configuration)
                }
                
                ///Creates the “h.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "h.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “h.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "h.square.fill")
                }
                
                ///Creates the “h.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "h.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct hammer {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “hammer.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hammer.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “hammer.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hammer.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “hammer.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hammer.fill", configuration: configuration)
            }
            
            ///Creates the “hammer.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hammer.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “hammer.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hammer.fill")
            }
            
            ///Creates the “hammer.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hammer.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct hand {
        public struct draw {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hand.draw.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.draw.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hand.draw.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.draw.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hand.draw.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.draw.fill", configuration: configuration)
                }
                
                ///Creates the “hand.draw.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.draw.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hand.draw.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.draw.fill")
                }
                
                ///Creates the “hand.draw.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.draw.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct point {
            public struct left {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “hand.point.left.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "hand.point.left.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “hand.point.left.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "hand.point.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “hand.point.left.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "hand.point.left.fill", configuration: configuration)
                    }
                    
                    ///Creates the “hand.point.left.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "hand.point.left.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “hand.point.left.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "hand.point.left.fill")
                    }
                    
                    ///Creates the “hand.point.left.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "hand.point.left.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct right {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “hand.point.right.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "hand.point.right.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “hand.point.right.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "hand.point.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “hand.point.right.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "hand.point.right.fill", configuration: configuration)
                    }
                    
                    ///Creates the “hand.point.right.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "hand.point.right.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “hand.point.right.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "hand.point.right.fill")
                    }
                    
                    ///Creates the “hand.point.right.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "hand.point.right.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct raised {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hand.raised.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.raised.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hand.raised.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.raised.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hand.raised.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.raised.fill", configuration: configuration)
                }
                
                ///Creates the “hand.raised.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.raised.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hand.raised.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.raised.fill")
                }
                
                ///Creates the “hand.raised.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.raised.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct slash {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “hand.raised.slash.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "hand.raised.slash.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “hand.raised.slash.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "hand.raised.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “hand.raised.slash.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "hand.raised.slash.fill", configuration: configuration)
                    }
                    
                    ///Creates the “hand.raised.slash.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "hand.raised.slash.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “hand.raised.slash.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "hand.raised.slash.fill")
                    }
                    
                    ///Creates the “hand.raised.slash.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "hand.raised.slash.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct thumbsdown {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hand.thumbsdown.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.thumbsdown.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hand.thumbsdown.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.thumbsdown.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hand.thumbsdown.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.thumbsdown.fill", configuration: configuration)
                }
                
                ///Creates the “hand.thumbsdown.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.thumbsdown.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hand.thumbsdown.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.thumbsdown.fill")
                }
                
                ///Creates the “hand.thumbsdown.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.thumbsdown.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct thumbsup {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hand.thumbsup.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.thumbsup.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hand.thumbsup.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hand.thumbsup.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hand.thumbsup.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.thumbsup.fill", configuration: configuration)
                }
                
                ///Creates the “hand.thumbsup.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hand.thumbsup.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hand.thumbsup.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.thumbsup.fill")
                }
                
                ///Creates the “hand.thumbsup.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hand.thumbsup.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct hare {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “hare.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hare.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “hare.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hare.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “hare.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hare.fill", configuration: configuration)
            }
            
            ///Creates the “hare.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hare.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “hare.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hare.fill")
            }
            
            ///Creates the “hare.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hare.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct headphones {
        private init() {}
    }
    
    public struct heart {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “heart.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "heart.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “heart.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "heart.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “heart.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "heart.circle.fill", configuration: configuration)
                }
                
                ///Creates the “heart.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "heart.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “heart.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "heart.circle.fill")
                }
                
                ///Creates the “heart.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "heart.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “heart.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "heart.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “heart.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "heart.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “heart.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "heart.fill", configuration: configuration)
            }
            
            ///Creates the “heart.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "heart.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “heart.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "heart.fill")
            }
            
            ///Creates the “heart.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "heart.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “heart.slash.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "heart.slash.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “heart.slash.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "heart.slash.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “heart.slash.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "heart.slash.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “heart.slash.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "heart.slash.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “heart.slash.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "heart.slash.circle.fill")
                    }
                    
                    ///Creates the “heart.slash.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "heart.slash.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “heart.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "heart.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “heart.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "heart.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “heart.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "heart.slash.fill", configuration: configuration)
                }
                
                ///Creates the “heart.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "heart.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “heart.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "heart.slash.fill")
                }
                
                ///Creates the “heart.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "heart.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct helm {
        private init() {}
    }
    
    public struct hexagon {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “hexagon.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hexagon.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “hexagon.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hexagon.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “hexagon.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hexagon.fill", configuration: configuration)
            }
            
            ///Creates the “hexagon.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hexagon.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “hexagon.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hexagon.fill")
            }
            
            ///Creates the “hexagon.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hexagon.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct hifispeaker {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “hifispeaker.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hifispeaker.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “hifispeaker.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "hifispeaker.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “hifispeaker.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hifispeaker.fill", configuration: configuration)
            }
            
            ///Creates the “hifispeaker.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "hifispeaker.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “hifispeaker.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hifispeaker.fill")
            }
            
            ///Creates the “hifispeaker.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "hifispeaker.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct hourglass {
        public struct bottomhalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hourglass.bottomhalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hourglass.bottomhalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hourglass.bottomhalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hourglass.bottomhalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hourglass.bottomhalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hourglass.bottomhalf.fill", configuration: configuration)
                }
                
                ///Creates the “hourglass.bottomhalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hourglass.bottomhalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hourglass.bottomhalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hourglass.bottomhalf.fill")
                }
                
                ///Creates the “hourglass.bottomhalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hourglass.bottomhalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct tophalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hourglass.tophalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hourglass.tophalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hourglass.tophalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hourglass.tophalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hourglass.tophalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hourglass.tophalf.fill", configuration: configuration)
                }
                
                ///Creates the “hourglass.tophalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hourglass.tophalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hourglass.tophalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hourglass.tophalf.fill")
                }
                
                ///Creates the “hourglass.tophalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hourglass.tophalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct house {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “house.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "house.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “house.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "house.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “house.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "house.fill", configuration: configuration)
            }
            
            ///Creates the “house.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "house.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “house.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "house.fill")
            }
            
            ///Creates the “house.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "house.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct hryvniasign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hryvniasign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hryvniasign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hryvniasign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hryvniasign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hryvniasign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hryvniasign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “hryvniasign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hryvniasign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hryvniasign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hryvniasign.circle.fill")
                }
                
                ///Creates the “hryvniasign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hryvniasign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “hryvniasign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hryvniasign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “hryvniasign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "hryvniasign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “hryvniasign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hryvniasign.square.fill", configuration: configuration)
                }
                
                ///Creates the “hryvniasign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "hryvniasign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “hryvniasign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hryvniasign.square.fill")
                }
                
                ///Creates the “hryvniasign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "hryvniasign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct hurricane {
        private init() {}
    }
    
    public struct i {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “i.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "i.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “i.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "i.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “i.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "i.circle.fill", configuration: configuration)
                }
                
                ///Creates the “i.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "i.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “i.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "i.circle.fill")
                }
                
                ///Creates the “i.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "i.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “i.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "i.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “i.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "i.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “i.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "i.square.fill", configuration: configuration)
                }
                
                ///Creates the “i.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "i.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “i.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "i.square.fill")
                }
                
                ///Creates the “i.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "i.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct icloud {
        public struct and {
            public struct arrow {
                public struct down {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “icloud.and.arrow.down.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "icloud.and.arrow.down.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “icloud.and.arrow.down.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "icloud.and.arrow.down.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “icloud.and.arrow.down.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "icloud.and.arrow.down.fill", configuration: configuration)
                        }
                        
                        ///Creates the “icloud.and.arrow.down.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "icloud.and.arrow.down.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “icloud.and.arrow.down.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "icloud.and.arrow.down.fill")
                        }
                        
                        ///Creates the “icloud.and.arrow.down.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "icloud.and.arrow.down.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct up {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “icloud.and.arrow.up.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "icloud.and.arrow.up.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “icloud.and.arrow.up.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "icloud.and.arrow.up.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “icloud.and.arrow.up.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "icloud.and.arrow.up.fill", configuration: configuration)
                        }
                        
                        ///Creates the “icloud.and.arrow.up.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "icloud.and.arrow.up.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “icloud.and.arrow.up.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "icloud.and.arrow.up.fill")
                        }
                        
                        ///Creates the “icloud.and.arrow.up.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "icloud.and.arrow.up.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “icloud.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "icloud.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “icloud.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "icloud.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “icloud.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "icloud.circle.fill", configuration: configuration)
                }
                
                ///Creates the “icloud.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "icloud.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “icloud.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "icloud.circle.fill")
                }
                
                ///Creates the “icloud.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "icloud.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “icloud.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "icloud.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “icloud.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “icloud.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "icloud.fill", configuration: configuration)
            }
            
            ///Creates the “icloud.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "icloud.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “icloud.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "icloud.fill")
            }
            
            ///Creates the “icloud.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "icloud.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “icloud.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "icloud.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “icloud.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "icloud.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “icloud.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "icloud.slash.fill", configuration: configuration)
                }
                
                ///Creates the “icloud.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "icloud.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “icloud.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "icloud.slash.fill")
                }
                
                ///Creates the “icloud.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "icloud.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct increase {
        public struct indent {
            private init() {}
        }
        
        public struct quotelevel {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct indianrupeesign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “indianrupeesign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "indianrupeesign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “indianrupeesign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "indianrupeesign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “indianrupeesign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "indianrupeesign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “indianrupeesign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "indianrupeesign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “indianrupeesign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "indianrupeesign.circle.fill")
                }
                
                ///Creates the “indianrupeesign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "indianrupeesign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “indianrupeesign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "indianrupeesign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “indianrupeesign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "indianrupeesign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “indianrupeesign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "indianrupeesign.square.fill", configuration: configuration)
                }
                
                ///Creates the “indianrupeesign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "indianrupeesign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “indianrupeesign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "indianrupeesign.square.fill")
                }
                
                ///Creates the “indianrupeesign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "indianrupeesign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct info {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “info.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "info.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “info.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "info.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “info.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "info.circle.fill", configuration: configuration)
                }
                
                ///Creates the “info.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "info.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “info.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "info.circle.fill")
                }
                
                ///Creates the “info.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "info.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct italic {
        private init() {}
    }
    
    public struct j {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “j.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "j.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “j.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "j.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “j.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "j.circle.fill", configuration: configuration)
                }
                
                ///Creates the “j.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "j.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “j.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "j.circle.fill")
                }
                
                ///Creates the “j.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "j.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “j.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "j.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “j.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "j.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “j.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "j.square.fill", configuration: configuration)
                }
                
                ///Creates the “j.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "j.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “j.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "j.square.fill")
                }
                
                ///Creates the “j.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "j.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct k {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “k.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "k.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “k.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "k.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “k.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "k.circle.fill", configuration: configuration)
                }
                
                ///Creates the “k.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "k.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “k.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "k.circle.fill")
                }
                
                ///Creates the “k.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "k.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “k.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "k.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “k.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "k.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “k.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "k.square.fill", configuration: configuration)
                }
                
                ///Creates the “k.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "k.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “k.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "k.square.fill")
                }
                
                ///Creates the “k.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "k.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct keyboard {
        public struct chevron {
            public struct compact {
                public struct down {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct kipsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “kipsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "kipsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “kipsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "kipsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “kipsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "kipsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “kipsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "kipsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “kipsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "kipsign.circle.fill")
                }
                
                ///Creates the “kipsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "kipsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “kipsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "kipsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “kipsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "kipsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “kipsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "kipsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “kipsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "kipsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “kipsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "kipsign.square.fill")
                }
                
                ///Creates the “kipsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "kipsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct l {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “l.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "l.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “l.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "l.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “l.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "l.circle.fill", configuration: configuration)
                }
                
                ///Creates the “l.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "l.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “l.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "l.circle.fill")
                }
                
                ///Creates the “l.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "l.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “l.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "l.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “l.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "l.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “l.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "l.square.fill", configuration: configuration)
                }
                
                ///Creates the “l.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "l.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “l.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "l.square.fill")
                }
                
                ///Creates the “l.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "l.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct largecircle {
        public struct fill {
            public struct circle {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct larisign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “larisign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "larisign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “larisign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "larisign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “larisign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "larisign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “larisign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "larisign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “larisign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "larisign.circle.fill")
                }
                
                ///Creates the “larisign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "larisign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “larisign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "larisign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “larisign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "larisign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “larisign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "larisign.square.fill", configuration: configuration)
                }
                
                ///Creates the “larisign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "larisign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “larisign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "larisign.square.fill")
                }
                
                ///Creates the “larisign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "larisign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct lasso {
        private init() {}
    }
    
    public struct leaf {
        public struct arrow {
            public struct circlepath {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct lessthan {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lessthan.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lessthan.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lessthan.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lessthan.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lessthan.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lessthan.circle.fill", configuration: configuration)
                }
                
                ///Creates the “lessthan.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lessthan.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lessthan.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lessthan.circle.fill")
                }
                
                ///Creates the “lessthan.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lessthan.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lessthan.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lessthan.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lessthan.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lessthan.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lessthan.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lessthan.square.fill", configuration: configuration)
                }
                
                ///Creates the “lessthan.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lessthan.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lessthan.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lessthan.square.fill")
                }
                
                ///Creates the “lessthan.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lessthan.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct light {
        public struct max {
            private init() {}
        }
        
        public struct min {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct lightbulb {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “lightbulb.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lightbulb.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “lightbulb.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lightbulb.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “lightbulb.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lightbulb.fill", configuration: configuration)
            }
            
            ///Creates the “lightbulb.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lightbulb.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “lightbulb.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lightbulb.fill")
            }
            
            ///Creates the “lightbulb.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lightbulb.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lightbulb.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lightbulb.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lightbulb.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lightbulb.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lightbulb.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lightbulb.slash.fill", configuration: configuration)
                }
                
                ///Creates the “lightbulb.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lightbulb.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lightbulb.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lightbulb.slash.fill")
                }
                
                ///Creates the “lightbulb.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lightbulb.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct line {
        public struct horizontal {
            public struct x3 {
                public struct decrease {
                    public struct circle {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “line.horizontal.3.decrease.circle.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "line.horizontal.3.decrease.circle.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “line.horizontal.3.decrease.circle.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "line.horizontal.3.decrease.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “line.horizontal.3.decrease.circle.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "line.horizontal.3.decrease.circle.fill", configuration: configuration)
                            }
                            
                            ///Creates the “line.horizontal.3.decrease.circle.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "line.horizontal.3.decrease.circle.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “line.horizontal.3.decrease.circle.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "line.horizontal.3.decrease.circle.fill")
                            }
                            
                            ///Creates the “line.horizontal.3.decrease.circle.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "line.horizontal.3.decrease.circle.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct link {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “link.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "link.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “link.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "link.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “link.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "link.circle.fill", configuration: configuration)
                }
                
                ///Creates the “link.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "link.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “link.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "link.circle.fill")
                }
                
                ///Creates the “link.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "link.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct icloud {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “link.icloud.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "link.icloud.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “link.icloud.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "link.icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “link.icloud.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "link.icloud.fill", configuration: configuration)
                }
                
                ///Creates the “link.icloud.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "link.icloud.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “link.icloud.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "link.icloud.fill")
                }
                
                ///Creates the “link.icloud.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "link.icloud.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct lirasign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lirasign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lirasign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lirasign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lirasign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lirasign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lirasign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “lirasign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lirasign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lirasign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lirasign.circle.fill")
                }
                
                ///Creates the “lirasign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lirasign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lirasign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lirasign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lirasign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lirasign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lirasign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lirasign.square.fill", configuration: configuration)
                }
                
                ///Creates the “lirasign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lirasign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lirasign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lirasign.square.fill")
                }
                
                ///Creates the “lirasign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lirasign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct list {
        public struct bullet {
            public struct below {
                public struct rectangle {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct indent {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct dash {
            private init() {}
        }
        
        public struct number {
            public struct rtl {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct livephoto {
        public struct play {
            private init() {}
        }
        
        public struct slash {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct location {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “location.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "location.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “location.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "location.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “location.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "location.circle.fill", configuration: configuration)
                }
                
                ///Creates the “location.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "location.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “location.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "location.circle.fill")
                }
                
                ///Creates the “location.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "location.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “location.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "location.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “location.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "location.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “location.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "location.fill", configuration: configuration)
            }
            
            ///Creates the “location.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "location.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “location.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "location.fill")
            }
            
            ///Creates the “location.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "location.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct north {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “location.north.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "location.north.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “location.north.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "location.north.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “location.north.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "location.north.fill", configuration: configuration)
                }
                
                ///Creates the “location.north.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "location.north.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “location.north.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "location.north.fill")
                }
                
                ///Creates the “location.north.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "location.north.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct line {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “location.north.line.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "location.north.line.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “location.north.line.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "location.north.line.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “location.north.line.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "location.north.line.fill", configuration: configuration)
                    }
                    
                    ///Creates the “location.north.line.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "location.north.line.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “location.north.line.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "location.north.line.fill")
                    }
                    
                    ///Creates the “location.north.line.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "location.north.line.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “location.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "location.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “location.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "location.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “location.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "location.slash.fill", configuration: configuration)
                }
                
                ///Creates the “location.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "location.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “location.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "location.slash.fill")
                }
                
                ///Creates the “location.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "location.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct lock {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lock.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lock.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lock.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.circle.fill", configuration: configuration)
                }
                
                ///Creates the “lock.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lock.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.circle.fill")
                }
                
                ///Creates the “lock.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “lock.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lock.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “lock.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "lock.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “lock.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lock.fill", configuration: configuration)
            }
            
            ///Creates the “lock.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "lock.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “lock.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lock.fill")
            }
            
            ///Creates the “lock.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "lock.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct icloud {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lock.icloud.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.icloud.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lock.icloud.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lock.icloud.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.icloud.fill", configuration: configuration)
                }
                
                ///Creates the “lock.icloud.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.icloud.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lock.icloud.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.icloud.fill")
                }
                
                ///Creates the “lock.icloud.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.icloud.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct open {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lock.open.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.open.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lock.open.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.open.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lock.open.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.open.fill", configuration: configuration)
                }
                
                ///Creates the “lock.open.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.open.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lock.open.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.open.fill")
                }
                
                ///Creates the “lock.open.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.open.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct rotation {
            public struct open {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct shield {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lock.shield.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.shield.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lock.shield.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.shield.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lock.shield.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.shield.fill", configuration: configuration)
                }
                
                ///Creates the “lock.shield.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.shield.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lock.shield.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.shield.fill")
                }
                
                ///Creates the “lock.shield.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.shield.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “lock.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “lock.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "lock.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “lock.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.slash.fill", configuration: configuration)
                }
                
                ///Creates the “lock.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "lock.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “lock.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.slash.fill")
                }
                
                ///Creates the “lock.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "lock.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct m {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “m.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "m.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “m.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "m.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “m.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "m.circle.fill", configuration: configuration)
                }
                
                ///Creates the “m.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "m.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “m.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "m.circle.fill")
                }
                
                ///Creates the “m.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "m.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “m.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "m.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “m.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "m.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “m.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "m.square.fill", configuration: configuration)
                }
                
                ///Creates the “m.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "m.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “m.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "m.square.fill")
                }
                
                ///Creates the “m.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "m.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct macwindow {
        private init() {}
    }
    
    public struct magnifyingglass {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “magnifyingglass.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "magnifyingglass.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “magnifyingglass.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "magnifyingglass.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “magnifyingglass.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "magnifyingglass.circle.fill", configuration: configuration)
                }
                
                ///Creates the “magnifyingglass.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "magnifyingglass.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “magnifyingglass.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "magnifyingglass.circle.fill")
                }
                
                ///Creates the “magnifyingglass.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "magnifyingglass.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct manatsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “manatsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "manatsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “manatsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "manatsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “manatsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "manatsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “manatsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "manatsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “manatsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "manatsign.circle.fill")
                }
                
                ///Creates the “manatsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "manatsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “manatsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "manatsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “manatsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "manatsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “manatsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "manatsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “manatsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "manatsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “manatsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "manatsign.square.fill")
                }
                
                ///Creates the “manatsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "manatsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct map {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “map.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "map.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “map.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "map.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “map.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "map.fill", configuration: configuration)
            }
            
            ///Creates the “map.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "map.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “map.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "map.fill")
            }
            
            ///Creates the “map.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "map.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct mappin {
        public struct and {
            public struct ellipse {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct slash {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct memories {
        public struct badge {
            public struct minus {
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct message {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “message.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "message.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “message.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "message.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “message.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "message.circle.fill", configuration: configuration)
                }
                
                ///Creates the “message.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "message.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “message.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "message.circle.fill")
                }
                
                ///Creates the “message.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "message.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “message.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "message.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “message.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "message.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “message.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "message.fill", configuration: configuration)
            }
            
            ///Creates the “message.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "message.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “message.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "message.fill")
            }
            
            ///Creates the “message.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "message.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct metronome {
        private init() {}
    }
    
    public struct mic {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “mic.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "mic.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “mic.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "mic.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “mic.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "mic.circle.fill", configuration: configuration)
                }
                
                ///Creates the “mic.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "mic.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “mic.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "mic.circle.fill")
                }
                
                ///Creates the “mic.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "mic.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “mic.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "mic.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “mic.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "mic.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “mic.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "mic.fill", configuration: configuration)
            }
            
            ///Creates the “mic.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "mic.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “mic.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "mic.fill")
            }
            
            ///Creates the “mic.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "mic.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “mic.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "mic.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “mic.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "mic.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “mic.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "mic.slash.fill", configuration: configuration)
                }
                
                ///Creates the “mic.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "mic.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “mic.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "mic.slash.fill")
                }
                
                ///Creates the “mic.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "mic.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct millsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “millsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "millsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “millsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "millsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “millsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "millsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “millsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "millsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “millsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "millsign.circle.fill")
                }
                
                ///Creates the “millsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "millsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “millsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "millsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “millsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "millsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “millsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "millsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “millsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "millsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “millsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "millsign.square.fill")
                }
                
                ///Creates the “millsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "millsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct minus {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “minus.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "minus.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “minus.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "minus.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “minus.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "minus.circle.fill", configuration: configuration)
                }
                
                ///Creates the “minus.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "minus.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “minus.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "minus.circle.fill")
                }
                
                ///Creates the “minus.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "minus.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct magnifyingglass {
            private init() {}
        }
        
        public struct rectangle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “minus.rectangle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "minus.rectangle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “minus.rectangle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "minus.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “minus.rectangle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "minus.rectangle.fill", configuration: configuration)
                }
                
                ///Creates the “minus.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "minus.rectangle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “minus.rectangle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "minus.rectangle.fill")
                }
                
                ///Creates the “minus.rectangle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "minus.rectangle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct slash {
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “minus.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "minus.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “minus.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "minus.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “minus.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "minus.square.fill", configuration: configuration)
                }
                
                ///Creates the “minus.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "minus.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “minus.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "minus.square.fill")
                }
                
                ///Creates the “minus.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "minus.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct moon {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “moon.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "moon.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “moon.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "moon.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “moon.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "moon.circle.fill", configuration: configuration)
                }
                
                ///Creates the “moon.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "moon.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “moon.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "moon.circle.fill")
                }
                
                ///Creates the “moon.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "moon.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “moon.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "moon.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “moon.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "moon.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “moon.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "moon.fill", configuration: configuration)
            }
            
            ///Creates the “moon.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "moon.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “moon.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "moon.fill")
            }
            
            ///Creates the “moon.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "moon.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct stars {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “moon.stars.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "moon.stars.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “moon.stars.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "moon.stars.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “moon.stars.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "moon.stars.fill", configuration: configuration)
                }
                
                ///Creates the “moon.stars.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "moon.stars.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “moon.stars.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "moon.stars.fill")
                }
                
                ///Creates the “moon.stars.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "moon.stars.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct zzz {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “moon.zzz.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "moon.zzz.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “moon.zzz.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "moon.zzz.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “moon.zzz.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "moon.zzz.fill", configuration: configuration)
                }
                
                ///Creates the “moon.zzz.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "moon.zzz.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “moon.zzz.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "moon.zzz.fill")
                }
                
                ///Creates the “moon.zzz.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "moon.zzz.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct multiply {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “multiply.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "multiply.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “multiply.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "multiply.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “multiply.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "multiply.circle.fill", configuration: configuration)
                }
                
                ///Creates the “multiply.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "multiply.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “multiply.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "multiply.circle.fill")
                }
                
                ///Creates the “multiply.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "multiply.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “multiply.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "multiply.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “multiply.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "multiply.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “multiply.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "multiply.square.fill", configuration: configuration)
                }
                
                ///Creates the “multiply.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "multiply.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “multiply.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "multiply.square.fill")
                }
                
                ///Creates the “multiply.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "multiply.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct music {
        public struct house {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “music.house.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "music.house.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “music.house.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "music.house.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “music.house.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "music.house.fill", configuration: configuration)
                }
                
                ///Creates the “music.house.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "music.house.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “music.house.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "music.house.fill")
                }
                
                ///Creates the “music.house.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "music.house.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct mic {
            private init() {}
        }
        
        public struct note {
            public struct list {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct n {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “n.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "n.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “n.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "n.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “n.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "n.circle.fill", configuration: configuration)
                }
                
                ///Creates the “n.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "n.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “n.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "n.circle.fill")
                }
                
                ///Creates the “n.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "n.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “n.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "n.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “n.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "n.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “n.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "n.square.fill", configuration: configuration)
                }
                
                ///Creates the “n.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "n.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “n.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "n.square.fill")
                }
                
                ///Creates the “n.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "n.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct nairasign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “nairasign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "nairasign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “nairasign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "nairasign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “nairasign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "nairasign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “nairasign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "nairasign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “nairasign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "nairasign.circle.fill")
                }
                
                ///Creates the “nairasign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "nairasign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “nairasign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "nairasign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “nairasign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "nairasign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “nairasign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "nairasign.square.fill", configuration: configuration)
                }
                
                ///Creates the “nairasign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "nairasign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “nairasign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "nairasign.square.fill")
                }
                
                ///Creates the “nairasign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "nairasign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct nosign {
        private init() {}
    }
    
    public struct number {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “number.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "number.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “number.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "number.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “number.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "number.circle.fill", configuration: configuration)
                }
                
                ///Creates the “number.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "number.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “number.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "number.circle.fill")
                }
                
                ///Creates the “number.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "number.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “number.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "number.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “number.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "number.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “number.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "number.square.fill", configuration: configuration)
                }
                
                ///Creates the “number.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "number.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “number.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "number.square.fill")
                }
                
                ///Creates the “number.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "number.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct o {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “o.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "o.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “o.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "o.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “o.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "o.circle.fill", configuration: configuration)
                }
                
                ///Creates the “o.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "o.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “o.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "o.circle.fill")
                }
                
                ///Creates the “o.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "o.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “o.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "o.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “o.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "o.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “o.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "o.square.fill", configuration: configuration)
                }
                
                ///Creates the “o.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "o.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “o.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "o.square.fill")
                }
                
                ///Creates the “o.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "o.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct option {
        private init() {}
    }
    
    public struct p {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “p.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "p.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “p.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "p.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “p.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "p.circle.fill", configuration: configuration)
                }
                
                ///Creates the “p.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "p.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “p.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "p.circle.fill")
                }
                
                ///Creates the “p.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "p.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “p.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "p.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “p.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "p.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “p.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "p.square.fill", configuration: configuration)
                }
                
                ///Creates the “p.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "p.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “p.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "p.square.fill")
                }
                
                ///Creates the “p.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "p.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct paintbrush {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “paintbrush.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "paintbrush.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “paintbrush.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "paintbrush.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “paintbrush.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "paintbrush.fill", configuration: configuration)
            }
            
            ///Creates the “paintbrush.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "paintbrush.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “paintbrush.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "paintbrush.fill")
            }
            
            ///Creates the “paintbrush.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "paintbrush.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct pano {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “pano.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "pano.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “pano.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "pano.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “pano.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "pano.fill", configuration: configuration)
            }
            
            ///Creates the “pano.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "pano.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “pano.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "pano.fill")
            }
            
            ///Creates the “pano.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "pano.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct paperclip {
        private init() {}
    }
    
    public struct paperplane {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “paperplane.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "paperplane.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “paperplane.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "paperplane.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “paperplane.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "paperplane.fill", configuration: configuration)
            }
            
            ///Creates the “paperplane.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "paperplane.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “paperplane.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "paperplane.fill")
            }
            
            ///Creates the “paperplane.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "paperplane.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct paragraph {
        private init() {}
    }
    
    public struct pause {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “pause.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pause.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “pause.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pause.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “pause.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pause.circle.fill", configuration: configuration)
                }
                
                ///Creates the “pause.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pause.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “pause.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pause.circle.fill")
                }
                
                ///Creates the “pause.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pause.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “pause.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "pause.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “pause.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "pause.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “pause.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "pause.fill", configuration: configuration)
            }
            
            ///Creates the “pause.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "pause.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “pause.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "pause.fill")
            }
            
            ///Creates the “pause.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "pause.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct rectangle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “pause.rectangle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pause.rectangle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “pause.rectangle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pause.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “pause.rectangle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pause.rectangle.fill", configuration: configuration)
                }
                
                ///Creates the “pause.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pause.rectangle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “pause.rectangle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pause.rectangle.fill")
                }
                
                ///Creates the “pause.rectangle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pause.rectangle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct pencil {
        public struct and {
            public struct ellipsis {
                public struct rectangle {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct outline {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “pencil.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pencil.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “pencil.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pencil.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “pencil.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pencil.circle.fill", configuration: configuration)
                }
                
                ///Creates the “pencil.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pencil.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “pencil.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pencil.circle.fill")
                }
                
                ///Creates the “pencil.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pencil.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct slash {
            private init() {}
        }
        
        public struct tip {
            public struct crop {
                public struct circle {
                    public struct badge {
                        public struct minus {
                            private init() {}
                        }
                        
                        public struct plus {
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct percent {
        private init() {}
    }
    
    public struct person {
        public struct x2 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “person.2.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.2.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “person.2.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “person.2.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.2.fill", configuration: configuration)
                }
                
                ///Creates the “person.2.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.2.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “person.2.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.2.fill")
                }
                
                ///Creates the “person.2.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.2.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct square {
                public struct stack {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “person.2.square.stack.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "person.2.square.stack.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “person.2.square.stack.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "person.2.square.stack.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “person.2.square.stack.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "person.2.square.stack.fill", configuration: configuration)
                        }
                        
                        ///Creates the “person.2.square.stack.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "person.2.square.stack.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “person.2.square.stack.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "person.2.square.stack.fill")
                        }
                        
                        ///Creates the “person.2.square.stack.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "person.2.square.stack.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct x3 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “person.3.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.3.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “person.3.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.3.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “person.3.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.3.fill", configuration: configuration)
                }
                
                ///Creates the “person.3.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.3.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “person.3.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.3.fill")
                }
                
                ///Creates the “person.3.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.3.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct badge {
            public struct minus {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “person.badge.minus.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.badge.minus.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “person.badge.minus.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.badge.minus.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “person.badge.minus.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.badge.minus.fill", configuration: configuration)
                    }
                    
                    ///Creates the “person.badge.minus.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.badge.minus.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “person.badge.minus.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.badge.minus.fill")
                    }
                    
                    ///Creates the “person.badge.minus.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.badge.minus.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct plus {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “person.badge.plus.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.badge.plus.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “person.badge.plus.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.badge.plus.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “person.badge.plus.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.badge.plus.fill", configuration: configuration)
                    }
                    
                    ///Creates the “person.badge.plus.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.badge.plus.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “person.badge.plus.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.badge.plus.fill")
                    }
                    
                    ///Creates the “person.badge.plus.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.badge.plus.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “person.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “person.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “person.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.circle.fill", configuration: configuration)
                }
                
                ///Creates the “person.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “person.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.circle.fill")
                }
                
                ///Creates the “person.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct crop {
            public struct circle {
                public struct badge {
                    public struct checkmark {
                        private init() {}
                    }
                    
                    public struct exclam {
                        private init() {}
                    }
                    
                    public struct minus {
                        private init() {}
                    }
                    
                    public struct plus {
                        private init() {}
                    }
                    
                    public struct xmark {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                public struct fill {
                    public struct badge {
                        public struct checkmark {
                            private init() {}
                        }
                        
                        public struct exclam {
                            private init() {}
                        }
                        
                        public struct minus {
                            private init() {}
                        }
                        
                        public struct plus {
                            private init() {}
                        }
                        
                        public struct xmark {
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “person.crop.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.crop.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “person.crop.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.crop.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “person.crop.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.crop.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “person.crop.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.crop.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “person.crop.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.crop.circle.fill")
                    }
                    
                    ///Creates the “person.crop.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.crop.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct rectangle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “person.crop.rectangle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.crop.rectangle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “person.crop.rectangle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.crop.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “person.crop.rectangle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.crop.rectangle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “person.crop.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.crop.rectangle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “person.crop.rectangle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.crop.rectangle.fill")
                    }
                    
                    ///Creates the “person.crop.rectangle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.crop.rectangle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct square {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “person.crop.square.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.crop.square.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “person.crop.square.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "person.crop.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “person.crop.square.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.crop.square.fill", configuration: configuration)
                    }
                    
                    ///Creates the “person.crop.square.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "person.crop.square.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “person.crop.square.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.crop.square.fill")
                    }
                    
                    ///Creates the “person.crop.square.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "person.crop.square.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “person.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "person.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “person.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "person.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “person.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "person.fill", configuration: configuration)
            }
            
            ///Creates the “person.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "person.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “person.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "person.fill")
            }
            
            ///Creates the “person.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "person.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct icloud {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “person.icloud.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.icloud.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “person.icloud.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "person.icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “person.icloud.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.icloud.fill", configuration: configuration)
                }
                
                ///Creates the “person.icloud.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "person.icloud.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “person.icloud.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.icloud.fill")
                }
                
                ///Creates the “person.icloud.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "person.icloud.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct personalhotspot {
        private init() {}
    }
    
    public struct perspective {
        private init() {}
    }
    
    public struct pesetasign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “pesetasign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pesetasign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “pesetasign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pesetasign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “pesetasign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pesetasign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “pesetasign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pesetasign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “pesetasign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pesetasign.circle.fill")
                }
                
                ///Creates the “pesetasign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pesetasign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “pesetasign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pesetasign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “pesetasign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pesetasign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “pesetasign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pesetasign.square.fill", configuration: configuration)
                }
                
                ///Creates the “pesetasign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pesetasign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “pesetasign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pesetasign.square.fill")
                }
                
                ///Creates the “pesetasign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pesetasign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct pesosign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “pesosign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pesosign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “pesosign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pesosign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “pesosign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pesosign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “pesosign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pesosign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “pesosign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pesosign.circle.fill")
                }
                
                ///Creates the “pesosign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pesosign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “pesosign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pesosign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “pesosign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pesosign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “pesosign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pesosign.square.fill", configuration: configuration)
                }
                
                ///Creates the “pesosign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pesosign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “pesosign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pesosign.square.fill")
                }
                
                ///Creates the “pesosign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pesosign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct phone {
        public struct arrow {
            public struct down {
                public struct left {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct right {
                private init() {}
            }
            
            public struct up {
                public struct right {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct badge {
            public struct plus {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “phone.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "phone.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “phone.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "phone.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “phone.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "phone.circle.fill", configuration: configuration)
                }
                
                ///Creates the “phone.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "phone.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “phone.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "phone.circle.fill")
                }
                
                ///Creates the “phone.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "phone.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct down {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “phone.down.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "phone.down.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “phone.down.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "phone.down.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “phone.down.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "phone.down.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “phone.down.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "phone.down.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “phone.down.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "phone.down.circle.fill")
                    }
                    
                    ///Creates the “phone.down.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "phone.down.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “phone.down.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "phone.down.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “phone.down.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "phone.down.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “phone.down.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "phone.down.fill", configuration: configuration)
                }
                
                ///Creates the “phone.down.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "phone.down.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “phone.down.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "phone.down.fill")
                }
                
                ///Creates the “phone.down.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "phone.down.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            public struct arrow {
                public struct down {
                    public struct left {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                public struct right {
                    private init() {}
                }
                
                public struct up {
                    public struct right {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct badge {
                public struct plus {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “phone.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "phone.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “phone.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "phone.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “phone.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "phone.fill", configuration: configuration)
            }
            
            ///Creates the “phone.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "phone.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “phone.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "phone.fill")
            }
            
            ///Creates the “phone.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "phone.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct photo {
        public struct fill {
            public struct on {
                public struct rectangle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “photo.fill.on.rectangle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "photo.fill.on.rectangle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “photo.fill.on.rectangle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "photo.fill.on.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “photo.fill.on.rectangle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "photo.fill.on.rectangle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “photo.fill.on.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "photo.fill.on.rectangle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “photo.fill.on.rectangle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "photo.fill.on.rectangle.fill")
                        }
                        
                        ///Creates the “photo.fill.on.rectangle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "photo.fill.on.rectangle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “photo.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "photo.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “photo.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "photo.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “photo.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "photo.fill", configuration: configuration)
            }
            
            ///Creates the “photo.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "photo.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “photo.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "photo.fill")
            }
            
            ///Creates the “photo.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "photo.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct on {
            public struct rectangle {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct pin {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “pin.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "pin.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “pin.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "pin.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “pin.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "pin.fill", configuration: configuration)
            }
            
            ///Creates the “pin.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "pin.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “pin.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "pin.fill")
            }
            
            ///Creates the “pin.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "pin.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “pin.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pin.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “pin.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "pin.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “pin.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pin.slash.fill", configuration: configuration)
                }
                
                ///Creates the “pin.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "pin.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “pin.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pin.slash.fill")
                }
                
                ///Creates the “pin.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "pin.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct play {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “play.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "play.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “play.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "play.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “play.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "play.circle.fill", configuration: configuration)
                }
                
                ///Creates the “play.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "play.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “play.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "play.circle.fill")
                }
                
                ///Creates the “play.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "play.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “play.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "play.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “play.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "play.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “play.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "play.fill", configuration: configuration)
            }
            
            ///Creates the “play.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "play.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “play.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "play.fill")
            }
            
            ///Creates the “play.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "play.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct rectangle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “play.rectangle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "play.rectangle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “play.rectangle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "play.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “play.rectangle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "play.rectangle.fill", configuration: configuration)
                }
                
                ///Creates the “play.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "play.rectangle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “play.rectangle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "play.rectangle.fill")
                }
                
                ///Creates the “play.rectangle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "play.rectangle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct playpause {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “playpause.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "playpause.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “playpause.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "playpause.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “playpause.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "playpause.fill", configuration: configuration)
            }
            
            ///Creates the “playpause.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "playpause.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “playpause.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "playpause.fill")
            }
            
            ///Creates the “playpause.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "playpause.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct plus {
        public struct app {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “plus.app.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.app.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “plus.app.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.app.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “plus.app.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.app.fill", configuration: configuration)
                }
                
                ///Creates the “plus.app.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.app.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “plus.app.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.app.fill")
                }
                
                ///Creates the “plus.app.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.app.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct bubble {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “plus.bubble.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.bubble.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “plus.bubble.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “plus.bubble.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.bubble.fill", configuration: configuration)
                }
                
                ///Creates the “plus.bubble.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.bubble.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “plus.bubble.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.bubble.fill")
                }
                
                ///Creates the “plus.bubble.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.bubble.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “plus.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “plus.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “plus.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.circle.fill", configuration: configuration)
                }
                
                ///Creates the “plus.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “plus.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.circle.fill")
                }
                
                ///Creates the “plus.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct magnifyingglass {
            private init() {}
        }
        
        public struct rectangle {
            public struct fill {
                public struct on {
                    public struct rectangle {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “plus.rectangle.fill.on.rectangle.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "plus.rectangle.fill.on.rectangle.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “plus.rectangle.fill.on.rectangle.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "plus.rectangle.fill.on.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “plus.rectangle.fill.on.rectangle.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "plus.rectangle.fill.on.rectangle.fill", configuration: configuration)
                            }
                            
                            ///Creates the “plus.rectangle.fill.on.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "plus.rectangle.fill.on.rectangle.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “plus.rectangle.fill.on.rectangle.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "plus.rectangle.fill.on.rectangle.fill")
                            }
                            
                            ///Creates the “plus.rectangle.fill.on.rectangle.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "plus.rectangle.fill.on.rectangle.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “plus.rectangle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.rectangle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “plus.rectangle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “plus.rectangle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.rectangle.fill", configuration: configuration)
                }
                
                ///Creates the “plus.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.rectangle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “plus.rectangle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.rectangle.fill")
                }
                
                ///Creates the “plus.rectangle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.rectangle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct on {
                public struct rectangle {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct slash {
            public struct minus {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                public struct on {
                    public struct square {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “plus.square.fill.on.square.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "plus.square.fill.on.square.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “plus.square.fill.on.square.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "plus.square.fill.on.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “plus.square.fill.on.square.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "plus.square.fill.on.square.fill", configuration: configuration)
                            }
                            
                            ///Creates the “plus.square.fill.on.square.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "plus.square.fill.on.square.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “plus.square.fill.on.square.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "plus.square.fill.on.square.fill")
                            }
                            
                            ///Creates the “plus.square.fill.on.square.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "plus.square.fill.on.square.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “plus.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “plus.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plus.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “plus.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.square.fill", configuration: configuration)
                }
                
                ///Creates the “plus.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plus.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “plus.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.square.fill")
                }
                
                ///Creates the “plus.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plus.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct on {
                public struct square {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct plusminus {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “plusminus.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plusminus.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “plusminus.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "plusminus.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “plusminus.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plusminus.circle.fill", configuration: configuration)
                }
                
                ///Creates the “plusminus.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "plusminus.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “plusminus.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plusminus.circle.fill")
                }
                
                ///Creates the “plusminus.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "plusminus.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct power {
        private init() {}
    }
    
    public struct printer {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “printer.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "printer.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “printer.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "printer.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “printer.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "printer.fill", configuration: configuration)
            }
            
            ///Creates the “printer.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "printer.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “printer.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "printer.fill")
            }
            
            ///Creates the “printer.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "printer.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct projective {
        private init() {}
    }
    
    public struct purchased {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “purchased.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "purchased.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “purchased.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "purchased.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “purchased.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "purchased.circle.fill", configuration: configuration)
                }
                
                ///Creates the “purchased.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "purchased.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “purchased.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "purchased.circle.fill")
                }
                
                ///Creates the “purchased.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "purchased.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct q {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “q.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "q.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “q.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "q.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “q.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "q.circle.fill", configuration: configuration)
                }
                
                ///Creates the “q.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "q.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “q.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "q.circle.fill")
                }
                
                ///Creates the “q.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "q.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “q.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "q.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “q.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "q.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “q.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "q.square.fill", configuration: configuration)
                }
                
                ///Creates the “q.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "q.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “q.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "q.square.fill")
                }
                
                ///Creates the “q.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "q.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct qrcode {
        public struct viewfinder {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct questionmark {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “questionmark.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "questionmark.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “questionmark.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "questionmark.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “questionmark.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "questionmark.circle.fill", configuration: configuration)
                }
                
                ///Creates the “questionmark.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "questionmark.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “questionmark.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "questionmark.circle.fill")
                }
                
                ///Creates the “questionmark.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "questionmark.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct diamond {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “questionmark.diamond.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "questionmark.diamond.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “questionmark.diamond.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "questionmark.diamond.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “questionmark.diamond.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "questionmark.diamond.fill", configuration: configuration)
                }
                
                ///Creates the “questionmark.diamond.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "questionmark.diamond.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “questionmark.diamond.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "questionmark.diamond.fill")
                }
                
                ///Creates the “questionmark.diamond.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "questionmark.diamond.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “questionmark.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "questionmark.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “questionmark.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "questionmark.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “questionmark.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "questionmark.square.fill", configuration: configuration)
                }
                
                ///Creates the “questionmark.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "questionmark.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “questionmark.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "questionmark.square.fill")
                }
                
                ///Creates the “questionmark.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "questionmark.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct video {
            public struct fill {
                public struct rtl {
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “questionmark.video.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "questionmark.video.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “questionmark.video.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "questionmark.video.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “questionmark.video.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "questionmark.video.fill", configuration: configuration)
                }
                
                ///Creates the “questionmark.video.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "questionmark.video.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “questionmark.video.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "questionmark.video.fill")
                }
                
                ///Creates the “questionmark.video.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "questionmark.video.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rtl {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct quote {
        public struct bubble {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “quote.bubble.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "quote.bubble.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “quote.bubble.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "quote.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “quote.bubble.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "quote.bubble.fill", configuration: configuration)
                }
                
                ///Creates the “quote.bubble.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "quote.bubble.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “quote.bubble.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "quote.bubble.fill")
                }
                
                ///Creates the “quote.bubble.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "quote.bubble.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct r {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “r.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "r.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “r.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "r.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “r.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "r.circle.fill", configuration: configuration)
                }
                
                ///Creates the “r.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "r.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “r.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "r.circle.fill")
                }
                
                ///Creates the “r.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "r.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “r.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "r.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “r.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "r.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “r.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "r.square.fill", configuration: configuration)
                }
                
                ///Creates the “r.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "r.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “r.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "r.square.fill")
                }
                
                ///Creates the “r.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "r.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct radiowaves {
        public struct left {
            private init() {}
        }
        
        public struct right {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct rays {
        private init() {}
    }
    
    public struct recordingtape {
        private init() {}
    }
    
    public struct rectangle {
        public struct x3 {
            public struct offgrid {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “rectangle.3.offgrid.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.3.offgrid.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “rectangle.3.offgrid.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.3.offgrid.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “rectangle.3.offgrid.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.3.offgrid.fill", configuration: configuration)
                    }
                    
                    ///Creates the “rectangle.3.offgrid.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.3.offgrid.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “rectangle.3.offgrid.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.3.offgrid.fill")
                    }
                    
                    ///Creates the “rectangle.3.offgrid.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.3.offgrid.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct and {
            public struct arrow {
                public struct up {
                    public struct right {
                        public struct and {
                            public struct arrow {
                                public struct down {
                                    public struct left {
                                        public struct slash {
                                            private init() {}
                                        }
                                        
                                        private init() {}
                                    }
                                    
                                    private init() {}
                                }
                                
                                private init() {}
                            }
                            
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct paperclip {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct badge {
            public struct checkmark {
                private init() {}
            }
            
            public struct xmark {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct compress {
            public struct vertical {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct dock {
            private init() {}
        }
        
        public struct expand {
            public struct vertical {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            public struct badge {
                public struct checkmark {
                    private init() {}
                }
                
                public struct xmark {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct on {
                public struct rectangle {
                    public struct angled {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “rectangle.fill.on.rectangle.angled.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "rectangle.fill.on.rectangle.angled.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “rectangle.fill.on.rectangle.angled.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "rectangle.fill.on.rectangle.angled.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “rectangle.fill.on.rectangle.angled.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "rectangle.fill.on.rectangle.angled.fill", configuration: configuration)
                            }
                            
                            ///Creates the “rectangle.fill.on.rectangle.angled.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "rectangle.fill.on.rectangle.angled.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “rectangle.fill.on.rectangle.angled.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "rectangle.fill.on.rectangle.angled.fill")
                            }
                            
                            ///Creates the “rectangle.fill.on.rectangle.angled.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "rectangle.fill.on.rectangle.angled.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “rectangle.fill.on.rectangle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "rectangle.fill.on.rectangle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “rectangle.fill.on.rectangle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "rectangle.fill.on.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “rectangle.fill.on.rectangle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "rectangle.fill.on.rectangle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “rectangle.fill.on.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "rectangle.fill.on.rectangle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “rectangle.fill.on.rectangle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "rectangle.fill.on.rectangle.fill")
                        }
                        
                        ///Creates the “rectangle.fill.on.rectangle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "rectangle.fill.on.rectangle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “rectangle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "rectangle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “rectangle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “rectangle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "rectangle.fill", configuration: configuration)
            }
            
            ///Creates the “rectangle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "rectangle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “rectangle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "rectangle.fill")
            }
            
            ///Creates the “rectangle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "rectangle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct grid {
            public struct x1x2 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “rectangle.grid.1x2.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.grid.1x2.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “rectangle.grid.1x2.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.grid.1x2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “rectangle.grid.1x2.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.grid.1x2.fill", configuration: configuration)
                    }
                    
                    ///Creates the “rectangle.grid.1x2.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.grid.1x2.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “rectangle.grid.1x2.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.grid.1x2.fill")
                    }
                    
                    ///Creates the “rectangle.grid.1x2.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.grid.1x2.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct x2x2 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “rectangle.grid.2x2.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.grid.2x2.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “rectangle.grid.2x2.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.grid.2x2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “rectangle.grid.2x2.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.grid.2x2.fill", configuration: configuration)
                    }
                    
                    ///Creates the “rectangle.grid.2x2.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.grid.2x2.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “rectangle.grid.2x2.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.grid.2x2.fill")
                    }
                    
                    ///Creates the “rectangle.grid.2x2.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.grid.2x2.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct x3x2 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “rectangle.grid.3x2.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.grid.3x2.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “rectangle.grid.3x2.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.grid.3x2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “rectangle.grid.3x2.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.grid.3x2.fill", configuration: configuration)
                    }
                    
                    ///Creates the “rectangle.grid.3x2.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.grid.3x2.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “rectangle.grid.3x2.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.grid.3x2.fill")
                    }
                    
                    ///Creates the “rectangle.grid.3x2.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.grid.3x2.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct on {
            public struct rectangle {
                public struct angled {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct split {
            public struct x3x1 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “rectangle.split.3x1.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.split.3x1.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “rectangle.split.3x1.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.split.3x1.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “rectangle.split.3x1.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.split.3x1.fill", configuration: configuration)
                    }
                    
                    ///Creates the “rectangle.split.3x1.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.split.3x1.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “rectangle.split.3x1.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.split.3x1.fill")
                    }
                    
                    ///Creates the “rectangle.split.3x1.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.split.3x1.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct x3x3 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “rectangle.split.3x3.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.split.3x3.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “rectangle.split.3x3.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "rectangle.split.3x3.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “rectangle.split.3x3.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.split.3x3.fill", configuration: configuration)
                    }
                    
                    ///Creates the “rectangle.split.3x3.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "rectangle.split.3x3.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “rectangle.split.3x3.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.split.3x3.fill")
                    }
                    
                    ///Creates the “rectangle.split.3x3.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "rectangle.split.3x3.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct stack {
            public struct badge {
                public struct minus {
                    private init() {}
                }
                
                public struct person {
                    public struct crop {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                public struct plus {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct fill {
                public struct badge {
                    public struct minus {
                        private init() {}
                    }
                    
                    public struct person {
                        public struct crop {
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    public struct plus {
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “rectangle.stack.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rectangle.stack.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “rectangle.stack.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rectangle.stack.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “rectangle.stack.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rectangle.stack.fill", configuration: configuration)
                }
                
                ///Creates the “rectangle.stack.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rectangle.stack.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “rectangle.stack.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rectangle.stack.fill")
                }
                
                ///Creates the “rectangle.stack.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rectangle.stack.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct person {
                public struct crop {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “rectangle.stack.person.crop.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "rectangle.stack.person.crop.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “rectangle.stack.person.crop.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "rectangle.stack.person.crop.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “rectangle.stack.person.crop.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "rectangle.stack.person.crop.fill", configuration: configuration)
                        }
                        
                        ///Creates the “rectangle.stack.person.crop.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "rectangle.stack.person.crop.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “rectangle.stack.person.crop.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "rectangle.stack.person.crop.fill")
                        }
                        
                        ///Creates the “rectangle.stack.person.crop.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "rectangle.stack.person.crop.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct `repeat` {
        public struct x1 {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct `return` {
        private init() {}
    }
    
    public struct rhombus {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “rhombus.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "rhombus.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “rhombus.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "rhombus.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “rhombus.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "rhombus.fill", configuration: configuration)
            }
            
            ///Creates the “rhombus.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "rhombus.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “rhombus.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "rhombus.fill")
            }
            
            ///Creates the “rhombus.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "rhombus.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct rosette {
        private init() {}
    }
    
    public struct rotate {
        public struct left {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “rotate.left.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rotate.left.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “rotate.left.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rotate.left.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “rotate.left.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rotate.left.fill", configuration: configuration)
                }
                
                ///Creates the “rotate.left.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rotate.left.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “rotate.left.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rotate.left.fill")
                }
                
                ///Creates the “rotate.left.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rotate.left.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct right {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “rotate.right.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rotate.right.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “rotate.right.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rotate.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “rotate.right.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rotate.right.fill", configuration: configuration)
                }
                
                ///Creates the “rotate.right.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rotate.right.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “rotate.right.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rotate.right.fill")
                }
                
                ///Creates the “rotate.right.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rotate.right.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct rublesign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “rublesign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rublesign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “rublesign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rublesign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “rublesign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rublesign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “rublesign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rublesign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “rublesign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rublesign.circle.fill")
                }
                
                ///Creates the “rublesign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rublesign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “rublesign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rublesign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “rublesign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rublesign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “rublesign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rublesign.square.fill", configuration: configuration)
                }
                
                ///Creates the “rublesign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rublesign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “rublesign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rublesign.square.fill")
                }
                
                ///Creates the “rublesign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rublesign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct rupeesign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “rupeesign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rupeesign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “rupeesign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rupeesign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “rupeesign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rupeesign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “rupeesign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rupeesign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “rupeesign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rupeesign.circle.fill")
                }
                
                ///Creates the “rupeesign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rupeesign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “rupeesign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rupeesign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “rupeesign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "rupeesign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “rupeesign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rupeesign.square.fill", configuration: configuration)
                }
                
                ///Creates the “rupeesign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "rupeesign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “rupeesign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rupeesign.square.fill")
                }
                
                ///Creates the “rupeesign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "rupeesign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct s {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “s.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "s.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “s.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "s.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “s.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "s.circle.fill", configuration: configuration)
                }
                
                ///Creates the “s.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "s.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “s.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "s.circle.fill")
                }
                
                ///Creates the “s.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "s.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “s.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "s.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “s.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "s.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “s.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "s.square.fill", configuration: configuration)
                }
                
                ///Creates the “s.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "s.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “s.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "s.square.fill")
                }
                
                ///Creates the “s.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "s.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct safari {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “safari.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "safari.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “safari.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "safari.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “safari.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "safari.fill", configuration: configuration)
            }
            
            ///Creates the “safari.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "safari.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “safari.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "safari.fill")
            }
            
            ///Creates the “safari.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "safari.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct scissors {
        private init() {}
    }
    
    public struct scope {
        private init() {}
    }
    
    public struct scribble {
        private init() {}
    }
    
    public struct selection {
        public struct pin {
            public struct `in` {
                public struct out {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct sheqelsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sheqelsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sheqelsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sheqelsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sheqelsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sheqelsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sheqelsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “sheqelsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sheqelsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sheqelsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sheqelsign.circle.fill")
                }
                
                ///Creates the “sheqelsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sheqelsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sheqelsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sheqelsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sheqelsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sheqelsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sheqelsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sheqelsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “sheqelsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sheqelsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sheqelsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sheqelsign.square.fill")
                }
                
                ///Creates the “sheqelsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sheqelsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct shield {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “shield.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "shield.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “shield.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "shield.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “shield.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "shield.fill", configuration: configuration)
            }
            
            ///Creates the “shield.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "shield.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “shield.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "shield.fill")
            }
            
            ///Creates the “shield.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "shield.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct lefthalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “shield.lefthalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "shield.lefthalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “shield.lefthalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "shield.lefthalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “shield.lefthalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "shield.lefthalf.fill", configuration: configuration)
                }
                
                ///Creates the “shield.lefthalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "shield.lefthalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “shield.lefthalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "shield.lefthalf.fill")
                }
                
                ///Creates the “shield.lefthalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "shield.lefthalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “shield.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "shield.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “shield.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "shield.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “shield.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "shield.slash.fill", configuration: configuration)
                }
                
                ///Creates the “shield.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "shield.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “shield.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "shield.slash.fill")
                }
                
                ///Creates the “shield.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "shield.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct shift {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “shift.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "shift.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “shift.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "shift.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “shift.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "shift.fill", configuration: configuration)
            }
            
            ///Creates the “shift.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "shift.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “shift.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "shift.fill")
            }
            
            ///Creates the “shift.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "shift.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct shuffle {
        private init() {}
    }
    
    public struct sidebar {
        public struct left {
            private init() {}
        }
        
        public struct right {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct signature {
        private init() {}
    }
    
    public struct skew {
        private init() {}
    }
    
    public struct slash {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “slash.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "slash.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “slash.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "slash.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “slash.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "slash.circle.fill", configuration: configuration)
                }
                
                ///Creates the “slash.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "slash.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “slash.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "slash.circle.fill")
                }
                
                ///Creates the “slash.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "slash.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct slider {
        public struct horizontal {
            public struct x3 {
                private init() {}
            }
            
            public struct below {
                public struct rectangle {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct slowmo {
        private init() {}
    }
    
    public struct smallcircle {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “smallcircle.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "smallcircle.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “smallcircle.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "smallcircle.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “smallcircle.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "smallcircle.circle.fill", configuration: configuration)
                }
                
                ///Creates the “smallcircle.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "smallcircle.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “smallcircle.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "smallcircle.circle.fill")
                }
                
                ///Creates the “smallcircle.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "smallcircle.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            public struct circle {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “smallcircle.fill.circle.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "smallcircle.fill.circle.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “smallcircle.fill.circle.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "smallcircle.fill.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “smallcircle.fill.circle.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "smallcircle.fill.circle.fill", configuration: configuration)
                    }
                    
                    ///Creates the “smallcircle.fill.circle.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "smallcircle.fill.circle.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “smallcircle.fill.circle.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "smallcircle.fill.circle.fill")
                    }
                    
                    ///Creates the “smallcircle.fill.circle.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "smallcircle.fill.circle.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct smiley {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “smiley.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "smiley.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “smiley.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "smiley.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “smiley.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "smiley.fill", configuration: configuration)
            }
            
            ///Creates the “smiley.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "smiley.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “smiley.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "smiley.fill")
            }
            
            ///Creates the “smiley.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "smiley.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct smoke {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “smoke.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "smoke.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “smoke.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "smoke.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “smoke.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "smoke.fill", configuration: configuration)
            }
            
            ///Creates the “smoke.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "smoke.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “smoke.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "smoke.fill")
            }
            
            ///Creates the “smoke.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "smoke.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct snow {
        private init() {}
    }
    
    public struct sparkles {
        private init() {}
    }
    
    public struct speaker {
        public struct x1 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “speaker.1.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.1.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “speaker.1.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.1.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “speaker.1.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.1.fill", configuration: configuration)
                }
                
                ///Creates the “speaker.1.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.1.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “speaker.1.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.1.fill")
                }
                
                ///Creates the “speaker.1.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.1.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct x2 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “speaker.2.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.2.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “speaker.2.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “speaker.2.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.2.fill", configuration: configuration)
                }
                
                ///Creates the “speaker.2.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.2.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “speaker.2.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.2.fill")
                }
                
                ///Creates the “speaker.2.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.2.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct x3 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “speaker.3.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.3.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “speaker.3.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.3.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “speaker.3.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.3.fill", configuration: configuration)
                }
                
                ///Creates the “speaker.3.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.3.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “speaker.3.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.3.fill")
                }
                
                ///Creates the “speaker.3.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.3.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “speaker.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "speaker.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “speaker.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "speaker.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “speaker.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "speaker.fill", configuration: configuration)
            }
            
            ///Creates the “speaker.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "speaker.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “speaker.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "speaker.fill")
            }
            
            ///Creates the “speaker.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "speaker.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                public struct rtl {
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “speaker.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “speaker.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “speaker.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.slash.fill", configuration: configuration)
                }
                
                ///Creates the “speaker.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “speaker.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.slash.fill")
                }
                
                ///Creates the “speaker.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rtl {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct zzz {
            public struct fill {
                public struct rtl {
                    private init() {}
                }
                
                private init() {}
                #if os(macOS)
                
                ///Creates the “speaker.zzz.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.zzz.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “speaker.zzz.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "speaker.zzz.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “speaker.zzz.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.zzz.fill", configuration: configuration)
                }
                
                ///Creates the “speaker.zzz.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "speaker.zzz.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “speaker.zzz.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.zzz.fill")
                }
                
                ///Creates the “speaker.zzz.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "speaker.zzz.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            public struct rtl {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct speedometer {
        private init() {}
    }
    
    public struct sportscourt {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sportscourt.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sportscourt.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sportscourt.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sportscourt.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sportscourt.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sportscourt.fill", configuration: configuration)
            }
            
            ///Creates the “sportscourt.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sportscourt.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sportscourt.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sportscourt.fill")
            }
            
            ///Creates the “sportscourt.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sportscourt.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct square {
        public struct and {
            public struct arrow {
                public struct down {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “square.and.arrow.down.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.and.arrow.down.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “square.and.arrow.down.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.and.arrow.down.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “square.and.arrow.down.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.and.arrow.down.fill", configuration: configuration)
                        }
                        
                        ///Creates the “square.and.arrow.down.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.and.arrow.down.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “square.and.arrow.down.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.and.arrow.down.fill")
                        }
                        
                        ///Creates the “square.and.arrow.down.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.and.arrow.down.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    public struct on {
                        public struct square {
                            public struct fill {
                                private init() {}
                                #if os(macOS)
                                
                                ///Creates the “square.and.arrow.down.on.square.fill” system symbol image with the accessibility description you specify.
                                ///
                                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                                @available(iOS, unavailable)
                                @available(tvOS, unavailable)
                                @available(watchOS, unavailable)
                                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                    SFSymbolReference.image(name: "square.and.arrow.down.on.square.fill", accessibilityDescription: accessibilityDescription)
                                }
                                
                                ///Creates the “square.and.arrow.down.on.square.fill” system symbol image with the variable value you specify.
                                ///
                                ///The value parameter is valid for symbols that support variable rendering.
                                ///
                                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                                @available(macOS 13.0, *)
                                @available(iOS, unavailable)
                                @available(tvOS, unavailable)
                                @available(watchOS, unavailable)
                                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                    SFSymbolReference.image(name: "square.and.arrow.down.on.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                                }
                                
                                #endif
                                
                                #if os(iOS) || os(tvOS) || os(watchOS)
                                
                                ///Creates the “square.and.arrow.down.on.square.fill” system symbol image object with the specified configuration.
                                ///
                                ///Use this method to retrieve system-defined symbol images.
                                ///
                                ///- Parameter configuration: The image configuration the system applies to the image.
                                ///
                                ///- Returns: The object containing the image variant that matches the specified configuration data.
                                @available(macOS, unavailable)
                                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                    SFSymbolReference.image(name: "square.and.arrow.down.on.square.fill", configuration: configuration)
                                }
                                
                                ///Creates the “square.and.arrow.down.on.square.fill” system symbol image object with the configuration and variable value you specify.
                                ///
                                ///Use this method to retrieve system-defined symbol images.
                                ///
                                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                                ///- Parameter configuration: The image configuration the system applies to the image.
                                ///
                                ///- Returns: The object containing the image variant that matches the specified configuration data.
                                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                                @available(macOS, unavailable)
                                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                    SFSymbolReference.image(name: "square.and.arrow.down.on.square.fill", variableValue: variableValue, configuration: configuration)
                                }
                                
                                #endif
                                
                                #if canImport(SwiftUI)
                                ///Creates the “square.and.arrow.down.on.square.fill” system symbol image.
                                ///
                                ///This initializer creates an image using a system-provided symbol.
                                public static func swiftUIImage() -> SwiftUI.Image {
                                    SFSymbolReference.swiftUIImage(name: "square.and.arrow.down.on.square.fill")
                                }
                                
                                ///Creates the “square.and.arrow.down.on.square.fill” system symbol image with a variable value.
                                ///
                                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                                ///
                                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                    SFSymbolReference.swiftUIImage(name: "square.and.arrow.down.on.square.fill", variableValue: variableValue)
                                }
                                
                                #endif
                            }
                            
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                public struct up {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “square.and.arrow.up.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.and.arrow.up.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “square.and.arrow.up.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.and.arrow.up.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “square.and.arrow.up.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.and.arrow.up.fill", configuration: configuration)
                        }
                        
                        ///Creates the “square.and.arrow.up.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.and.arrow.up.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “square.and.arrow.up.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.and.arrow.up.fill")
                        }
                        
                        ///Creates the “square.and.arrow.up.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.and.arrow.up.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    public struct on {
                        public struct square {
                            public struct fill {
                                private init() {}
                                #if os(macOS)
                                
                                ///Creates the “square.and.arrow.up.on.square.fill” system symbol image with the accessibility description you specify.
                                ///
                                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                                @available(iOS, unavailable)
                                @available(tvOS, unavailable)
                                @available(watchOS, unavailable)
                                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                    SFSymbolReference.image(name: "square.and.arrow.up.on.square.fill", accessibilityDescription: accessibilityDescription)
                                }
                                
                                ///Creates the “square.and.arrow.up.on.square.fill” system symbol image with the variable value you specify.
                                ///
                                ///The value parameter is valid for symbols that support variable rendering.
                                ///
                                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                                @available(macOS 13.0, *)
                                @available(iOS, unavailable)
                                @available(tvOS, unavailable)
                                @available(watchOS, unavailable)
                                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                    SFSymbolReference.image(name: "square.and.arrow.up.on.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                                }
                                
                                #endif
                                
                                #if os(iOS) || os(tvOS) || os(watchOS)
                                
                                ///Creates the “square.and.arrow.up.on.square.fill” system symbol image object with the specified configuration.
                                ///
                                ///Use this method to retrieve system-defined symbol images.
                                ///
                                ///- Parameter configuration: The image configuration the system applies to the image.
                                ///
                                ///- Returns: The object containing the image variant that matches the specified configuration data.
                                @available(macOS, unavailable)
                                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                    SFSymbolReference.image(name: "square.and.arrow.up.on.square.fill", configuration: configuration)
                                }
                                
                                ///Creates the “square.and.arrow.up.on.square.fill” system symbol image object with the configuration and variable value you specify.
                                ///
                                ///Use this method to retrieve system-defined symbol images.
                                ///
                                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                                ///- Parameter configuration: The image configuration the system applies to the image.
                                ///
                                ///- Returns: The object containing the image variant that matches the specified configuration data.
                                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                                @available(macOS, unavailable)
                                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                    SFSymbolReference.image(name: "square.and.arrow.up.on.square.fill", variableValue: variableValue, configuration: configuration)
                                }
                                
                                #endif
                                
                                #if canImport(SwiftUI)
                                ///Creates the “square.and.arrow.up.on.square.fill” system symbol image.
                                ///
                                ///This initializer creates an image using a system-provided symbol.
                                public static func swiftUIImage() -> SwiftUI.Image {
                                    SFSymbolReference.swiftUIImage(name: "square.and.arrow.up.on.square.fill")
                                }
                                
                                ///Creates the “square.and.arrow.up.on.square.fill” system symbol image with a variable value.
                                ///
                                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                                ///
                                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                    SFSymbolReference.swiftUIImage(name: "square.and.arrow.up.on.square.fill", variableValue: variableValue)
                                }
                                
                                #endif
                            }
                            
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct line {
                public struct vertical {
                    public struct and {
                        public struct square {
                            public struct fill {
                                private init() {}
                                #if os(macOS)
                                
                                ///Creates the “square.and.line.vertical.and.square.fill” system symbol image with the accessibility description you specify.
                                ///
                                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                                @available(iOS, unavailable)
                                @available(tvOS, unavailable)
                                @available(watchOS, unavailable)
                                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                    SFSymbolReference.image(name: "square.and.line.vertical.and.square.fill", accessibilityDescription: accessibilityDescription)
                                }
                                
                                ///Creates the “square.and.line.vertical.and.square.fill” system symbol image with the variable value you specify.
                                ///
                                ///The value parameter is valid for symbols that support variable rendering.
                                ///
                                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                                @available(macOS 13.0, *)
                                @available(iOS, unavailable)
                                @available(tvOS, unavailable)
                                @available(watchOS, unavailable)
                                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                    SFSymbolReference.image(name: "square.and.line.vertical.and.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                                }
                                
                                #endif
                                
                                #if os(iOS) || os(tvOS) || os(watchOS)
                                
                                ///Creates the “square.and.line.vertical.and.square.fill” system symbol image object with the specified configuration.
                                ///
                                ///Use this method to retrieve system-defined symbol images.
                                ///
                                ///- Parameter configuration: The image configuration the system applies to the image.
                                ///
                                ///- Returns: The object containing the image variant that matches the specified configuration data.
                                @available(macOS, unavailable)
                                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                    SFSymbolReference.image(name: "square.and.line.vertical.and.square.fill", configuration: configuration)
                                }
                                
                                ///Creates the “square.and.line.vertical.and.square.fill” system symbol image object with the configuration and variable value you specify.
                                ///
                                ///Use this method to retrieve system-defined symbol images.
                                ///
                                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                                ///- Parameter configuration: The image configuration the system applies to the image.
                                ///
                                ///- Returns: The object containing the image variant that matches the specified configuration data.
                                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                                @available(macOS, unavailable)
                                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                    SFSymbolReference.image(name: "square.and.line.vertical.and.square.fill", variableValue: variableValue, configuration: configuration)
                                }
                                
                                #endif
                                
                                #if canImport(SwiftUI)
                                ///Creates the “square.and.line.vertical.and.square.fill” system symbol image.
                                ///
                                ///This initializer creates an image using a system-provided symbol.
                                public static func swiftUIImage() -> SwiftUI.Image {
                                    SFSymbolReference.swiftUIImage(name: "square.and.line.vertical.and.square.fill")
                                }
                                
                                ///Creates the “square.and.line.vertical.and.square.fill” system symbol image with a variable value.
                                ///
                                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                                ///
                                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                    SFSymbolReference.swiftUIImage(name: "square.and.line.vertical.and.square.fill", variableValue: variableValue)
                                }
                                
                                #endif
                            }
                            
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct pencil {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            public struct and {
                public struct line {
                    public struct vertical {
                        public struct and {
                            public struct square {
                                private init() {}
                            }
                            
                            private init() {}
                        }
                        
                        public struct square {
                            public struct fill {
                                private init() {}
                                #if os(macOS)
                                
                                ///Creates the “square.fill.and.line.vertical.square.fill” system symbol image with the accessibility description you specify.
                                ///
                                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                                @available(iOS, unavailable)
                                @available(tvOS, unavailable)
                                @available(watchOS, unavailable)
                                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                    SFSymbolReference.image(name: "square.fill.and.line.vertical.square.fill", accessibilityDescription: accessibilityDescription)
                                }
                                
                                ///Creates the “square.fill.and.line.vertical.square.fill” system symbol image with the variable value you specify.
                                ///
                                ///The value parameter is valid for symbols that support variable rendering.
                                ///
                                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                                @available(macOS 13.0, *)
                                @available(iOS, unavailable)
                                @available(tvOS, unavailable)
                                @available(watchOS, unavailable)
                                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                    SFSymbolReference.image(name: "square.fill.and.line.vertical.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                                }
                                
                                #endif
                                
                                #if os(iOS) || os(tvOS) || os(watchOS)
                                
                                ///Creates the “square.fill.and.line.vertical.square.fill” system symbol image object with the specified configuration.
                                ///
                                ///Use this method to retrieve system-defined symbol images.
                                ///
                                ///- Parameter configuration: The image configuration the system applies to the image.
                                ///
                                ///- Returns: The object containing the image variant that matches the specified configuration data.
                                @available(macOS, unavailable)
                                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                    SFSymbolReference.image(name: "square.fill.and.line.vertical.square.fill", configuration: configuration)
                                }
                                
                                ///Creates the “square.fill.and.line.vertical.square.fill” system symbol image object with the configuration and variable value you specify.
                                ///
                                ///Use this method to retrieve system-defined symbol images.
                                ///
                                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                                ///- Parameter configuration: The image configuration the system applies to the image.
                                ///
                                ///- Returns: The object containing the image variant that matches the specified configuration data.
                                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                                @available(macOS, unavailable)
                                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                    SFSymbolReference.image(name: "square.fill.and.line.vertical.square.fill", variableValue: variableValue, configuration: configuration)
                                }
                                
                                #endif
                                
                                #if canImport(SwiftUI)
                                ///Creates the “square.fill.and.line.vertical.square.fill” system symbol image.
                                ///
                                ///This initializer creates an image using a system-provided symbol.
                                public static func swiftUIImage() -> SwiftUI.Image {
                                    SFSymbolReference.swiftUIImage(name: "square.fill.and.line.vertical.square.fill")
                                }
                                
                                ///Creates the “square.fill.and.line.vertical.square.fill” system symbol image with a variable value.
                                ///
                                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                                ///
                                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                    SFSymbolReference.swiftUIImage(name: "square.fill.and.line.vertical.square.fill", variableValue: variableValue)
                                }
                                
                                #endif
                            }
                            
                            private init() {}
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct on {
                public struct circle {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “square.fill.on.circle.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.fill.on.circle.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “square.fill.on.circle.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.fill.on.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “square.fill.on.circle.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.fill.on.circle.fill", configuration: configuration)
                        }
                        
                        ///Creates the “square.fill.on.circle.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.fill.on.circle.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “square.fill.on.circle.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.fill.on.circle.fill")
                        }
                        
                        ///Creates the “square.fill.on.circle.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.fill.on.circle.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct square {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “square.fill.on.square.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.fill.on.square.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “square.fill.on.square.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.fill.on.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “square.fill.on.square.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.fill.on.square.fill", configuration: configuration)
                        }
                        
                        ///Creates the “square.fill.on.square.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.fill.on.square.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “square.fill.on.square.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.fill.on.square.fill")
                        }
                        
                        ///Creates the “square.fill.on.square.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.fill.on.square.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
            #if os(macOS)
            
            ///Creates the “square.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "square.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “square.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “square.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "square.fill", configuration: configuration)
            }
            
            ///Creates the “square.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "square.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “square.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "square.fill")
            }
            
            ///Creates the “square.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "square.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct grid {
            public struct x2x2 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “square.grid.2x2.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.grid.2x2.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “square.grid.2x2.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.grid.2x2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “square.grid.2x2.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.grid.2x2.fill", configuration: configuration)
                    }
                    
                    ///Creates the “square.grid.2x2.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.grid.2x2.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “square.grid.2x2.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.grid.2x2.fill")
                    }
                    
                    ///Creates the “square.grid.2x2.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.grid.2x2.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct x3x2 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “square.grid.3x2.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.grid.3x2.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “square.grid.3x2.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.grid.3x2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “square.grid.3x2.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.grid.3x2.fill", configuration: configuration)
                    }
                    
                    ///Creates the “square.grid.3x2.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.grid.3x2.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “square.grid.3x2.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.grid.3x2.fill")
                    }
                    
                    ///Creates the “square.grid.3x2.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.grid.3x2.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct x4x3 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “square.grid.4x3.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.grid.4x3.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “square.grid.4x3.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.grid.4x3.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “square.grid.4x3.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.grid.4x3.fill", configuration: configuration)
                    }
                    
                    ///Creates the “square.grid.4x3.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.grid.4x3.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “square.grid.4x3.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.grid.4x3.fill")
                    }
                    
                    ///Creates the “square.grid.4x3.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.grid.4x3.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct lefthalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “square.lefthalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "square.lefthalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “square.lefthalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "square.lefthalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “square.lefthalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "square.lefthalf.fill", configuration: configuration)
                }
                
                ///Creates the “square.lefthalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "square.lefthalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “square.lefthalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "square.lefthalf.fill")
                }
                
                ///Creates the “square.lefthalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "square.lefthalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct on {
            public struct circle {
                private init() {}
            }
            
            public struct square {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct righthalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “square.righthalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "square.righthalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “square.righthalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "square.righthalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “square.righthalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "square.righthalf.fill", configuration: configuration)
                }
                
                ///Creates the “square.righthalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "square.righthalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “square.righthalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "square.righthalf.fill")
                }
                
                ///Creates the “square.righthalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "square.righthalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct split {
            public struct x1x2 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “square.split.1x2.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.split.1x2.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “square.split.1x2.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.split.1x2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “square.split.1x2.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.split.1x2.fill", configuration: configuration)
                    }
                    
                    ///Creates the “square.split.1x2.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.split.1x2.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “square.split.1x2.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.split.1x2.fill")
                    }
                    
                    ///Creates the “square.split.1x2.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.split.1x2.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct x2x1 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “square.split.2x1.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.split.2x1.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “square.split.2x1.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.split.2x1.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “square.split.2x1.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.split.2x1.fill", configuration: configuration)
                    }
                    
                    ///Creates the “square.split.2x1.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.split.2x1.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “square.split.2x1.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.split.2x1.fill")
                    }
                    
                    ///Creates the “square.split.2x1.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.split.2x1.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            public struct x2x2 {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “square.split.2x2.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.split.2x2.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “square.split.2x2.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "square.split.2x2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “square.split.2x2.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.split.2x2.fill", configuration: configuration)
                    }
                    
                    ///Creates the “square.split.2x2.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "square.split.2x2.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “square.split.2x2.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.split.2x2.fill")
                    }
                    
                    ///Creates the “square.split.2x2.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "square.split.2x2.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct stack {
            public struct x3d {
                public struct down {
                    public struct dottedline {
                        private init() {}
                    }
                    
                    public struct right {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “square.stack.3d.down.right.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "square.stack.3d.down.right.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “square.stack.3d.down.right.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "square.stack.3d.down.right.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “square.stack.3d.down.right.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "square.stack.3d.down.right.fill", configuration: configuration)
                            }
                            
                            ///Creates the “square.stack.3d.down.right.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "square.stack.3d.down.right.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “square.stack.3d.down.right.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "square.stack.3d.down.right.fill")
                            }
                            
                            ///Creates the “square.stack.3d.down.right.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "square.stack.3d.down.right.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                public struct up {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “square.stack.3d.up.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.stack.3d.up.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “square.stack.3d.up.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "square.stack.3d.up.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “square.stack.3d.up.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.stack.3d.up.fill", configuration: configuration)
                        }
                        
                        ///Creates the “square.stack.3d.up.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "square.stack.3d.up.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “square.stack.3d.up.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.stack.3d.up.fill")
                        }
                        
                        ///Creates the “square.stack.3d.up.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "square.stack.3d.up.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    public struct slash {
                        public struct fill {
                            private init() {}
                            #if os(macOS)
                            
                            ///Creates the “square.stack.3d.up.slash.fill” system symbol image with the accessibility description you specify.
                            ///
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "square.stack.3d.up.slash.fill", accessibilityDescription: accessibilityDescription)
                            }
                            
                            ///Creates the “square.stack.3d.up.slash.fill” system symbol image with the variable value you specify.
                            ///
                            ///The value parameter is valid for symbols that support variable rendering.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                            @available(macOS 13.0, *)
                            @available(iOS, unavailable)
                            @available(tvOS, unavailable)
                            @available(watchOS, unavailable)
                            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                                SFSymbolReference.image(name: "square.stack.3d.up.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                            }
                            
                            #endif
                            
                            #if os(iOS) || os(tvOS) || os(watchOS)
                            
                            ///Creates the “square.stack.3d.up.slash.fill” system symbol image object with the specified configuration.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(macOS, unavailable)
                            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "square.stack.3d.up.slash.fill", configuration: configuration)
                            }
                            
                            ///Creates the “square.stack.3d.up.slash.fill” system symbol image object with the configuration and variable value you specify.
                            ///
                            ///Use this method to retrieve system-defined symbol images.
                            ///
                            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                            ///- Parameter configuration: The image configuration the system applies to the image.
                            ///
                            ///- Returns: The object containing the image variant that matches the specified configuration data.
                            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            @available(macOS, unavailable)
                            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                                SFSymbolReference.image(name: "square.stack.3d.up.slash.fill", variableValue: variableValue, configuration: configuration)
                            }
                            
                            #endif
                            
                            #if canImport(SwiftUI)
                            ///Creates the “square.stack.3d.up.slash.fill” system symbol image.
                            ///
                            ///This initializer creates an image using a system-provided symbol.
                            public static func swiftUIImage() -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "square.stack.3d.up.slash.fill")
                            }
                            
                            ///Creates the “square.stack.3d.up.slash.fill” system symbol image with a variable value.
                            ///
                            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                            ///
                            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                                SFSymbolReference.swiftUIImage(name: "square.stack.3d.up.slash.fill", variableValue: variableValue)
                            }
                            
                            #endif
                        }
                        
                        private init() {}
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “square.stack.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "square.stack.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “square.stack.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "square.stack.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “square.stack.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "square.stack.fill", configuration: configuration)
                }
                
                ///Creates the “square.stack.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "square.stack.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “square.stack.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "square.stack.fill")
                }
                
                ///Creates the “square.stack.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "square.stack.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct squares {
        public struct below {
            public struct rectangle {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct star {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “star.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "star.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “star.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "star.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “star.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "star.circle.fill", configuration: configuration)
                }
                
                ///Creates the “star.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "star.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “star.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "star.circle.fill")
                }
                
                ///Creates the “star.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "star.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “star.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "star.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “star.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "star.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “star.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "star.fill", configuration: configuration)
            }
            
            ///Creates the “star.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "star.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “star.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "star.fill")
            }
            
            ///Creates the “star.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "star.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct lefthalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “star.lefthalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "star.lefthalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “star.lefthalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "star.lefthalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “star.lefthalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "star.lefthalf.fill", configuration: configuration)
                }
                
                ///Creates the “star.lefthalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "star.lefthalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “star.lefthalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "star.lefthalf.fill")
                }
                
                ///Creates the “star.lefthalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "star.lefthalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “star.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "star.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “star.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "star.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “star.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "star.slash.fill", configuration: configuration)
                }
                
                ///Creates the “star.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "star.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “star.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "star.slash.fill")
                }
                
                ///Creates the “star.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "star.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct staroflife {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “staroflife.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "staroflife.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “staroflife.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "staroflife.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “staroflife.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "staroflife.fill", configuration: configuration)
            }
            
            ///Creates the “staroflife.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "staroflife.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “staroflife.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "staroflife.fill")
            }
            
            ///Creates the “staroflife.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "staroflife.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct sterlingsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sterlingsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sterlingsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sterlingsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sterlingsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sterlingsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sterlingsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “sterlingsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sterlingsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sterlingsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sterlingsign.circle.fill")
                }
                
                ///Creates the “sterlingsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sterlingsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sterlingsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sterlingsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sterlingsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sterlingsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sterlingsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sterlingsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “sterlingsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sterlingsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sterlingsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sterlingsign.square.fill")
                }
                
                ///Creates the “sterlingsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sterlingsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct stop {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “stop.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "stop.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “stop.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "stop.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “stop.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "stop.circle.fill", configuration: configuration)
                }
                
                ///Creates the “stop.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "stop.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “stop.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "stop.circle.fill")
                }
                
                ///Creates the “stop.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "stop.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “stop.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "stop.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “stop.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "stop.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “stop.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "stop.fill", configuration: configuration)
            }
            
            ///Creates the “stop.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "stop.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “stop.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "stop.fill")
            }
            
            ///Creates the “stop.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "stop.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct stopwatch {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “stopwatch.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "stopwatch.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “stopwatch.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "stopwatch.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “stopwatch.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "stopwatch.fill", configuration: configuration)
            }
            
            ///Creates the “stopwatch.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "stopwatch.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “stopwatch.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "stopwatch.fill")
            }
            
            ///Creates the “stopwatch.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "stopwatch.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct strikethrough {
        private init() {}
    }
    
    public struct suit {
        public struct club {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “suit.club.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "suit.club.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “suit.club.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "suit.club.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “suit.club.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "suit.club.fill", configuration: configuration)
                }
                
                ///Creates the “suit.club.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "suit.club.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “suit.club.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "suit.club.fill")
                }
                
                ///Creates the “suit.club.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "suit.club.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct diamond {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “suit.diamond.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "suit.diamond.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “suit.diamond.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "suit.diamond.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “suit.diamond.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "suit.diamond.fill", configuration: configuration)
                }
                
                ///Creates the “suit.diamond.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "suit.diamond.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “suit.diamond.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "suit.diamond.fill")
                }
                
                ///Creates the “suit.diamond.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "suit.diamond.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct heart {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “suit.heart.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "suit.heart.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “suit.heart.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "suit.heart.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “suit.heart.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "suit.heart.fill", configuration: configuration)
                }
                
                ///Creates the “suit.heart.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "suit.heart.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “suit.heart.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "suit.heart.fill")
                }
                
                ///Creates the “suit.heart.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "suit.heart.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct spade {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “suit.spade.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "suit.spade.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “suit.spade.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "suit.spade.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “suit.spade.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "suit.spade.fill", configuration: configuration)
                }
                
                ///Creates the “suit.spade.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "suit.spade.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “suit.spade.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "suit.spade.fill")
                }
                
                ///Creates the “suit.spade.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "suit.spade.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct sum {
        private init() {}
    }
    
    public struct sun {
        public struct dust {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sun.dust.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.dust.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sun.dust.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.dust.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sun.dust.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.dust.fill", configuration: configuration)
                }
                
                ///Creates the “sun.dust.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.dust.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sun.dust.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.dust.fill")
                }
                
                ///Creates the “sun.dust.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.dust.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct haze {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sun.haze.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.haze.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sun.haze.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.haze.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sun.haze.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.haze.fill", configuration: configuration)
                }
                
                ///Creates the “sun.haze.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.haze.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sun.haze.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.haze.fill")
                }
                
                ///Creates the “sun.haze.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.haze.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct max {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sun.max.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.max.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sun.max.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.max.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sun.max.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.max.fill", configuration: configuration)
                }
                
                ///Creates the “sun.max.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.max.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sun.max.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.max.fill")
                }
                
                ///Creates the “sun.max.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.max.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct min {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “sun.min.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.min.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “sun.min.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "sun.min.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “sun.min.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.min.fill", configuration: configuration)
                }
                
                ///Creates the “sun.min.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "sun.min.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “sun.min.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.min.fill")
                }
                
                ///Creates the “sun.min.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "sun.min.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct sunrise {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sunrise.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sunrise.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sunrise.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sunrise.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sunrise.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sunrise.fill", configuration: configuration)
            }
            
            ///Creates the “sunrise.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sunrise.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sunrise.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sunrise.fill")
            }
            
            ///Creates the “sunrise.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sunrise.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct sunset {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “sunset.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sunset.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “sunset.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "sunset.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “sunset.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sunset.fill", configuration: configuration)
            }
            
            ///Creates the “sunset.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "sunset.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “sunset.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sunset.fill")
            }
            
            ///Creates the “sunset.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "sunset.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct t {
        public struct bubble {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “t.bubble.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "t.bubble.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “t.bubble.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "t.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “t.bubble.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "t.bubble.fill", configuration: configuration)
                }
                
                ///Creates the “t.bubble.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "t.bubble.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “t.bubble.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "t.bubble.fill")
                }
                
                ///Creates the “t.bubble.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "t.bubble.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “t.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "t.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “t.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "t.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “t.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "t.circle.fill", configuration: configuration)
                }
                
                ///Creates the “t.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "t.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “t.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "t.circle.fill")
                }
                
                ///Creates the “t.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "t.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “t.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "t.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “t.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "t.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “t.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "t.square.fill", configuration: configuration)
                }
                
                ///Creates the “t.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "t.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “t.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "t.square.fill")
                }
                
                ///Creates the “t.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "t.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct table {
        public struct badge {
            public struct more {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “table.badge.more.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "table.badge.more.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “table.badge.more.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "table.badge.more.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “table.badge.more.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "table.badge.more.fill", configuration: configuration)
                    }
                    
                    ///Creates the “table.badge.more.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "table.badge.more.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “table.badge.more.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "table.badge.more.fill")
                    }
                    
                    ///Creates the “table.badge.more.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "table.badge.more.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “table.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "table.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “table.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "table.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “table.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "table.fill", configuration: configuration)
            }
            
            ///Creates the “table.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "table.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “table.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "table.fill")
            }
            
            ///Creates the “table.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "table.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct tag {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “tag.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tag.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “tag.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tag.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “tag.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tag.circle.fill", configuration: configuration)
                }
                
                ///Creates the “tag.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tag.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “tag.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tag.circle.fill")
                }
                
                ///Creates the “tag.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tag.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “tag.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tag.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “tag.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tag.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “tag.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tag.fill", configuration: configuration)
            }
            
            ///Creates the “tag.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tag.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “tag.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tag.fill")
            }
            
            ///Creates the “tag.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tag.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct teletype {
        public struct answer {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct tengesign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “tengesign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tengesign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “tengesign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tengesign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “tengesign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tengesign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “tengesign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tengesign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “tengesign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tengesign.circle.fill")
                }
                
                ///Creates the “tengesign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tengesign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “tengesign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tengesign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “tengesign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tengesign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “tengesign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tengesign.square.fill", configuration: configuration)
                }
                
                ///Creates the “tengesign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tengesign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “tengesign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tengesign.square.fill")
                }
                
                ///Creates the “tengesign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tengesign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct text {
        public struct aligncenter {
            private init() {}
        }
        
        public struct alignleft {
            private init() {}
        }
        
        public struct alignright {
            private init() {}
        }
        
        public struct append {
            private init() {}
        }
        
        public struct badge {
            public struct checkmark {
                private init() {}
            }
            
            public struct minus {
                private init() {}
            }
            
            public struct plus {
                private init() {}
            }
            
            public struct star {
                private init() {}
            }
            
            public struct xmark {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct bubble {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “text.bubble.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "text.bubble.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “text.bubble.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "text.bubble.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “text.bubble.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "text.bubble.fill", configuration: configuration)
                }
                
                ///Creates the “text.bubble.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "text.bubble.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “text.bubble.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "text.bubble.fill")
                }
                
                ///Creates the “text.bubble.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "text.bubble.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct cursor {
            private init() {}
        }
        
        public struct insert {
            private init() {}
        }
        
        public struct justify {
            private init() {}
        }
        
        public struct justifyleft {
            private init() {}
        }
        
        public struct justifyright {
            private init() {}
        }
        
        public struct quote {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct textbox {
        private init() {}
    }
    
    public struct textformat {
        public struct x123 {
            private init() {}
        }
        
        public struct abc {
            public struct dottedunderline {
                private init() {}
            }
            
            private init() {}
        }
        
        public struct alt {
            private init() {}
        }
        
        public struct size {
            private init() {}
        }
        
        public struct `subscript` {
            private init() {}
        }
        
        public struct superscript {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct thermometer {
        public struct snowflake {
            private init() {}
        }
        
        public struct sun {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct timelapse {
        private init() {}
    }
    
    public struct timer {
        private init() {}
    }
    
    public struct tornado {
        private init() {}
    }
    
    public struct tortoise {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “tortoise.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tortoise.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “tortoise.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tortoise.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “tortoise.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tortoise.fill", configuration: configuration)
            }
            
            ///Creates the “tortoise.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tortoise.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “tortoise.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tortoise.fill")
            }
            
            ///Creates the “tortoise.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tortoise.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct tram {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “tram.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tram.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “tram.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tram.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “tram.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tram.fill", configuration: configuration)
            }
            
            ///Creates the “tram.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tram.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “tram.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tram.fill")
            }
            
            ///Creates the “tram.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tram.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct trash {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “trash.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "trash.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “trash.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "trash.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “trash.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "trash.circle.fill", configuration: configuration)
                }
                
                ///Creates the “trash.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "trash.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “trash.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "trash.circle.fill")
                }
                
                ///Creates the “trash.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "trash.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “trash.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "trash.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “trash.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "trash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “trash.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "trash.fill", configuration: configuration)
            }
            
            ///Creates the “trash.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "trash.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “trash.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "trash.fill")
            }
            
            ///Creates the “trash.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "trash.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “trash.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "trash.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “trash.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "trash.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “trash.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "trash.slash.fill", configuration: configuration)
                }
                
                ///Creates the “trash.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "trash.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “trash.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "trash.slash.fill")
                }
                
                ///Creates the “trash.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "trash.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct tray {
        public struct x2 {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “tray.2.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tray.2.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “tray.2.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tray.2.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “tray.2.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tray.2.fill", configuration: configuration)
                }
                
                ///Creates the “tray.2.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tray.2.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “tray.2.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tray.2.fill")
                }
                
                ///Creates the “tray.2.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tray.2.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct and {
            public struct arrow {
                public struct down {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “tray.and.arrow.down.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "tray.and.arrow.down.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “tray.and.arrow.down.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "tray.and.arrow.down.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “tray.and.arrow.down.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "tray.and.arrow.down.fill", configuration: configuration)
                        }
                        
                        ///Creates the “tray.and.arrow.down.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "tray.and.arrow.down.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “tray.and.arrow.down.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "tray.and.arrow.down.fill")
                        }
                        
                        ///Creates the “tray.and.arrow.down.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "tray.and.arrow.down.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                public struct up {
                    public struct fill {
                        private init() {}
                        #if os(macOS)
                        
                        ///Creates the “tray.and.arrow.up.fill” system symbol image with the accessibility description you specify.
                        ///
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "tray.and.arrow.up.fill", accessibilityDescription: accessibilityDescription)
                        }
                        
                        ///Creates the “tray.and.arrow.up.fill” system symbol image with the variable value you specify.
                        ///
                        ///The value parameter is valid for symbols that support variable rendering.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                        ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                        @available(macOS 13.0, *)
                        @available(iOS, unavailable)
                        @available(tvOS, unavailable)
                        @available(watchOS, unavailable)
                        public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                            SFSymbolReference.image(name: "tray.and.arrow.up.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                        }
                        
                        #endif
                        
                        #if os(iOS) || os(tvOS) || os(watchOS)
                        
                        ///Creates the “tray.and.arrow.up.fill” system symbol image object with the specified configuration.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(macOS, unavailable)
                        public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "tray.and.arrow.up.fill", configuration: configuration)
                        }
                        
                        ///Creates the “tray.and.arrow.up.fill” system symbol image object with the configuration and variable value you specify.
                        ///
                        ///Use this method to retrieve system-defined symbol images.
                        ///
                        ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                        ///- Parameter configuration: The image configuration the system applies to the image.
                        ///
                        ///- Returns: The object containing the image variant that matches the specified configuration data.
                        @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        @available(macOS, unavailable)
                        public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                            SFSymbolReference.image(name: "tray.and.arrow.up.fill", variableValue: variableValue, configuration: configuration)
                        }
                        
                        #endif
                        
                        #if canImport(SwiftUI)
                        ///Creates the “tray.and.arrow.up.fill” system symbol image.
                        ///
                        ///This initializer creates an image using a system-provided symbol.
                        public static func swiftUIImage() -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "tray.and.arrow.up.fill")
                        }
                        
                        ///Creates the “tray.and.arrow.up.fill” system symbol image with a variable value.
                        ///
                        ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                        ///
                        ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                        @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                        public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                            SFSymbolReference.swiftUIImage(name: "tray.and.arrow.up.fill", variableValue: variableValue)
                        }
                        
                        #endif
                    }
                    
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “tray.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tray.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “tray.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tray.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “tray.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tray.fill", configuration: configuration)
            }
            
            ///Creates the “tray.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tray.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “tray.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tray.fill")
            }
            
            ///Creates the “tray.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tray.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct full {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “tray.full.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tray.full.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “tray.full.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tray.full.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “tray.full.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tray.full.fill", configuration: configuration)
                }
                
                ///Creates the “tray.full.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tray.full.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “tray.full.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tray.full.fill")
                }
                
                ///Creates the “tray.full.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tray.full.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct triangle {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “triangle.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "triangle.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “triangle.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "triangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “triangle.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "triangle.fill", configuration: configuration)
            }
            
            ///Creates the “triangle.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "triangle.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “triangle.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "triangle.fill")
            }
            
            ///Creates the “triangle.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "triangle.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct lefthalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “triangle.lefthalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "triangle.lefthalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “triangle.lefthalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "triangle.lefthalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “triangle.lefthalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "triangle.lefthalf.fill", configuration: configuration)
                }
                
                ///Creates the “triangle.lefthalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "triangle.lefthalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “triangle.lefthalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "triangle.lefthalf.fill")
                }
                
                ///Creates the “triangle.lefthalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "triangle.lefthalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct righthalf {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “triangle.righthalf.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "triangle.righthalf.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “triangle.righthalf.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "triangle.righthalf.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “triangle.righthalf.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "triangle.righthalf.fill", configuration: configuration)
                }
                
                ///Creates the “triangle.righthalf.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "triangle.righthalf.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “triangle.righthalf.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "triangle.righthalf.fill")
                }
                
                ///Creates the “triangle.righthalf.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "triangle.righthalf.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct tropicalstorm {
        private init() {}
    }
    
    public struct tugriksign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “tugriksign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tugriksign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “tugriksign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tugriksign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “tugriksign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tugriksign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “tugriksign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tugriksign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “tugriksign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tugriksign.circle.fill")
                }
                
                ///Creates the “tugriksign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tugriksign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “tugriksign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tugriksign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “tugriksign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tugriksign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “tugriksign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tugriksign.square.fill", configuration: configuration)
                }
                
                ///Creates the “tugriksign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tugriksign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “tugriksign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tugriksign.square.fill")
                }
                
                ///Creates the “tugriksign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tugriksign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct tuningfork {
        private init() {}
    }
    
    public struct turkishlirasign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “turkishlirasign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "turkishlirasign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “turkishlirasign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "turkishlirasign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “turkishlirasign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "turkishlirasign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “turkishlirasign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "turkishlirasign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “turkishlirasign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "turkishlirasign.circle.fill")
                }
                
                ///Creates the “turkishlirasign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "turkishlirasign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “turkishlirasign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "turkishlirasign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “turkishlirasign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "turkishlirasign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “turkishlirasign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "turkishlirasign.square.fill", configuration: configuration)
                }
                
                ///Creates the “turkishlirasign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "turkishlirasign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “turkishlirasign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "turkishlirasign.square.fill")
                }
                
                ///Creates the “turkishlirasign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "turkishlirasign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct tv {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “tv.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tv.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “tv.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "tv.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “tv.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tv.circle.fill", configuration: configuration)
                }
                
                ///Creates the “tv.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "tv.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “tv.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tv.circle.fill")
                }
                
                ///Creates the “tv.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "tv.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “tv.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tv.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “tv.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "tv.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “tv.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tv.fill", configuration: configuration)
            }
            
            ///Creates the “tv.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "tv.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “tv.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tv.fill")
            }
            
            ///Creates the “tv.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "tv.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct music {
            public struct note {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “tv.music.note.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "tv.music.note.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “tv.music.note.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "tv.music.note.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “tv.music.note.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "tv.music.note.fill", configuration: configuration)
                    }
                    
                    ///Creates the “tv.music.note.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "tv.music.note.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “tv.music.note.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "tv.music.note.fill")
                    }
                    
                    ///Creates the “tv.music.note.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "tv.music.note.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct u {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “u.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "u.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “u.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "u.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “u.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "u.circle.fill", configuration: configuration)
                }
                
                ///Creates the “u.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "u.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “u.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "u.circle.fill")
                }
                
                ///Creates the “u.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "u.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “u.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "u.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “u.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "u.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “u.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "u.square.fill", configuration: configuration)
                }
                
                ///Creates the “u.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "u.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “u.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "u.square.fill")
                }
                
                ///Creates the “u.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "u.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct uiwindow {
        public struct split {
            public struct x2x1 {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct umbrella {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “umbrella.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "umbrella.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “umbrella.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "umbrella.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “umbrella.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "umbrella.fill", configuration: configuration)
            }
            
            ///Creates the “umbrella.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "umbrella.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “umbrella.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "umbrella.fill")
            }
            
            ///Creates the “umbrella.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "umbrella.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct underline {
        private init() {}
    }
    
    public struct v {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “v.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "v.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “v.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "v.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “v.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "v.circle.fill", configuration: configuration)
                }
                
                ///Creates the “v.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "v.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “v.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "v.circle.fill")
                }
                
                ///Creates the “v.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "v.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “v.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "v.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “v.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "v.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “v.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "v.square.fill", configuration: configuration)
                }
                
                ///Creates the “v.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "v.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “v.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "v.square.fill")
                }
                
                ///Creates the “v.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "v.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct video {
        public struct badge {
            public struct plus {
                public struct fill {
                    private init() {}
                    #if os(macOS)
                    
                    ///Creates the “video.badge.plus.fill” system symbol image with the accessibility description you specify.
                    ///
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "video.badge.plus.fill", accessibilityDescription: accessibilityDescription)
                    }
                    
                    ///Creates the “video.badge.plus.fill” system symbol image with the variable value you specify.
                    ///
                    ///The value parameter is valid for symbols that support variable rendering.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                    ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                    @available(macOS 13.0, *)
                    @available(iOS, unavailable)
                    @available(tvOS, unavailable)
                    @available(watchOS, unavailable)
                    public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                        SFSymbolReference.image(name: "video.badge.plus.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                    }
                    
                    #endif
                    
                    #if os(iOS) || os(tvOS) || os(watchOS)
                    
                    ///Creates the “video.badge.plus.fill” system symbol image object with the specified configuration.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(macOS, unavailable)
                    public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "video.badge.plus.fill", configuration: configuration)
                    }
                    
                    ///Creates the “video.badge.plus.fill” system symbol image object with the configuration and variable value you specify.
                    ///
                    ///Use this method to retrieve system-defined symbol images.
                    ///
                    ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                    ///- Parameter configuration: The image configuration the system applies to the image.
                    ///
                    ///- Returns: The object containing the image variant that matches the specified configuration data.
                    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    @available(macOS, unavailable)
                    public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                        SFSymbolReference.image(name: "video.badge.plus.fill", variableValue: variableValue, configuration: configuration)
                    }
                    
                    #endif
                    
                    #if canImport(SwiftUI)
                    ///Creates the “video.badge.plus.fill” system symbol image.
                    ///
                    ///This initializer creates an image using a system-provided symbol.
                    public static func swiftUIImage() -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "video.badge.plus.fill")
                    }
                    
                    ///Creates the “video.badge.plus.fill” system symbol image with a variable value.
                    ///
                    ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                    ///
                    ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                    @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                    public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                        SFSymbolReference.swiftUIImage(name: "video.badge.plus.fill", variableValue: variableValue)
                    }
                    
                    #endif
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “video.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "video.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “video.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "video.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “video.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "video.circle.fill", configuration: configuration)
                }
                
                ///Creates the “video.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "video.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “video.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "video.circle.fill")
                }
                
                ///Creates the “video.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "video.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “video.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "video.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “video.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "video.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “video.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "video.fill", configuration: configuration)
            }
            
            ///Creates the “video.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "video.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “video.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "video.fill")
            }
            
            ///Creates the “video.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "video.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        public struct slash {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “video.slash.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "video.slash.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “video.slash.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "video.slash.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “video.slash.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "video.slash.fill", configuration: configuration)
                }
                
                ///Creates the “video.slash.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "video.slash.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “video.slash.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "video.slash.fill")
                }
                
                ///Creates the “video.slash.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "video.slash.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct view {
        public struct x2d {
            private init() {}
        }
        
        public struct x3d {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct viewfinder {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “viewfinder.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "viewfinder.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “viewfinder.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "viewfinder.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “viewfinder.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "viewfinder.circle.fill", configuration: configuration)
                }
                
                ///Creates the “viewfinder.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "viewfinder.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “viewfinder.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "viewfinder.circle.fill")
                }
                
                ///Creates the “viewfinder.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "viewfinder.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct w {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “w.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "w.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “w.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "w.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “w.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "w.circle.fill", configuration: configuration)
                }
                
                ///Creates the “w.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "w.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “w.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "w.circle.fill")
                }
                
                ///Creates the “w.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "w.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “w.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "w.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “w.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "w.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “w.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "w.square.fill", configuration: configuration)
                }
                
                ///Creates the “w.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "w.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “w.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "w.square.fill")
                }
                
                ///Creates the “w.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "w.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct wand {
        public struct and {
            public struct rays {
                public struct inverse {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct stars {
                public struct inverse {
                    private init() {}
                }
                
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct waveform {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “waveform.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "waveform.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “waveform.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "waveform.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “waveform.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "waveform.circle.fill", configuration: configuration)
                }
                
                ///Creates the “waveform.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "waveform.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “waveform.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "waveform.circle.fill")
                }
                
                ///Creates the “waveform.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "waveform.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct path {
            public struct badge {
                public struct minus {
                    private init() {}
                }
                
                public struct plus {
                    private init() {}
                }
                
                private init() {}
            }
            
            public struct ecg {
                private init() {}
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct wifi {
        public struct exclamationmark {
            private init() {}
        }
        
        public struct slash {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct wind {
        public struct snow {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct wonsign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “wonsign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "wonsign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “wonsign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "wonsign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “wonsign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "wonsign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “wonsign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "wonsign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “wonsign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "wonsign.circle.fill")
                }
                
                ///Creates the “wonsign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "wonsign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “wonsign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "wonsign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “wonsign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "wonsign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “wonsign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "wonsign.square.fill", configuration: configuration)
                }
                
                ///Creates the “wonsign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "wonsign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “wonsign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "wonsign.square.fill")
                }
                
                ///Creates the “wonsign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "wonsign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct wrench {
        public struct fill {
            private init() {}
            #if os(macOS)
            
            ///Creates the “wrench.fill” system symbol image with the accessibility description you specify.
            ///
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wrench.fill", accessibilityDescription: accessibilityDescription)
            }
            
            ///Creates the “wrench.fill” system symbol image with the variable value you specify.
            ///
            ///The value parameter is valid for symbols that support variable rendering.
            ///
            ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
            ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
            @available(macOS 13.0, *)
            @available(iOS, unavailable)
            @available(tvOS, unavailable)
            @available(watchOS, unavailable)
            public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                SFSymbolReference.image(name: "wrench.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
            }
            
            #endif
            
            #if os(iOS) || os(tvOS) || os(watchOS)
            
            ///Creates the “wrench.fill” system symbol image object with the specified configuration.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(macOS, unavailable)
            public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wrench.fill", configuration: configuration)
            }
            
            ///Creates the “wrench.fill” system symbol image object with the configuration and variable value you specify.
            ///
            ///Use this method to retrieve system-defined symbol images.
            ///
            ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
            ///- Parameter configuration: The image configuration the system applies to the image.
            ///
            ///- Returns: The object containing the image variant that matches the specified configuration data.
            @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            @available(macOS, unavailable)
            public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                SFSymbolReference.image(name: "wrench.fill", variableValue: variableValue, configuration: configuration)
            }
            
            #endif
            
            #if canImport(SwiftUI)
            ///Creates the “wrench.fill” system symbol image.
            ///
            ///This initializer creates an image using a system-provided symbol.
            public static func swiftUIImage() -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wrench.fill")
            }
            
            ///Creates the “wrench.fill” system symbol image with a variable value.
            ///
            ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
            ///
            ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
            @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
            public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                SFSymbolReference.swiftUIImage(name: "wrench.fill", variableValue: variableValue)
            }
            
            #endif
        }
        
        private init() {}
    }
    
    public struct x {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “x.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "x.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “x.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "x.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “x.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "x.circle.fill", configuration: configuration)
                }
                
                ///Creates the “x.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "x.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “x.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "x.circle.fill")
                }
                
                ///Creates the “x.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "x.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “x.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "x.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “x.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "x.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “x.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "x.square.fill", configuration: configuration)
                }
                
                ///Creates the “x.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "x.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “x.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "x.square.fill")
                }
                
                ///Creates the “x.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "x.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct squareroot {
            private init() {}
        }
        
        private init() {}
    }
    
    public struct xmark {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “xmark.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “xmark.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “xmark.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.circle.fill", configuration: configuration)
                }
                
                ///Creates the “xmark.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “xmark.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.circle.fill")
                }
                
                ///Creates the “xmark.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct icloud {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “xmark.icloud.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.icloud.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “xmark.icloud.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.icloud.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “xmark.icloud.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.icloud.fill", configuration: configuration)
                }
                
                ///Creates the “xmark.icloud.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.icloud.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “xmark.icloud.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.icloud.fill")
                }
                
                ///Creates the “xmark.icloud.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.icloud.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct octagon {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “xmark.octagon.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.octagon.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “xmark.octagon.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.octagon.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “xmark.octagon.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.octagon.fill", configuration: configuration)
                }
                
                ///Creates the “xmark.octagon.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.octagon.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “xmark.octagon.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.octagon.fill")
                }
                
                ///Creates the “xmark.octagon.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.octagon.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct rectangle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “xmark.rectangle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.rectangle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “xmark.rectangle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.rectangle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “xmark.rectangle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.rectangle.fill", configuration: configuration)
                }
                
                ///Creates the “xmark.rectangle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.rectangle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “xmark.rectangle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.rectangle.fill")
                }
                
                ///Creates the “xmark.rectangle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.rectangle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct seal {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “xmark.seal.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.seal.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “xmark.seal.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.seal.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “xmark.seal.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.seal.fill", configuration: configuration)
                }
                
                ///Creates the “xmark.seal.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.seal.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “xmark.seal.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.seal.fill")
                }
                
                ///Creates the “xmark.seal.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.seal.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct shield {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “xmark.shield.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.shield.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “xmark.shield.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.shield.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “xmark.shield.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.shield.fill", configuration: configuration)
                }
                
                ///Creates the “xmark.shield.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.shield.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “xmark.shield.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.shield.fill")
                }
                
                ///Creates the “xmark.shield.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.shield.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “xmark.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “xmark.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "xmark.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “xmark.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.square.fill", configuration: configuration)
                }
                
                ///Creates the “xmark.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "xmark.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “xmark.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.square.fill")
                }
                
                ///Creates the “xmark.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "xmark.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct y {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “y.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "y.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “y.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "y.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “y.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "y.circle.fill", configuration: configuration)
                }
                
                ///Creates the “y.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "y.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “y.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "y.circle.fill")
                }
                
                ///Creates the “y.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "y.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “y.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "y.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “y.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "y.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “y.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "y.square.fill", configuration: configuration)
                }
                
                ///Creates the “y.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "y.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “y.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "y.square.fill")
                }
                
                ///Creates the “y.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "y.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct yensign {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “yensign.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "yensign.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “yensign.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "yensign.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “yensign.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "yensign.circle.fill", configuration: configuration)
                }
                
                ///Creates the “yensign.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "yensign.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “yensign.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "yensign.circle.fill")
                }
                
                ///Creates the “yensign.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "yensign.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “yensign.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "yensign.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “yensign.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "yensign.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “yensign.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "yensign.square.fill", configuration: configuration)
                }
                
                ///Creates the “yensign.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "yensign.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “yensign.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "yensign.square.fill")
                }
                
                ///Creates the “yensign.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "yensign.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct z {
        public struct circle {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “z.circle.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "z.circle.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “z.circle.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "z.circle.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “z.circle.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "z.circle.fill", configuration: configuration)
                }
                
                ///Creates the “z.circle.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "z.circle.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “z.circle.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "z.circle.fill")
                }
                
                ///Creates the “z.circle.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "z.circle.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        public struct square {
            public struct fill {
                private init() {}
                #if os(macOS)
                
                ///Creates the “z.square.fill” system symbol image with the accessibility description you specify.
                ///
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "z.square.fill", accessibilityDescription: accessibilityDescription)
                }
                
                ///Creates the “z.square.fill” system symbol image with the variable value you specify.
                ///
                ///The value parameter is valid for symbols that support variable rendering.
                ///
                ///- Parameter variableValue: The value the system uses to customize the symbol’s content, between `0` and `1`.
                ///- Parameter accessibilityDescription: The accessibility description for the symbol image, if any.
                @available(macOS 13.0, *)
                @available(iOS, unavailable)
                @available(tvOS, unavailable)
                @available(watchOS, unavailable)
                public static func image(variableValue: Double, accessibilityDescription: String? = nil) -> NSImage {
                    SFSymbolReference.image(name: "z.square.fill", variableValue: variableValue, accessibilityDescription: accessibilityDescription)
                }
                
                #endif
                
                #if os(iOS) || os(tvOS) || os(watchOS)
                
                ///Creates the “z.square.fill” system symbol image object with the specified configuration.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(macOS, unavailable)
                public static func image(withConfiguration configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "z.square.fill", configuration: configuration)
                }
                
                ///Creates the “z.square.fill” system symbol image object with the configuration and variable value you specify.
                ///
                ///Use this method to retrieve system-defined symbol images.
                ///
                ///- Parameter variableValue: The value the system uses to customize the image content, between `0` and `1`.
                ///- Parameter configuration: The image configuration the system applies to the image.
                ///
                ///- Returns: The object containing the image variant that matches the specified configuration data.
                @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                @available(macOS, unavailable)
                public static func image(withVariableValue variableValue: Double, configuration: SFSymbolReference.Image.Configuration? = nil) -> UIImage {
                    SFSymbolReference.image(name: "z.square.fill", variableValue: variableValue, configuration: configuration)
                }
                
                #endif
                
                #if canImport(SwiftUI)
                ///Creates the “z.square.fill” system symbol image.
                ///
                ///This initializer creates an image using a system-provided symbol.
                public static func swiftUIImage() -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "z.square.fill")
                }
                
                ///Creates the “z.square.fill” system symbol image with a variable value.
                ///
                ///This initializer creates an image using a system-provided symbol. The rendered symbol may alter its appearance to represent the value provided in `variableValue`.
                ///
                ///- Parameter variableValue: An optional value between `0.0` and `1.0` that the rendered image can use to customize its appearance, if specified. If the symbol doesn’t support variable values, this parameter has no effect. Use the SF Symbols app to look up which symbols support variable values.
                @available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
                public static func swiftUIImage(variableValue: Double?) -> SwiftUI.Image {
                    SFSymbolReference.swiftUIImage(name: "z.square.fill", variableValue: variableValue)
                }
                
                #endif
            }
            
            private init() {}
        }
        
        private init() {}
    }
    
    public struct zzz {
        private init() {}
    }
    
    private init() {}
}

